<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="argDtLogFile" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>5313,14993</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Orchestrator</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="5323,14928" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="M" />
      <Variable x:TypeArguments="x:String" Name="C" />
      <Variable x:TypeArguments="x:String" Name="P" />
      <Variable x:TypeArguments="x:String" Name="E" />
      <Variable x:TypeArguments="x:String" Name="PUBLICATION_CODE" />
      <Variable x:TypeArguments="x:String" Name="Invoice_Num" />
      <Variable x:TypeArguments="x:String" Name="PDF_Amount" />
      <Variable x:TypeArguments="x:String" Name="PDF_MOS" />
      <Variable x:TypeArguments="x:Int32" Name="Flag" />
      <Variable x:TypeArguments="sd:DataTable" Name="RunSheetDT" />
      <Variable x:TypeArguments="x:Int32" Name="insertion_Count" />
      <Variable x:TypeArguments="sd:DataTable" Name="Tag_Status_DT" />
      <Variable x:TypeArguments="x:String" Name="Tag_Status" />
      <Variable x:TypeArguments="x:Boolean" Name="Report_File" />
      <Variable x:TypeArguments="x:Boolean" Name="Confirmation" />
      <Variable x:TypeArguments="x:String" Name="inv_num_temp" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_Connection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtRecords" />
      <Variable x:TypeArguments="x:String" Name="PDF_TaxAmount" />
      <Variable x:TypeArguments="x:String" Name="Inv_Comment" />
      <Variable x:TypeArguments="x:String" Name="IsMultiBuy" />
      <Variable x:TypeArguments="x:String" Name="StampComment" />
      <Variable x:TypeArguments="x:String" Name="strYear" />
      <Variable x:TypeArguments="x:String" Name="strMonth" />
      <Variable x:TypeArguments="x:Double" Name="dblTotalAmt" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="isValidTax" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="isTaxRowPresent" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="isTaxAmountValid" />
      <Variable x:TypeArguments="x:String" Name="strPbtRowsCount" />
      <Variable x:TypeArguments="x:Boolean" Name="boolInvNum" />
      <Variable x:TypeArguments="x:Boolean" Name="boolInvAmount" />
      <Variable x:TypeArguments="x:String" Name="strAmountComment" />
      <Variable x:TypeArguments="x:String" Name="Vendor" />
      <Variable x:TypeArguments="x:String" Name="strFAName" />
      <Variable x:TypeArguments="s:String[]" Name="arrFAName" />
      <Variable x:TypeArguments="x:String" Name="strFirstName" />
      <Variable x:TypeArguments="x:String" Name="strLastInitial" />
      <Variable x:TypeArguments="x:Boolean" Name="isEligibleforTagging" />
      <Variable x:TypeArguments="x:String" Name="PDF_MOS_Unedited" />
      <Variable x:TypeArguments="x:String" Name="ID" />
      <Variable x:TypeArguments="x:String" Name="isSegmentBuy" />
      <Variable x:TypeArguments="x:String" Name="UnpaidInvoiceComment" />
      <Variable x:TypeArguments="x:String" Name="Agency" />
      <Variable x:TypeArguments="x:Int32" Name="intCommentLength" />
      <Variable x:TypeArguments="x:String" Name="strLog_id" />
      <Variable x:TypeArguments="x:String" Name="strPBT_Recon_Status" />
      <Variable x:TypeArguments="x:String" Name="strMultiInvoiceID" />
      <Variable x:TypeArguments="x:String" Name="strCurrent_DateTime" />
      <Variable x:TypeArguments="s:String[]" Name="arrInv_Comment" />
      <Variable x:TypeArguments="x:String" Name="str_Taxamount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Reason" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Arch" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="5281,55" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="5281,842" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[M]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("MediaLookup").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[C]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("C").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[P]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("P").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[E]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("E").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Invoice_Num]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Invoice_Num").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PDF_Amount]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PDF_Amount").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PDF_MOS").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PDF_TaxAmount]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PDF_TAX_Amount").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Invoice Comment").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[IsMultiBuy]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("IsMultiBuy").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[StampComment]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Stamp Comment").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Vendor]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Vendor").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFAName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Finance Associate").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrFAName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[strFAName.Split(" ".ToCharArray)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[arrFAName(0).ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strLastInitial]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[arrFAName(1)(0).ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFAName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[strFirstName+"."+strLastInitial]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PDF_MOS_Unedited]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PDF_MOS]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ID").ToString.Trim]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[isSegmentBuy]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("IsSegmentBuy").ToString.Trim]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Agency]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Agency").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strLog_id]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strPBT_Recon_Status]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PBT_Recon_Status").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strMultiInvoiceID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Multi Invoice ID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strCurrent_DateTime]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[System.DateTime.Now.ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <If Condition="[strPBT_Recon_Status.ToString.ToLower.Contains(&quot;na&quot;)]" sap:VirtualizedContainerService.HintSize="5281,208" sap2010:WorkflowViewState.IdRef="If_76">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_103">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strPBT_Recon_Status]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="5281,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Processing Record : &quot;+ Invoice_Num]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="5281,61" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="[in_Config(&quot;SQLDatabaseConnectionStringDev&quot;).ToString +in_Config(&quot;SQLDatabaseProviderName&quot;).ToString]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="5281,229" sap2010:WorkflowViewState.IdRef="CommentOut_38">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_123">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DatabaseConnect DatabaseConnection="[DB_Connection]" DisplayName="Connect - DEV" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_3" ProviderName="[in_Config(&quot;SQLDatabaseProviderName&quot;).ToString]" ConnectionString="[in_Config(&quot;SQLDatabaseConnectionStringDev&quot;).ToString]" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:DatabaseConnect DatabaseConnection="[DB_Connection]" DisplayName="Connect - PROD" sap:VirtualizedContainerService.HintSize="5281,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_4" ProviderName="[in_Config(&quot;SQLDatabaseProviderName&quot;).ToString]" ConnectionString="[in_Config(&quot;SQLDatabaseConnectionStringProd&quot;).ToString]" />
    <Sequence sap:VirtualizedContainerService.HintSize="5281,242" sap2010:WorkflowViewState.IdRef="Sequence_119">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="arrResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[Vendor]" IsBuilderTabModified="False" Pattern="\(([0-9,]*?)\)" RegexOption="IgnoreCase, Compiled" Result="[arrResult]" />
      <If Condition="[arrResult.Count &gt; 0]" DisplayName="If - Vendor Column does not contain Pub Code in bracket" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="304,452" sap2010:WorkflowViewState.IdRef="Sequence_118">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_99">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PUBLICATION_CODE]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[arrResult(0).ToString.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_100">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PUBLICATION_CODE]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[PUBLICATION_CODE.Replace("(","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_101">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PUBLICATION_CODE]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[PUBLICATION_CODE.Replace(")","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_102">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PUBLICATION_CODE]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[PUBLICATION_CODE.TrimStart("0"c).ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence sap:VirtualizedContainerService.HintSize="5281,300" sap2010:WorkflowViewState.IdRef="Sequence_103">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[not PDF_TaxAmount.IsNullOrEmpty andAlso convert.ToDouble(PDF_TaxAmount).Equals(0)]" DisplayName="If - make 0 as null, it is handled in further code" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_66">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_85">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[PDF_TaxAmount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <Sequence sap:VirtualizedContainerService.HintSize="5281,792" sap2010:WorkflowViewState.IdRef="Sequence_58">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="arrPDF_MOS" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_43">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[arrPDF_MOS]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[PDF_MOS.Split("-".ToCharArray)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_44">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strYear]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrPDF_MOS(0).ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_45">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strMonth]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrPDF_MOS(1).ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[strMonth.Trim.Length &gt; 1]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_67">
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_105">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_86">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strMonth]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["0"+strMonth]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strYear.Trim+"-"+strMonth.Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <If Condition="[PDF_MOS.ToString.Contains(&quot;-01&quot;)]" sap:VirtualizedContainerService.HintSize="5281,208" sap2010:WorkflowViewState.IdRef="If_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["1/1/"+strYear+"-1/31/"+strYear]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <If Condition="[PDF_MOS.ToString.Contains(&quot;-02&quot;)]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="611,300" sap2010:WorkflowViewState.IdRef="Sequence_59">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[strYear.ToString.Contains(&quot;24&quot;) or strYear.ToString.Contains(&quot;28&quot;) or strYear.ToString.Contains(&quot;32&quot;)]" DisplayName="If - leap year" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_41">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["2/1/"+strYear+"-2/29/"+strYear]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["2/1/"+strYear+"-2/28/"+strYear]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <If Condition="[PDF_MOS.ToString.Contains(&quot;-03&quot;)]" sap:VirtualizedContainerService.HintSize="3247,1540" sap2010:WorkflowViewState.IdRef="If_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["3/1/"+strYear+"-3/31/"+strYear]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <If Condition="[PDF_MOS.ToString.Contains(&quot;-04&quot;)]" sap:VirtualizedContainerService.HintSize="2940,1392" sap2010:WorkflowViewState.IdRef="If_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["4/1/"+strYear+"-4/30/"+strYear]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <If Condition="[PDF_MOS.ToString.Contains(&quot;-05&quot;)]" sap:VirtualizedContainerService.HintSize="2633,1244" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["5/1/"+strYear+"-5/31/"+strYear]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <If Condition="[PDF_MOS.ToString.Contains(&quot;-06&quot;)]" sap:VirtualizedContainerService.HintSize="2326,1096" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["6/1/"+strYear+"-6/30/"+strYear]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <If Condition="[PDF_MOS.ToString.Contains(&quot;-07&quot;)]" sap:VirtualizedContainerService.HintSize="2019,948" sap2010:WorkflowViewState.IdRef="If_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["7/1/"+strYear+"-7/31/"+strYear]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <If Condition="[PDF_MOS.ToString.Contains(&quot;-08&quot;)]" sap:VirtualizedContainerService.HintSize="1712,800" sap2010:WorkflowViewState.IdRef="If_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["8/1/"+strYear+"-8/31/"+strYear]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[PDF_MOS.ToString.Contains(&quot;-09&quot;)]" sap:VirtualizedContainerService.HintSize="1405,652" sap2010:WorkflowViewState.IdRef="If_4">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["9/1/"+strYear+"-9/30/"+strYear]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[PDF_MOS.ToString.Contains(&quot;-10&quot;)]" sap:VirtualizedContainerService.HintSize="1098,504" sap2010:WorkflowViewState.IdRef="If_3">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["10/1/"+strYear+"-10/31/"+strYear]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[PDF_MOS.ToString.Contains(&quot;-11&quot;)]" sap:VirtualizedContainerService.HintSize="791,356" sap2010:WorkflowViewState.IdRef="If_2">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["11/1/"+strYear+"-11/30/"+strYear]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[PDF_MOS.ToString.Contains(&quot;-12&quot;)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[PDF_MOS]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["12/1/"+strYear+"-12/31/"+strYear]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </If.Then>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
              </If.Else>
            </If>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <Assign DisplayName="Assign - trim leading 0" sap:VirtualizedContainerService.HintSize="5281,60" sap2010:WorkflowViewState.IdRef="Assign_68">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[E]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[E.TrimStart("0"c).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[isValidTax and not string.IsNullOrEmpty(E.Trim) and not String.IsNullOrEmpty(PDF_Amount) and isTaxAmountValid and isTaxRowPresent]" DisplayName="If - M,C,P,E data not matches with data in Database" sap:VirtualizedContainerService.HintSize="5281,10905" sap2010:WorkflowViewState.IdRef="If_26">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="4439,10757" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[RunSheetDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="4397,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_5" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;CPE&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;INVNUM&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;INVAMOUNT&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{(C.ToString+&quot;/&quot;+P.ToString+&quot;/&quot;+E.ToString),Invoice_Num.ToString, PDF_Amount.ToString}]" DataTable="[RunSheetDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="4397,22" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="In this workflow we insert required data on pbt application like M,C,P,E,Insertion date and click on Next button" DisplayName="Invoke PrintBuyToolKit_DLCriteria_CPE workflow" sap:VirtualizedContainerService.HintSize="4397,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_DLCriteria_CPE.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="MediaCode">[M]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ClientCode">[C]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ProductCode">[P]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="EstimateCode">[E]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InsertionDate">[PDF_MOS]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="In this workflow we insert and check some fields like vendor code paid or unpaid and submit " DisplayName="Invoke PrintBuyToolKit_DLCriteria_Vendor workflow" sap:VirtualizedContainerService.HintSize="4397,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_DLCriteria_Vendor.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="VendorCode">[PUBLICATION_CODE]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="Flag">[Flag]</OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="MediaCode">[M]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <If Condition="[Flag = 0]" sap:VirtualizedContainerService.HintSize="4397,10116" sap2010:WorkflowViewState.IdRef="If_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="984,5192" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_CloseDLWizard workflow" sap:VirtualizedContainerService.HintSize="942,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_CloseDLWizard.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="942,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Invalid CPE Combination&quot;]" />
                <ui:BuildDataTable DataTable="[Tag_Status_DT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="942,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_6" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;C&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;P&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;E&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tagged_Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                <Assign sap:VirtualizedContainerService.HintSize="942,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Invalid CPE or MOS Combination</InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="942,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0,PBT_Tag_Status = '&quot;+Tag_Status.ToString+&quot;',PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID like ('&quot;+ID.ToString+&quot;')&quot;]" />
                <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="942,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0,PBT_Tag_Status = '&quot;+Tag_Status.ToString+&quot;',PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID like ('&quot;+ID.ToString+&quot;')&quot;]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Arch]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="942,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_36" Sql="[&quot;select  olt.*,ofm.fa_email_id,ofm1.fa_email_id as FAupdatedBy from OOH_log_txn olt inner join OOH_FA_Master ofm on ofm.fa_id=olt.Log_FA_ID left join OOH_FA_Master ofm1 on ofm1.fa_id=olt.Log_FA_UpdateBy_ID where Log_ID='&quot;+ID+&quot;'&quot;]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Reason]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="942,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_37" Sql="select UR_ID from [dbo].[OOH_UpdateReason_Ref] where UR_Reason_Description='Invoice is tagged to incorrect buy'">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <If Condition="[dt_Arch.Rows.Count&gt;0 and dt_Reason.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="671,777" sap2010:WorkflowViewState.IdRef="If_82">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="526,629" sap2010:WorkflowViewState.IdRef="Sequence_126">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[dt_Arch.Rows(0)("Log_Tax_Amount").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[string.IsNullOrEmpty(str_Taxamount)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_81">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">NULL</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]" />
                      <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_3" Sql="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]">
                        <ui:ExecuteNonQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteNonQuery.Parameters>
                      </ui:ExecuteNonQuery>
                    </Sequence>
                  </If.Then>
                </If>
                <Sequence DisplayName="Sequence - update ooh_pbt_txn db for Multi Invoice 1 buy records" sap:VirtualizedContainerService.HintSize="942,1948" sap2010:WorkflowViewState.IdRef="Sequence_114">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[IsMultiBuy.ToString.ToLower.Contains(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="900,1856" sap2010:WorkflowViewState.IdRef="If_69">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="755,1708" sap2010:WorkflowViewState.IdRef="Sequence_113">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Sequence - Update DB for children invoices in MI-1B scenarios" sap:VirtualizedContainerService.HintSize="713,1616" sap2010:WorkflowViewState.IdRef="Sequence_112">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:String[]" Name="arrInv_Comment" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace("W/ ","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace(",","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[arrInv_Comment]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[Inv_Comment.Split(" ".ToCharArray)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["Invalid CPE Combination"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="671,51" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[arrInv_Comment]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,311" sap2010:WorkflowViewState.IdRef="Sequence_111">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Update ooh_pbt_txn set  PBT_Tagged = 0, PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]" />
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_28" Sql="[&quot;Update ooh_pbt_txn set  PBT_Tagged = 0, PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                  </ui:ExecuteQuery>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Arch]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_34" Sql="[&quot;select  olt.*,ofm.fa_email_id,ofm1.fa_email_id as FAupdatedBy from OOH_log_txn olt inner join OOH_FA_Master ofm on ofm.fa_id=olt.Log_FA_ID left join OOH_FA_Master ofm1 on ofm1.fa_id=olt.Log_FA_UpdateBy_ID where Log_ID='&quot;+ID+&quot;'&quot;]">
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                          </ui:ExecuteQuery>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Reason]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_35" Sql="select UR_ID from [dbo].[OOH_UpdateReason_Ref] where UR_Reason_Description='Invoice is tagged to incorrect buy'">
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                          </ui:ExecuteQuery>
                          <If Condition="[dt_Arch.Rows.Count&gt;0 and dt_Reason.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="671,777" sap2010:WorkflowViewState.IdRef="If_80">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="526,629" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[dt_Arch.Rows(0)("Log_Tax_Amount").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[string.IsNullOrEmpty(str_Taxamount)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_79">
                                  <If.Then>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">NULL</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]" />
                                <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]">
                                  <ui:ExecuteNonQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteNonQuery.Parameters>
                                </ui:ExecuteNonQuery>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{C.ToString, P.ToString, E.ToString, Invoice_Num.ToString, PDF_Amount, Tag_Status.ToString}]" DataTable="[Tag_Status_DT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="942,22" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                <ui:PathExists DisplayName="Path Exists" Exists="[Report_File]" sap:VirtualizedContainerService.HintSize="942,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" PathType="File" />
                <If Condition="[Report_File]" sap:VirtualizedContainerService.HintSize="942,537" sap2010:WorkflowViewState.IdRef="If_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:AppendRange DataTable="[Tag_Status_DT]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_4" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,389" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,224" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CreateFile ContinueOnError="{x:Null}" DisplayName="Create File" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="CreateFile_4" Name="Report_2021-09-27.xlsx" Path="C:\Users\.Kore-s\Desktop\Report" />
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <ui:WriteRange AddHeaders="True" DataTable="[Tag_Status_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report__&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]">
                        <ui:WriteRange.StartingCell>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:WriteRange.StartingCell>
                      </ui:WriteRange>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,143" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="C:\Users\.Kore-s\Desktop\Report\Report_2021-09-27.xlsx">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[Tag_Status_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_CloseWks_NoChange workflow" sap:VirtualizedContainerService.HintSize="942,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_CloseWks_NoChange.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'adbuyer.exe Print'" sap:VirtualizedContainerService.HintSize="942,106" sap2010:WorkflowViewState.IdRef="Activate_2">
                  <ui:Activate.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d1981706-7d67-4367-ac7d-9b7dbf3fc696" InformativeScreenshot="c497fba80274eb5ed529debf31366792" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6MDIForm' title='Print Buy Toolkit*' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Activate.Target>
                </ui:Activate>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="942,116" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="n" KeyModifiers="Ctrl">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a5a06cd2-5e3a-4614-b81e-9c7f6dc27ac3">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6CommandButton'" sap:VirtualizedContainerService.HintSize="942,106" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a31a43ed-dee1-4446-9ee2-cea9ce8057a8" InformativeScreenshot="758c65a14409c8011a08453cc575de03" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='*' /&gt;&lt;wnd cls='ThunderRT6CommandButton' title='OK' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="3368,9968" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:Image" Name="argimgScreenshot" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="In this workflow we get Insertion count ond confirmation message" DisplayName="Invoke PrintBuyToolKit_DLConfirmation_GetInsertionCount workflow" sap:VirtualizedContainerService.HintSize="3326,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_DLConfirmation_GetInsertionCount.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="x:Int32" x:Key="out_InsertionCount">[insertion_Count]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_DLConfirmation_OK workflow" sap:VirtualizedContainerService.HintSize="3326,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_DLConfirmation_OK.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="ui:Image" x:Key="imgScreenshot">[argimgScreenshot]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Delay DisplayName="Delay - Wait for Tagging screen to load" Duration="00:00:10" sap:VirtualizedContainerService.HintSize="3326,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                <If Condition="[insertion_Count &gt; 0]" DisplayName="If - check invoice num and amount already present, and exclude free buys rows  from PBT" sap:VirtualizedContainerService.HintSize="3326,1062" sap2010:WorkflowViewState.IdRef="If_56">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="798,914" sap2010:WorkflowViewState.IdRef="Sequence_87">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="varQuery" />
                        <Variable x:TypeArguments="sd:DataTable" Name="dtUntrackedInvoices" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[insertion_Count &gt;2 or (insertion_count &gt; 1 and  string.IsNullOrEmpty(PDF_TaxAmount))]" sap:VirtualizedContainerService.HintSize="756,631" sap2010:WorkflowViewState.IdRef="If_57">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="611,483" sap2010:WorkflowViewState.IdRef="Sequence_89">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Remove all the paid/free buys from PBT tagging screen" DisplayName="Invoke Exclude Free Multiple Buys workflow" sap:VirtualizedContainerService.HintSize="569,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Exclude Free Multiple Buys.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:String" x:Key="outRowsCount">[strPbtRowsCount]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[isSegmentBuy.Trim.ToLower.Equals(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_71">
                              <If.Then>
                                <Assign DisplayName="Assign - set it as 1 so that further condition change is not required" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[insertion_Count]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign DisplayName="Assign - after excluding free buys rows we have only 2 buy rows at max" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[insertion_Count]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(strPbtRowsCount) - 3]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                      <Assign sap:VirtualizedContainerService.HintSize="756,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[isEligibleforTagging]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="756,51" sap2010:WorkflowViewState.IdRef="CommentOut_39">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="563,600" sap2010:WorkflowViewState.IdRef="Sequence_130">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[not IsMultiBuy.ToLower.Contains(&quot;true&quot;) AndAlso not isSegmentBuy.ToLower.Equals(&quot;true&quot;)]" DisplayName="If - multiinvoice  1 buy scenario, edit the PBT worksheet, else check if amount already present" sap:VirtualizedContainerService.HintSize="521,508" sap2010:WorkflowViewState.IdRef="If_68">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,361" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Scrape Tagging screen and check if invoice num and invoice amount is already tagged to the invoice&#xA;" DisplayName="Invoke Read Tagging Screen PBT workflow" sap:VirtualizedContainerService.HintSize="334,169" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Read Tagging Screen PBT.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="boolInvNum">[boolInvNum]</OutArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="boolInvAmount">[boolInvAmount]</OutArgument>
                                      <OutArgument x:TypeArguments="ui:Image" x:Key="argImgScreenshot">[argimgScreenshot]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="Assign - check if invoice amount and number present. If Yes - do not tag " sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[isEligibleforTagging]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">[boolInvAmount and boolInvNum]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                  </If.Then>
                </If>
                <If Condition="[(insertion_Count = 1 or (insertion_Count = 2 and not string.IsNullOrEmpty(PDF_TaxAmount)))]" sap:VirtualizedContainerService.HintSize="3326,8366" sap2010:WorkflowViewState.IdRef="If_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="1218,8218" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap:VirtualizedContainerService.HintSize="1176,8126" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="Save_Dialogue" />
                          <Variable x:TypeArguments="x:String" Name="OutInvAmount" />
                          <Variable x:TypeArguments="x:String" Name="OutTaxAmount" />
                          <Variable x:TypeArguments="x:Boolean" Name="isTagged" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1134,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Insertion Count :&quot;+insertion_Count.ToString]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Navigate on Tagging screen and type the required values to corresponding columns" DisplayName="Invoke Tagging Screen workflow" sap:VirtualizedContainerService.HintSize="1134,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Tagging Screen.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="argInsertionCount">[insertion_Count]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="C">[C]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="P">[P]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="E">[E]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Invoice_Num">[Invoice_Num]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="PDF_Amount">[PDF_Amount]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="PDF_TaxAmount">[PDF_TaxAmount]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Inv_Comment">[Inv_Comment]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="isMultiInvoice1Buy">[IsMultiBuy]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="argOutInvAmount">[OutInvAmount]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="argOutTaxAmount">[OutTaxAmount]</OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="isTagged">[isTagged]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argFAName">[strFAName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argID">[ID]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argIsSegmentBuy">[isSegmentBuy]</InArgument>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="DB_Connection">[DB_Connection]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argMOS">[PDF_MOS_Unedited]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argUnpaidInvComment">[UnpaidInvoiceComment]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="intCommentLength">[intCommentLength]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1134,229" sap2010:WorkflowViewState.IdRef="CommentOut_40">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_131">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box - Debug" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Stop&quot;]" />
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <Sequence sap:VirtualizedContainerService.HintSize="1134,2776" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="962,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="Save the PBT Worksheet flow starts below" />
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="962,116" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="k" KeyModifiers="Alt">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="21dfe8fb-d8e5-490c-b984-a628054f6f69">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                          </ui:SendHotkey>
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="962,116" sap2010:WorkflowViewState.IdRef="SendHotkey_27" Key="s" KeyModifiers="None">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a5029fb6-584f-4736-97b9-ce11ef0bad6e">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                          </ui:SendHotkey>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="962,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="abc.abd">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="05bdd3bc-0857-49f1-a32d-6ce3306df55f" InformativeScreenshot="a30d3cd76022ef10a21eff2a54d507c1" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Save Worksheet As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TypeInto.Target>
                          </ui:TypeInto>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="962,106" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0cb445a1-1c2c-4ea4-b94d-1055b72a0ddf" InformativeScreenshot="5e9d317a76bb3025a251ffd656581464" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Save Worksheet As' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Save' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:UiElementExists DisplayName="Element Exists 'adbuyer.exe Confirm'" Exists="[Save_Dialogue]" sap:VirtualizedContainerService.HintSize="962,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="89381b62-84b4-4be9-b3d1-cf07f31e47ac" InformativeScreenshot="5bb8d80a465785a6c24f5da47f4f5078" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Confirm Save As' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                          <If Condition="[Save_Dialogue]" sap:VirtualizedContainerService.HintSize="962,254" sap2010:WorkflowViewState.IdRef="If_27">
                            <If.Then>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9096bf34-9f2a-4043-8366-070b0c7bd5af" InformativeScreenshot="71af12d8329034556ec588437f700039" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Confirm Save As' /&gt;&lt;wnd aaname='Confirm Save As' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Yes' cls='Button' title='&amp;amp;Yes' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </If.Then>
                          </If>
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="962,116" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="k" KeyModifiers="Alt">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a5029fb6-584f-4736-97b9-ce11ef0bad6e">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                          </ui:SendHotkey>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'menu item  Upload...'" sap:VirtualizedContainerService.HintSize="962,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f63a91b-c4a0-49ea-9ab8-a1c751d80b17" InformativeScreenshot="379e9598e3d4e64e5d0389b049f8ec43" Selector="&lt;wnd app='adbuyer.exe' cls='ABSxPopup' idx='*' /&gt;&lt;ctrl name='Upload...' role='menu item' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <If Condition="[insertion_Count &gt;1 and (not String.IsNullOrEmpty(PDF_TaxAmount) andalso Convert.ToDouble(PDF_TaxAmount) &lt;&gt; 0) and not isSegmentBuy.ToLower.Equals(&quot;true&quot;)]" DisplayName="If - click on upload both insertion radio button" sap:VirtualizedContainerService.HintSize="962,629" sap2010:WorkflowViewState.IdRef="If_73">
                            <If.Then>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6OptionButton'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91825cc4-e5ac-43d2-a562-1b9b980a9b26" InformativeScreenshot="2a1ed2e5c9d7f92366c90a92cb7fdceb" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='Upload*' /&gt;&lt;wnd cls='ThunderRT6Frame' title='*' /&gt;&lt;wnd aaname='Upload*(2*)' cls='ThunderRT6OptionButton' title='Upload*' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </If.Then>
                            <If.Else>
                              <If Condition="[isSegmentBuy.ToLower.Equals(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="583,481" sap2010:WorkflowViewState.IdRef="If_72">
                                <If.Then>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Try>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6OptionButton'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91825cc4-e5ac-43d2-a562-1b9b980a9b26" InformativeScreenshot="eae0aa0956d2ec3577e13ed146c7b549" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='Upload Insertions' /&gt;&lt;wnd cls='ThunderRT6Frame' title='Would you like to' /&gt;&lt;wnd aaname='Upload all insertions in current view (* insertions)' cls='ThunderRT6OptionButton' title='Upload &amp;amp;all insertions in current view (* insertions)' /&gt;" TimeoutMS="2000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </If.Then>
                              </If>
                            </If.Else>
                          </If>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6CommandButton'" sap:VirtualizedContainerService.HintSize="962,106" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="86fe56fd-0264-4d80-8c33-d02cfb7ad011" InformativeScreenshot="d876a6b718c8bb7f3650abcc2763fd6a" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='Upload Insertions' /&gt;&lt;wnd cls='ThunderRT6CommandButton' title='OK' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:UiElementExists DisplayName="Element Exists 'Static'" Exists="[Confirmation]" sap:VirtualizedContainerService.HintSize="962,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="48ec5c71-4144-41e5-962f-63f94b8d20d1" InformativeScreenshot="679bc12aee9c9feb4656f8ab53de2ce7" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Upload Confirmation' /&gt;&lt;wnd ctrlid='65535' title='*insertion* successfully uploaded.' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                          <If Condition="[Confirmation]" sap:VirtualizedContainerService.HintSize="962,254" sap2010:WorkflowViewState.IdRef="If_20">
                            <If.Then>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9c905972-4d8f-4587-b1f4-bc679bc6b1b4" InformativeScreenshot="26e20a1e94d3a12eb37a719f3563ee10" Selector="&lt;wnd app='adbuyer.exe' cls='#32770' title='Upload Confirmation' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </If.Then>
                          </If>
                        </Sequence>
                        <ui:BuildDataTable DataTable="[Tag_Status_DT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1134,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_7" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;C&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;P&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;E&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tagged_Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                        <If Condition="[isTagged]" sap:VirtualizedContainerService.HintSize="1134,1632" sap2010:WorkflowViewState.IdRef="If_43">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,411" sap2010:WorkflowViewState.IdRef="Sequence_67">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Tag Status : Yes&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_30" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 1 ,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID in(&quot;+ID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                <ui:ExecuteQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="713,1484" sap2010:WorkflowViewState.IdRef="Sequence_68">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="671,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Tag Status : Segment Not found on PBT&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Segment Not found on PBT</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_31" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0 ,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID in(&quot;+ID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                <ui:ExecuteQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Arch]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_40" Sql="[&quot;select  olt.*,ofm.fa_email_id,ofm1.fa_email_id as FAupdatedBy from OOH_log_txn olt inner join OOH_FA_Master ofm on ofm.fa_id=olt.Log_FA_ID left join OOH_FA_Master ofm1 on ofm1.fa_id=olt.Log_FA_UpdateBy_ID where Log_ID='&quot;+ID+&quot;'&quot;]">
                                <ui:ExecuteQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Reason]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_41" Sql="select UR_ID from [dbo].[OOH_UpdateReason_Ref] where UR_Reason_Description='Invoice is tagged to incorrect buy'">
                                <ui:ExecuteQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                              <If Condition="[dt_Arch.Rows.Count&gt;0 and dt_Reason.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="671,777" sap2010:WorkflowViewState.IdRef="If_86">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,629" sap2010:WorkflowViewState.IdRef="Sequence_128">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[dt_Arch.Rows(0)("Log_Tax_Amount").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[string.IsNullOrEmpty(str_Taxamount)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_85">
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">NULL</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]" />
                                    <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_5" Sql="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]">
                                      <ui:ExecuteNonQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteNonQuery.Parameters>
                                    </ui:ExecuteNonQuery>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="1134,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strAmountComment]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[" Total Amount : "+PDF_Amount+" Subtotal Amount : "+OutInvAmount+" Tax Amount : "+OutTaxAmount+" "]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Sequence - update ooh_pbt_txn db for Multi Invoice 1 buy records" sap:VirtualizedContainerService.HintSize="1134,1567" sap2010:WorkflowViewState.IdRef="Sequence_56">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[IsMultiBuy.ToString.ToLower.Contains(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="743,1475" sap2010:WorkflowViewState.IdRef="If_38">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="598,1327" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Sequence - Update DB for children invoices in MI-1B scenarios" sap:VirtualizedContainerService.HintSize="556,1235" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="s:String[]" Name="arrInv_Comment" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="514,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace("W/ ","")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="514,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace(",","")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="514,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[arrInv_Comment]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[Inv_Comment.Split(" ".ToCharArray)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="514,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Multi_Invoice_Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="514,743" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrInv_Comment]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="478,609" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="436,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Tag_Status not like 'yes' and PBT_MultiInv_Batch_Details like '&quot;+C+&quot;_&quot;+P+&quot;_&quot;+E+&quot;_&quot;+PDF_MOS_Unedited+&quot;_&quot;+PUBLICATION_CODE+&quot;%'&quot;]" />
                                          <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="436,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_12" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 1 ,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                            <ui:ExecuteQuery.Parameters>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:ExecuteQuery.Parameters>
                                          </ui:ExecuteQuery>
                                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,258" sap2010:WorkflowViewState.IdRef="CommentOut_36">
                                            <ui:CommentOut.Body>
                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_121">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_21" Sql="[&quot;update ooh_pbt_txn set PBT_Tagged = 1 where  PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                                  <ui:ExecuteQuery.Parameters>
                                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                  </ui:ExecuteQuery.Parameters>
                                                </ui:ExecuteQuery>
                                              </Sequence>
                                            </ui:CommentOut.Body>
                                          </ui:CommentOut>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{C.ToString, P.ToString, E.ToString, Invoice_Num.ToString, PDF_Amount, Tag_Status.ToString}]" DataTable="[Tag_Status_DT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1134,22" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                        <ui:PathExists DisplayName="Path Exists" Exists="[Report_File]" sap:VirtualizedContainerService.HintSize="1134,89" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" PathType="File" />
                        <If Condition="[Report_File]" sap:VirtualizedContainerService.HintSize="1004,355" sap2010:WorkflowViewState.IdRef="If_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:AppendRange DataTable="[Tag_Status_DT]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_5" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" />
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WriteRange AddHeaders="True" DataTable="[Tag_Status_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_5" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]">
                                <ui:WriteRange.StartingCell>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:WriteRange.StartingCell>
                              </ui:WriteRange>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_CloseWks workflow" sap:VirtualizedContainerService.HintSize="1004,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_CloseWks.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'adbuyer.exe Print'" sap:VirtualizedContainerService.HintSize="1134,106" sap2010:WorkflowViewState.IdRef="Activate_1">
                          <ui:Activate.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d1981706-7d67-4367-ac7d-9b7dbf3fc696" InformativeScreenshot="c497fba80274eb5ed529debf31366792" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6MDIForm' title='Print Buy Toolkit - Spectra DS :*' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Activate.Target>
                        </ui:Activate>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1134,116" sap2010:WorkflowViewState.IdRef="SendHotkey_30" Key="n" KeyModifiers="Ctrl">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a5a06cd2-5e3a-4614-b81e-9c7f6dc27ac3">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6CommandButton'" sap:VirtualizedContainerService.HintSize="1134,106" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a31a43ed-dee1-4446-9ee2-cea9ce8057a8" InformativeScreenshot="758c65a14409c8011a08453cc575de03" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='*' /&gt;&lt;wnd cls='ThunderRT6CommandButton' title='OK' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="2063,5494" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1684,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[in_Config(&quot;ExceptionScreenshotPath&quot;).ToString+&quot;BusinessException_&quot;+in_TransactionItem.SpecificContent(&quot;ID&quot;).ToString+&quot;_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd_hhmmss&quot;)+&quot;.jpg&quot;]" />
                      <If Condition="[insertion_Count &gt;2 or (insertion_Count = 2 and  String.IsNullOrEmpty(PDF_TaxAmount))]" DisplayName="If - no number found in Insertion count ie. 0" sap:VirtualizedContainerService.HintSize="2021,2336" sap2010:WorkflowViewState.IdRef="If_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="942,2188" sap2010:WorkflowViewState.IdRef="Sequence_64">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="563,68" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[argimgScreenshot]">
                              <ui:TakeScreenshot.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="84273235-230a-4922-8292-41717eebf490">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TakeScreenshot.Target>
                            </ui:TakeScreenshot>
                            <ui:SaveImage DisplayName="Save Image" FileName="[in_Config(&quot;ExceptionScreenshotPath&quot;).ToString+&quot;BusinessException_&quot;+in_TransactionItem.SpecificContent(&quot;ID&quot;).ToString+&quot;_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd_hhmmss&quot;)+&quot;.jpg&quot;]" sap:VirtualizedContainerService.HintSize="563,92" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[argimgScreenshot]" />
                            <Sequence sap:VirtualizedContainerService.HintSize="900,1856" sap2010:WorkflowViewState.IdRef="Sequence_88">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="521,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Multiple Buys</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[IsMultiBuy.ToLower.Equals(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="858,1664" sap2010:WorkflowViewState.IdRef="If_42">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Sequence - Update DB for children invoices in MI-1B scenarios" sap:VirtualizedContainerService.HintSize="713,1516" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace("W/ ","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace(",","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[arrInv_Comment]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[Inv_Comment.Split(" ".ToCharArray)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="671,51" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arrInv_Comment]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:Object">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,311" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;' where PBT_Log_ID='&quot;+strLog_id+&quot;'&quot;]" />
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_13" Sql="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;' where PBT_Log_ID='&quot;+strLog_id+&quot;'&quot;]">
                                              <ui:ExecuteQuery.Parameters>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:ExecuteQuery.Parameters>
                                            </ui:ExecuteQuery>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Arch]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_32" Sql="[&quot;select  olt.*,ofm.fa_email_id,ofm1.fa_email_id as FAupdatedBy from OOH_log_txn olt inner join OOH_FA_Master ofm on ofm.fa_id=olt.Log_FA_ID left join OOH_FA_Master ofm1 on ofm1.fa_id=olt.Log_FA_UpdateBy_ID where Log_ID='&quot;+ID+&quot;'&quot;]">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                    </ui:ExecuteQuery>
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Reason]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="671,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_33" Sql="select UR_ID from [dbo].[OOH_UpdateReason_Ref] where UR_Reason_Description='Invoice is tagged to incorrect buy'">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                    </ui:ExecuteQuery>
                                    <If Condition="[dt_Arch.Rows.Count&gt;0 and dt_Reason.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="671,777" sap2010:WorkflowViewState.IdRef="If_78">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="526,629" sap2010:WorkflowViewState.IdRef="Sequence_124">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[dt_Arch.Rows(0)("Log_Tax_Amount").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[string.IsNullOrEmpty(str_Taxamount)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_77">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">NULL</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                          </If>
                                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]" />
                                          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]">
                                            <ui:ExecuteNonQuery.Parameters>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:ExecuteNonQuery.Parameters>
                                          </ui:ExecuteNonQuery>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="1034,1752" sap2010:WorkflowViewState.IdRef="Sequence_44">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:SaveImage DisplayName="Save Image" FileName="[in_Config(&quot;ExceptionScreenshotPath&quot;).ToString+&quot;BusinessException_&quot;+in_TransactionItem.SpecificContent(&quot;ID&quot;).ToString+&quot;_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd_hhmmss&quot;)+&quot;.jpg&quot;]" sap:VirtualizedContainerService.HintSize="992,92" sap2010:WorkflowViewState.IdRef="SaveImage_4" Image="[argimgScreenshot]" />
                            <If Condition="[not boolInvAmount]" sap:VirtualizedContainerService.HintSize="992,208" sap2010:WorkflowViewState.IdRef="If_58">
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Invoice Amount already Present</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[not boolInvNum]" sap:VirtualizedContainerService.HintSize="992,300" sap2010:WorkflowViewState.IdRef="If_59">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Invoice Number already Tagged</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                            <If Condition="[not boolInvAmount and not boolInvNum]" sap:VirtualizedContainerService.HintSize="992,208" sap2010:WorkflowViewState.IdRef="If_60">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Invoice Amount and Invoice Num already present</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[insertion_Count = 0]" sap:VirtualizedContainerService.HintSize="992,692" sap2010:WorkflowViewState.IdRef="If_61">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="421,544" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="379,68" sap2010:WorkflowViewState.IdRef="TakeScreenshot_2" Screenshot="[argimgScreenshot]">
                                    <ui:TakeScreenshot.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="84273235-230a-4922-8292-41717eebf490">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:TakeScreenshot.Target>
                                  </ui:TakeScreenshot>
                                  <ui:SaveImage DisplayName="Save Image" FileName="[in_Config(&quot;ExceptionScreenshotPath&quot;).ToString+&quot;BusinessException_&quot;+in_TransactionItem.SpecificContent(&quot;ID&quot;).ToString+&quot;_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd_hhmmssSSS&quot;)+&quot;.jpg&quot;]" sap:VirtualizedContainerService.HintSize="379,92" sap2010:WorkflowViewState.IdRef="SaveImage_5" Image="[argimgScreenshot]" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_CloseDLWizard workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_CloseDLWizard.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No Buys or No records found in PBT</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,540" sap2010:WorkflowViewState.IdRef="Sequence_115">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="TakeScreenshot_3" Screenshot="[argimgScreenshot]">
                                    <ui:TakeScreenshot.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="84273235-230a-4922-8292-41717eebf490">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:TakeScreenshot.Target>
                                  </ui:TakeScreenshot>
                                  <ui:SaveImage DisplayName="Save Image" FileName="[in_Config(&quot;ExceptionScreenshotPath&quot;).ToString+&quot;BusinessException_&quot;+in_TransactionItem.SpecificContent(&quot;ID&quot;).ToString+&quot;_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd_hhmmssSSS&quot;)+&quot;.jpg&quot;]" sap:VirtualizedContainerService.HintSize="484,92" sap2010:WorkflowViewState.IdRef="SaveImage_6" Image="[argimgScreenshot]" />
                                  <If Condition="[String.IsNullOrEmpty(Tag_Status)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_70">
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">No Buys or No records found in PBT</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2021,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[Tag_Status]" />
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="2021,51" sap2010:WorkflowViewState.IdRef="CommentOut_16">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="421,204" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_DLConfirmation_OK workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_DLConfirmation_OK.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <ui:BuildDataTable DataTable="[Tag_Status_DT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="2021,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_8" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;C&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;P&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;E&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tagged_Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="2021,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_29" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where  PBT_Log_ID in(&quot;+ID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                      <Sequence DisplayName="Sequence - update ooh_pbt_txn_db for Multi Invoice 1 buy records" sap:VirtualizedContainerService.HintSize="2021,1260" sap2010:WorkflowViewState.IdRef="Sequence_96">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[IsMultiBuy.ToString.ToLower.Contains(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="641,1168" sap2010:WorkflowViewState.IdRef="If_62">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="496,1020" sap2010:WorkflowViewState.IdRef="Sequence_95">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Sequence - Update DB for children invoices in MI-1B scenarios" sap:VirtualizedContainerService.HintSize="454,928" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="s:String[]" Name="arrInv_Comment" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace("W/ ","")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace(",","")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[arrInv_Comment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[Inv_Comment.Split(" ".ToCharArray)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,536" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[arrInv_Comment]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,402" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where  PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]" />
                                        <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_16" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0,PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where  PBT_Log_ID in(&quot;+strMultiInvoiceID.ToString+&quot;) and (PBT_Tagged=0 or PBT_Tagged is null)&quot;]">
                                          <ui:ExecuteQuery.Parameters>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:ExecuteQuery.Parameters>
                                        </ui:ExecuteQuery>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_35">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_23" Sql="[&quot;update ooh_pbt_txn set PBT_Tagged = 0 where PBT_Log_ID = '&quot;+ID+&quot;'&quot;]">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                              </ui:ExecuteQuery>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </Sequence>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{C.ToString, P.ToString, E.ToString, Invoice_Num.ToString, PDF_Amount, Tag_Status.ToString}]" DataTable="[Tag_Status_DT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="2021,22" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                      <ui:PathExists DisplayName="Path Exists" Exists="[Report_File]" sap:VirtualizedContainerService.HintSize="2021,89" sap2010:WorkflowViewState.IdRef="PathExists_6" Path="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" PathType="File" />
                      <If Condition="[Report_File]" sap:VirtualizedContainerService.HintSize="2021,355" sap2010:WorkflowViewState.IdRef="If_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:AppendRange DataTable="[Tag_Status_DT]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_6" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" />
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:WriteRange AddHeaders="False" DataTable="[Tag_Status_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_6" SheetName="Sheet1" WorkbookPath="C:\Users\NTMGRM.RPA1\Desktop\Report\Report_2021-09-27.xlsx">
                              <ui:WriteRange.StartingCell>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:WriteRange.StartingCell>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WriteRange>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrintBuyToolKit_CloseWks_NoChange workflow" sap:VirtualizedContainerService.HintSize="2021,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="PrintBuyToolkit\PrintBuyToolKit_CloseWks_NoChange.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'adbuyer.exe Print'" sap:VirtualizedContainerService.HintSize="2021,106" sap2010:WorkflowViewState.IdRef="Activate_3">
                        <ui:Activate.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d1981706-7d67-4367-ac7d-9b7dbf3fc696" InformativeScreenshot="c497fba80274eb5ed529debf31366792" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6MDIForm' title='Print Buy Toolkit - Spectra DS :*' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Activate.Target>
                      </ui:Activate>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="2021,116" sap2010:WorkflowViewState.IdRef="SendHotkey_23" Key="n" KeyModifiers="Ctrl">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a5a06cd2-5e3a-4614-b81e-9c7f6dc27ac3">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'ThunderRT6CommandButton'" sap:VirtualizedContainerService.HintSize="2021,106" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="abbd2f8e-afce-4cc0-b733-600247f881d3" InformativeScreenshot="758c65a14409c8011a08453cc575de03" Selector="&lt;wnd app='adbuyer.exe' cls='ThunderRT6FormDC' title='*' /&gt;&lt;wnd cls='ThunderRT6CommandButton' title='OK' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="797,4409" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[Tag_Status_DT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="755,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_9" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;C&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;P&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;E&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tagged_Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
          <If Condition="[not isTaxRowPresent]" sap:VirtualizedContainerService.HintSize="755,208" sap2010:WorkflowViewState.IdRef="If_52">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Tax Row Not present in PBT</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[not isTaxAmountValid]" sap:VirtualizedContainerService.HintSize="755,300" sap2010:WorkflowViewState.IdRef="If_51">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_80">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Tax Amount equal to or Greater than Subtotal Amount in Net Payable</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
          <Sequence sap:VirtualizedContainerService.HintSize="755,888" sap2010:WorkflowViewState.IdRef="Sequence_81">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[string.IsNullOrEmpty(PDF_Amount)]" sap:VirtualizedContainerService.HintSize="526,208" sap2010:WorkflowViewState.IdRef="If_39">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">PDF Amount Value is Empty</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <Sequence sap:VirtualizedContainerService.HintSize="526,548" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[not isValidTax]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_45">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Tax Amount greater than 10% of Total</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
              <If Condition="[string.IsNullOrEmpty(E)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_55">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Tag_Status]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Est code is Empty</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
          <Sequence sap:VirtualizedContainerService.HintSize="755,683" sap2010:WorkflowViewState.IdRef="Sequence_99">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[IsMultiBuy.ToLower.Equals(&quot;true&quot;)]" sap:VirtualizedContainerService.HintSize="484,591" sap2010:WorkflowViewState.IdRef="If_64">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Sequence - Update DB for children invoices in MI-1B scenarios" sap:VirtualizedContainerService.HintSize="304,443" sap2010:WorkflowViewState.IdRef="Sequence_98">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:String[]" Name="arrInv_Comment" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace("W/ ","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Inv_Comment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Inv_Comment.Replace(",","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[arrInv_Comment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[Inv_Comment.Split(" ".ToCharArray)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrInv_Comment]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,439" sap2010:WorkflowViewState.IdRef="Sequence_97">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;' where PBT_Tag_Status not like 'yes' and PBT_MultiInv_Batch_Details like '&quot;+C+&quot;_&quot;+P+&quot;_&quot;+E+&quot;_&quot;+PDF_MOS_Unedited+&quot;_&quot;+PUBLICATION_CODE+&quot;%'&quot;]" />
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_18" Sql="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.Trim+&quot;', PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;' where PBT_Log_ID='&quot;+strLog_id+&quot;'&quot;]">
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                          </ui:ExecuteQuery>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_24" Sql="[&quot;update ooh_pbt_txn set PBT_Tagged = 0 where PBT_Log_ID = '&quot;+ID+&quot;'&quot;]">
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                          </ui:ExecuteQuery>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="755,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Update ooh_pbt_txn set PBT_Tag_Status = '&quot;+Tag_Status.ToString+&quot;',PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Tag_Status not like 'yes' and PBT_MultiInv_Batch_Details like '&quot;+C+&quot;_&quot;+P+&quot;_&quot;+E+&quot;_&quot;+PDF_MOS_Unedited+&quot;_&quot;+PUBLICATION_CODE+&quot;%'&quot;]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[Tag_Status]" />
          <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="755,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9" Sql="[&quot;Update ooh_pbt_txn set PBT_Tagged = 0 ,PBT_Tag_Status = '&quot;+Tag_Status.ToString+&quot;',PBT_Tag_Date = '&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;'  where PBT_Log_ID = '&quot;+ID+&quot;'&quot;]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{C.ToString, P.ToString, E.ToString, Invoice_Num.ToString, PDF_Amount, Tag_Status.ToString}]" DataTable="[Tag_Status_DT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="755,22" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Arch]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="755,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_42" Sql="[&quot;select  olt.*,ofm.fa_email_id,ofm1.fa_email_id as FAupdatedBy from OOH_log_txn olt inner join OOH_FA_Master ofm on ofm.fa_id=olt.Log_FA_ID left join OOH_FA_Master ofm1 on ofm1.fa_id=olt.Log_FA_UpdateBy_ID where Log_ID='&quot;+ID+&quot;'&quot;]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Reason]" DisplayName="Execute Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="755,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_43" Sql="select UR_ID from [dbo].[OOH_UpdateReason_Ref] where UR_Reason_Description='Invoice is tagged to incorrect buy'">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <If Condition="[dt_Arch.Rows.Count&gt;0 and dt_Reason.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="755,777" sap2010:WorkflowViewState.IdRef="If_88">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="526,629" sap2010:WorkflowViewState.IdRef="Sequence_129">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_114">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dt_Arch.Rows(0)("Log_Tax_Amount").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[string.IsNullOrEmpty(str_Taxamount)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_87">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_115">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_Taxamount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">NULL</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]" />
                <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[DB_Connection]" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_6" Sql="[&quot;INSERT INTO [dbo].[OOH_RecordUpdateDetails_Arch] ([RUDets_LogTxn_ID],[RUDests_M],[RUDests_C],[RUDests_P],[RUDests_E],[RU_Dets_Contract_ID],[RU_Dets_Vendor_ID],[RU_Dets_Invoice_Number],[RU_Dets_Invoice_Amount],[RU_Dets_Invoice_TaxAmt] ,[RU_Dets_Invoice_Date],[RU_Dets_Client_Name],[RU_Dets_FA_ActionStatus],[RU_Dets_UpdatedBy],[RU_Dets_UpdateReason_ID],[RU_Dets_Button_Name],[RU_Dets_UpdatedDate],[RU_Dets_UpdateComment_Other]) VALUES ('&quot;+dt_Arch.Rows(0)(&quot;Log_ID&quot;).ToString+&quot;','&quot;+M.ToString+&quot;','&quot;+dt_Arch.Rows(0)(&quot;Log_Validated_C&quot;).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_P”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Validated_E”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Invoice_ContractNumber”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Vendor_ID”).ToString+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Number”).ToString+&quot;',&quot;+dt_Arch.Rows(0)(“Log_Invoice_Amount”).ToString+&quot;,&quot;+str_Taxamount+&quot;,'&quot;+dt_Arch.Rows(0)(“Log_Invoice_Date”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_Client_Name”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“Log_FA_Action_Status”).ToString+&quot;','&quot;+dt_Arch.Rows(0)(“fa_email_id”).ToString+&quot;',&quot;+dt_Reason.Rows(0)(“UR_ID”).ToString+&quot;,'PBT BOT'&quot;+&quot;,'&quot;+strCurrent_DateTime.ToString+&quot;',NULL)&quot;]">
                  <ui:ExecuteNonQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteNonQuery.Parameters>
                </ui:ExecuteNonQuery>
              </Sequence>
            </If.Then>
          </If>
          <ui:PathExists DisplayName="Path Exists" Exists="[Report_File]" sap:VirtualizedContainerService.HintSize="755,89" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" PathType="File" />
          <If Condition="[Report_File]" sap:VirtualizedContainerService.HintSize="755,355" sap2010:WorkflowViewState.IdRef="If_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:AppendRange DataTable="[Tag_Status_DT]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_7" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]" />
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WriteRange AddHeaders="False" DataTable="[Tag_Status_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_7" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\NTMGRM.RPA1\Desktop\Report\Report_&quot;+System.DateTime.Now.ToString(&quot;yyyy-MM-dd&quot;)+&quot;.xlsx&quot;]">
                  <ui:WriteRange.StartingCell>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:WriteRange.StartingCell>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WriteRange>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="5281,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;DB updated for Record : &quot;+ Invoice_Num]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="5281,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[in_TransactionItem.SpecificContent(&quot;Invoice_Num&quot;).ToString]" />
  </Sequence>
</Activity>
InvoiceMatchingScreen As screen:
    Fill: =RGBA(230, 230, 230, 1)
    LoadingSpinner: =LoadingSpinner.Controls
    LoadingSpinnerColor: =RGBA(211, 66, 9, 1)
    OnVisible: |
        =UpdateContext({VAR_Vendor_DEF: ""});
        UpdateContext({VAR_Remittance_Address: ""});
        UpdateContext({showSegmentUnpaidPopup:false});
        Set(
            varZoom,
            "1000"
        );
        Reset(Checkbox_Amount);
        Reset(Checkbox_Invoice);
        Reset(Checkbox_MOS);
        UpdateContext({ROWNUM: 1});
        UpdateContext(
            {
                VAR_VendorID_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Vendor_ID
                )
            }
        );
        UpdateContext(
            {
                VAR_PublicationCode_DEF: LookUp(
                    OOH_Vendor_Master,
                    Vendor_ID = Value(hide_VendorID.Text),
                    Vendor_Pub_Code
                )
            }
        );
        /*UpdateContext(
            {
                VAR_Remittance_Address: If(
                    !IsBlank(
                        LookUp(
                            OOH_Unpaid_Ref,
                            Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                            Unpaid_Ref_Pay_Address
                        )
                    ),
                    LookUp(
                        OOH_Unpaid_Ref,
                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                        Unpaid_Ref_Pay_Address
                    ),
                    Last(
                        Filter(
                            OOH_Unpaid_Ref,
                            Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                        )
                    ).Unpaid_Ref_Pay_Address
                )
            }
        );*/
        If(
            IsBlank(ContractNumber_TextInput.Text),
            Sort(
                Filter(
                    OOH_Vendor_Master,
                    (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)
                ),
                Vendor_Pub_Name,
                Ascending
            ),
            Sort(
                Filter(
                    OOH_Vendor_Master,
                    (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)
                ),
                Vendor_Pub_Name,
                Ascending
            )
        );
        UpdateContext(
            {
                VAR_PublicationName_DEF: LookUp(
                    OOH_Vendor_Master,
                    Vendor_ID = Value(hide_VendorID.Text),
                    Vendor_Pub_Name
                ),
                VAR_Vendor_DEF: LookUp(
                    OOH_Vendor_Master,
                    Vendor_ID = Value(hide_VendorID.Text),
                    Vendor_Name
                )
            }
        );
        Reset(Vendor_TextInput);
        UpdateContext(
            {
                VAR_ContractNum_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Invoice_ContractNumber
                )
            }
        );
        Reset(ContractNumber_TextInput);
        UpdateContext(
            {
                VAR_C_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Validated_C
                )
            }
        );
        Reset(C_TextInput);
        UpdateContext(
            {
                VAR_P_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Validated_P
                )
            }
        );
        Reset(P_TextInput);
        UpdateContext(
            {
                VAR_E_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Validated_E
                )
            }
        );
        Reset(E_TextInput);
        UpdateContext(
            {
                VAR_MOS_DEF: LookUp(
                    OOH_Log_Txn,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Invoice_MOS
                )
            }
        );
        UpdateContext({showCommentS9Popup: false});
        UpdateContext({showVendorModal: false});
        UpdateContext({showTaggingDropdown: false});
        UpdateContext({showIgnoreConfirmationDialogue: false});
        UpdateContext({showIgnoreCommentBox: false});
        Reset(MOS_TextInput_initial);
        Reset(Client_Name_TextInput);
        Reset(IO_TextInput);
        Reset(PCID_TextInput);
        Reset(InvoiceNum_TextInput);
        Reset(Amount_TextInput);
        Reset(Tax_TextInput);
        Reset(InvDate_TextInput_initial);
        Reset(ID_TextInput);
        ClearCollect(
            colMonthInNumber,
            Table(
                {
                    Text: "JAN",
                    Val: 01
                },
                {
                    Text: "FEB",
                    Val: 02
                },
                {
                    Text: "MAR",
                    Val: 03
                },
                {
                    Text: "APR",
                    Val: 04
                },
                {
                    Text: "MAY",
                    Val: 05
                },
                {
                    Text: "JUN",
                    Val: 06
                },
                {
                    Text: "JUL",
                    Val: 07
                },
                {
                    Text: "AUG",
                    Val: 08
                },
                {
                    Text: "SEP",
                    Val: 09
                },
                {
                    Text: "OCT",
                    Val: 10
                },
                {
                    Text: "NOV",
                    Val: 11
                },
                {
                    Text: "DEC",
                    Val: 12
                }
            )
        );
        /*
        UpdateContext(
            {
                VAR_Remittance_Address:
                If(
                    IsBlank(PredictionItemsDataTable.Selected),
                    If(
                        IsBlank(MySelected),
                        "",
                        MySelected.Remittance_Address
                    ),
                    PredictionItemsDataTable.Selected.Remittance_Address
                )
            })*/
        ClearCollect(
            colSplitS9Records,
            {lineNumber: 1}
        );

    OOH_Prediction_Datatable As dataTable.datatable:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderStyle: =BorderStyle.Solid
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Font: =Font.'Open Sans'
        FontWeight: =FontWeight.Normal
        HeadingColor: =RGBA(255, 255, 255, 1)
        HeadingFill: =RGBA(211, 66, 9, 1)
        HeadingFont: =Font.'Open Sans'
        HeadingFontWeight: =FontWeight.Normal
        HeadingSize: =9
        Height: =353
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(255, 211, 205, .2)
        InputFill: =RGBA(255, 255, 255, 1)
        InvertedColor: =RGBA(255, 255, 255, 1)
        Items: |-
            =Sort(
                Sort(
                    Sort(
                        Filter(
                            OOH_Predictions_Mview,
                            Prediction_Log_ID = Value(ID_TextInput.Text)
                        ),
                        Prediction_Rank,
                        Ascending
                    ),
                    Prediction_MOS,
                    Descending
                ),
                Prediction_Unpaid_Insertion_Date,
                Ascending
            )
        LinkColor: =RGBA(0, 134, 208, 1)
        NoDataText: =""
        PrimaryColor1: =RGBA(211, 66, 9, 1)
        PrimaryColor2: =RGBA(131, 24, 75, 1)
        PrimaryColor3: =RGBA(255, 211, 205, 1)
        SelectedColor: =RGBA(0, 0, 0, 1)
        SelectedFill: =RGBA(211, 66, 9, .2)
        Size: =9
        Visible: =true
        Width: =670
        X: =10
        Y: =415
        ZIndex: =1

        Prediction_Rank_Column1 As dataTableColumn.numberColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Rank"
            FieldName: ="Prediction_Rank"
            FieldVariantName: ="numberColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.Prediction_Rank
            Width: =28
            X: =0
            Y: =0
            ZIndex: =130

        Prediction_C_Column1 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="MCPE"
            FieldName: ="Prediction_C"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: |-
                =Concatenate(
                    ThisItem.Prediction_M,
                    If(
                        IsBlank(ThisItem.Prediction_C),
                        "",
                        "/"
                    ),
                    ThisItem.Prediction_C,
                    If(
                        IsBlank(ThisItem.Prediction_P),
                        "",
                        "/"
                    ),
                    ThisItem.Prediction_P,
                    If(
                        IsBlank(ThisItem.Prediction_E),
                        "",
                        "/"
                    ),
                    ThisItem.Prediction_E
                )
            Width: =88
            X: =0
            Y: =0
            ZIndex: =131

        Prediction_Unpaid_Net_Paid_Column1 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Net Paid"
            FieldName: ="Prediction_Unpaid_Net_Paid"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =5
            Text: |-
                =If(
                    IsBlank(ThisItem.Prediction_Unpaid_Net_Paid),
                    ThisItem.Prediction_Unpaid_Net_Paid,
                    Text(
                        Value(ThisItem.Prediction_Unpaid_Net_Paid),
                        "[$-en-US],$#,##0.00"
                    )
                )
            Width: =55
            X: =0
            Y: =0
            ZIndex: =142

        Prediction_Unpaid_Net_Payable_Column1 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Net Payable"
            FieldName: ="Prediction_Unpaid_Net_Payable"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =4
            Text: |-
                =If(
                    IsBlank(ThisItem.Prediction_Unpaid_Net_Payable),
                    ThisItem.Prediction_Unpaid_Net_Payable,
                    Text(
                        Value(ThisItem.Prediction_Unpaid_Net_Payable),
                        "[$-en-US],$#,##0.00"
                    )
                )
            Width: =67
            X: =0
            Y: =0
            ZIndex: =143

        Prediction_MOS_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="MOS"
            FieldName: ="Prediction_MOS"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =9
            Text: =ThisItem.Prediction_MOS
            Width: =52
            X: =0
            Y: =0
            ZIndex: =145

        Prediction_Publication_Code_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="PUB CODE"
            FieldName: ="Prediction_Publication_Code"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =11
            Text: =ThisItem.Prediction_Publication_Code
            Width: =62
            X: =0
            Y: =0
            ZIndex: =146

        Prediction_Unpaid_Contract_Id_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Contract ID"
            FieldName: ="Prediction_Unpaid_Contract_Id"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =15
            Text: =ThisItem.Prediction_Unpaid_Contract_Id
            Width: =63
            X: =0
            Y: =0
            ZIndex: =147

        Prediction_Unpaid_IDesk_Recon_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="IDesk Recon"
            FieldName: ="Prediction_Unpaid_IDesk_Recon"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =17
            Text: =ThisItem.Prediction_Unpaid_IDesk_Recon
            Width: =64
            X: =0
            Y: =0
            ZIndex: =148

        Prediction_Unpaid_Insertion_Date_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Insertion Date"
            FieldName: ="Prediction_Unpaid_Insertion_Date"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =19
            Text: =ThisItem.Prediction_Unpaid_Insertion_Date
            Width: =82
            X: =0
            Y: =0
            ZIndex: =149

        Prediction_Unpaid_Pay_Address_Column2 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Pay Address"
            FieldName: ="Prediction_Unpaid_Pay_Address"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =20
            Text: =ThisItem.Prediction_Unpaid_Pay_Address
            Width: =90
            X: =0
            Y: =0
            ZIndex: =150

    InvoicePdfViewer As pdfViewer:
        Document: |
            =varPDF.pdfurl
        Height: =677
        ShowControls: =true
        Width: =667
        X: =699
        Y: =87
        ZIndex: =4
        Zoom: =varZoom

    ID_TextInput As text:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 1)
        Default: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_ID)
        DelayOutput: =true
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Height: =15
        HoverBorderColor: =RGBA(230, 230, 230, 1)
        HoverColor: =RGBA(230, 230, 230, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        PaddingLeft: =5
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Visible: =false
        Width: =75
        X: =212
        Y: =266
        ZIndex: =5

    InvoiceDataGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =5

        MatchContainer As groupContainer:
            BorderColor: =RGBA(246, 88, 16, 1)
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            Height: =189
            Width: =673
            X: =10
            Y: =205
            ZIndex: =2

            CampaignName_Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderStyle: =BorderStyle.None
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =8
                TabIndex: =0
                Text: |-
                    ="Campaign Name :"
                Visible: =false
                Width: =98
                Wrap: =false
                Y: =28
                ZIndex: =1

            Vendor_Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =17
                Size: =8
                Text: |-
                    ="Vendor :"
                Visible: =false
                Width: =68
                Y: =59
                ZIndex: =2

            MOS_Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =19
                Size: =8
                Text: |-
                    ="MOS :"
                Visible: =false
                Width: =47
                Y: =78
                ZIndex: =3

            Agency_Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =19
                Size: =8
                Text: |-
                    ="Agency :"
                Visible: =false
                Width: =68
                Y: =95
                ZIndex: =8

            Invoice_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Invoice"
                Width: =100
                X: =293
                Y: =15
                ZIndex: =10

            Amount_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Amount ($)"
                Width: =80
                X: =413
                Y: =15
                ZIndex: =11

            Match_Button As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(255, 255, 255, 1)
                DisabledFill: =RGBA(128, 128, 128, 1)
                DisplayMode: |
                    =If(
                        (IsBlank(C_TextInput.Text) Or  C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = "" Or IsBlank(E_TextInput.Text) Or E_TextInput.Text = "") Or Segmented_Checkbox.Value=false,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =UpdateContext({showTaggingDropdown: false});
                    UpdateContext({showReTaggingDropdown: false});
                    UpdateContext({isSegmentEdited: false});
                    Set(
                        TotalLines,
                        1
                    );
                    UpdateContext({showSegmentPopup: true});
                    Clear(ColSegmentUnpaidData);
                    //Clear(colSegmentRecords1);
                    //ClearCollect(colSegmentRecords,Filter(OOH_PBT_Txn,PBT_Log_ID=1))
                    
                    
                    
                    /*ClearCollect(
                        colSegmentRecords,
                        {
                            lineNumber: 1,
                            PBT_Log_ID: "",
                            PBT_Segment_IDesk_Recon: "",
                            PBT_Segment_ContractID: "",
                            Ins_Date_Segment: "",
                            TS_Received: "",
                            Buy_Amount: "",
                            Inv_Amount: "",
                            Segment_Comment: ""
                        }
                    );*/
                    //ClearCollect(colSegmentRecords2,{PBT_Log_ID: "",PBT_ID:"",PBT_Is_MultiInvoice:"",PBT_MultiInv_Leading_InvoiceNumber:"",PBT_MultiInv_Invoice_Amount_Sum:"",PBT_MultiInv_Tax_Amount_Sum:"",PBT_MultiInv_Batch_Details:"",PBT_MultiInv_Leading_Invoice_Flag:"",PBT_Is_Recon:"",PBT_Recon_Status:"",PBT_Recon_Comment:"",PBT_Is_Segement:"",PBT_Segment_Insertion_Date:"",PBT_Segment_Comment:"",PBT_Segment_InvoiceAmount:"",PBT_Segment_UnpaidRef_IDesk_Recon:"",PBT_Segment_UnpaidRef_ContractID:"",PBT_Tagged:"",PBT_Tag_Status:"",PBT_Tag_Date:"",PBT_Tag_Comment:"",PBT_Screenshot_Link:"",PBT_Stamp_Comment:"",PBT_Insertion_Date:"",PBT_Update_Date:"",PBT_FA_UpdatedBy_ID:""})
                    
                    If(InvoiceNum_TextInput.Text="1234",ClearCollect(colSegmentRecords,Filter(OOH_PBT_Txn, PBT_Log_ID=4800))
                    ,ClearCollect(colSegmentRecords,{lineNumber: 1,PBT_Log_ID:0,PBT_ID:0,PBT_Recon_Status:"",PBT_Is_Segement:true,PBT_Segment_Comment:"",PBT_Segment_UnpaidRef_IDesk_Recon:"",PBT_Segment_UnpaidRef_ContractID:"",PBT_Insertion_Date:Now(),PBT_Update_Date:Now(),PBT_FA_UpdatedBy_ID:0}));
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="SEGMENT"
                Visible: =varIsQA
                Width: =72
                X: =125
                Y: =150
                ZIndex: =12

            ContractNumber_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =10
                Text: ="Contract Number"
                Width: =120
                X: =173
                Y: =73
                ZIndex: =13

            Match_C_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =10
                Text: ="C"
                Width: =55
                X: =313
                Y: =73
                ZIndex: =14

            Match_P_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =10
                Text: ="P"
                Width: =56
                X: =387
                Y: =73
                ZIndex: =15

            Match_E_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =10
                Text: ="E"
                Width: =54
                X: =511
                Y: =73
                ZIndex: =16

            Tax_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Tax ($)"
                Width: =78
                X: =533
                Y: =15
                ZIndex: =17

            InvoiceNum_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: |-
                    =LookUp(
                        OOH_Log_Txn,
                        Log_ID = Value(ID_TextInput.Text),
                        Log_Invoice_Number
                    )
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Tooltip: =InvoiceNum_TextInput.Text
                Width: =118
                X: =275
                Y: =40
                ZIndex: =18

            Amount_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: |-
                    =Text(
                        Value(LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Invoice_Amount
                        )),
                        "[$-en-US]$#,##0.00"
                    )
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Format: =TextFormat.Number
                Height: =27
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: |-
                    =Text(
                        Value(Amount_TextInput.Text),
                        "[$-en-US]$#,##0.00"
                    )
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =98
                X: =413
                Y: =37
                ZIndex: =19

            Tax_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: |-
                    =Text(
                        Value(
                            LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Invoice_ExtractedTax
                            )
                        ),
                        "[$-en-US]$#,##0.00"
                    )
                DisabledBorderColor: =RGBA(230, 230, 230, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Format: =TextFormat.Number
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =87
                X: =521
                Y: =40
                ZIndex: =20

            ContractNumber_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: |-
                    =/*LookUp(
                        OOH_Log_Txn,
                        Log_ID = Value(ID_TextInput.Text),
                        Log_Invoice_ContractNumber
                    )*/
                    VAR_ContractNum_DEF
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: |
                    =If(!IsBlank(LookUp(OOH_Unpaid_Ref, Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,Unpaid_Ref_Contract_ID)) && !IsBlank(LookUp(OOH_Unpaid_Ref, Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,Unpaid_Ref_Invoice_Number)), RGBA(147, 223, 162, 1), RGBA(255, 255, 255, 1))
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: |-
                    =/*UpdateContext(
                        {
                            VAR_Remittance_Address: If(
                                !IsBlank(
                                    LookUp(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                        Unpaid_Ref_Pay_Address
                                    )
                                ),
                                LookUp(
                                    OOH_Unpaid_Ref,
                                    Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                    Unpaid_Ref_Pay_Address
                                ),
                                Last(
                                    Filter(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Publication_Code = Log_Pub_Code.Text
                                    )
                                ).Unpaid_Ref_Pay_Address
                            )
                        }
                    );
                    */
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =100
                X: =173
                Y: =98
                ZIndex: =21

            C_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =VAR_C_DEF
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: |-
                    =//If(IsBlank(PDF_CPE_Match_Label.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text),RGBA(147, 223, 162, 0.8),RGBA(255, 255, 255, 1))
                    RGBA(255, 255, 255, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =55
                X: =313
                Y: =98
                ZIndex: =22

            P_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =VAR_P_DEF
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: |-
                    =//If(IsBlank(PDF_CPE_Match_Label.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text),RGBA(147, 223, 162, 0.8),RGBA(255, 255, 255, 1))
                    RGBA(255, 255, 255, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =105
                X: =387
                Y: =98
                ZIndex: =23

            E_TextInput As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =VAR_E_DEF
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: |-
                    =//If(IsBlank(PDF_CPE_Match_Label.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text),RGBA(147, 223, 162, 0.8),RGBA(255, 255, 255, 1))
                    RGBA(255, 255, 255, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Width: =55
                X: =511
                Y: =98
                ZIndex: =24

            MOS_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =10
                Text: ="MOS"
                Width: =68
                X: =582
                Y: =73
                ZIndex: =25

            InvDate_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Invoice Date "
                Width: =100
                X: =173
                Y: =15
                ZIndex: =26

            RefreshButton As button:
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(204, 204, 204, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(0, 134, 208, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(153, 207, 236, 1), -20%)
                OnSelect: |
                    =Refresh(OOH_Log_Txn);
                    Refresh(OOH_Log_TXN_VIEW);
                    Reset(Checkbox_Invoice);
                    Reset(Checkbox_MOS);
                    Reset(Checkbox_Amount);
                    UpdateContext(
                        {
                            VAR_VendorID_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Vendor_ID
                            )
                        }
                    );
                    UpdateContext(
                        {
                            VAR_Vendor_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Name
                            ),
                            VAR_PublicationCode_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Pub_Code
                            ),
                            VAR_PublicationName_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Pub_Name
                            )
                        }
                    );
                    Reset(Vendor_TextInput);
                    UpdateContext(
                        {
                            VAR_ContractNum_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Invoice_ContractNumber
                            )
                        }
                    );
                    Reset(ContractNumber_TextInput);
                    UpdateContext(
                        {
                            VAR_C_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_C
                            )
                        }
                    );
                    Reset(C_TextInput);
                    UpdateContext(
                        {
                            VAR_P_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_P
                            )
                        }
                    );
                    Reset(P_TextInput);
                    UpdateContext(
                        {
                            VAR_E_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_E
                            )
                        }
                    );
                    Reset(E_TextInput);
                    UpdateContext(
                        {
                            VAR_MOS_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Invoice_MOS
                            )
                        }
                    );
                    /*UpdateContext(
                        {
                            VAR_Remittance_Address: If(
                                !IsBlank(
                                    LookUp(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                        Unpaid_Ref_Pay_Address
                                    )
                                ),
                                LookUp(
                                    OOH_Unpaid_Ref,
                                    Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                    Unpaid_Ref_Pay_Address
                                ),
                                Last(
                                    Filter(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                                    )
                                ).Unpaid_Ref_Pay_Address
                            )
                        }
                    );*/
                    //If(IsBlank(ContractNumber_TextInput.Text),Sort( Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending),Sort(Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending));
                    Reset(MOS_TextInput_initial);
                    Reset(MOS_TextInput_View);
                    Reset(MOS_TextInput);
                    Reset(InvDate_TextInput_initial);
                    Reset(InvDate_TextInput_View);
                    Reset(InvDate_TextInput);
                    Reset(Client_Name_TextInput);
                    Reset(InvoiceNum_TextInput);
                    Reset(Amount_TextInput);
                    Reset(Tax_TextInput);
                    Reset(ID_TextInput);
                    //Reset(PredictionItemsDataTable);
                    UpdateContext({MySelected: Blank()});
                PressedColor: =RGBA(204, 231, 246, 1)
                PressedFill: =WhiteSmoke
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="REFRESH"
                Width: =82
                X: =404
                Y: =150
                ZIndex: =28

            InvDate_TextInput_initial As text:
                Align: =Align.Center
                BorderColor: =RGBA(230, 230, 230, 1)
                BorderThickness: =2
                Color: =RGBA(0, 0, 0, 1)
                Default: =Text(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Invoice_Date))
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =25
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                Size: =8
                Visible: =false
                Width: =87
                X: =479
                Y: =119
                ZIndex: =29

            InvDate_TextInput_View As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =If(IsBlankOrError(DateValue(InvDate_TextInput_initial.Text)),InvDate_TextInput_initial.Text,Text(DateValue( InvDate_TextInput_initial.Text ), "yyyy-mm-dd" ))
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(204, 204, 204, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Tooltip: ="Please Fill the Invoice Date in MM/DD/YY Format"
                Width: =98
                X: =173
                Y: =40
                ZIndex: =30

            InvDate_TextInput As text:
                Align: =Align.Center
                BorderColor: =RGBA(230, 230, 230, 1)
                BorderThickness: =2
                Color: =RGBA(0, 0, 0, 1)
                Default: =If(IsBlankOrError(DateValue(InvDate_TextInput_View.Text)),InvDate_TextInput_View.Text,Text( DateValue( InvDate_TextInput_View.Text ), "yyyy-mm-dd" ))
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =7
                HoverBorderColor: =RGBA(204, 204, 204, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(230, 230, 230, 1)
                PaddingLeft: =5
                Size: =8
                Tooltip: ="Please Fill Date in yyyy-mm-dd Format"
                Visible: =false
                Width: =89
                X: =393
                Y: =128
                ZIndex: =31

            MOS_TextInput_View As text:
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =If(IsBlankOrError((Find("-",MOS_TextInput_initial.Text))),MOS_TextInput_initial.Text,Concatenate(Last(Split(MOS_TextInput_initial.Text, "-")).Result, If(IsBlank(MOS_TextInput_initial.Text),"","/"), Replace(First(Split(MOS_TextInput_initial.Text, "-")).Result, 1, 2, "")))
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =2
                RadiusBottomRight: =2
                RadiusTopLeft: =2
                RadiusTopRight: =2
                Size: =10
                Tooltip: ="Please Fill MOS in MM/YY Format"
                Width: =68
                X: =582
                Y: =98
                ZIndex: =32

            MOS_TextInput_initial As text:
                Align: =Align.Center
                BorderColor: =RGBA(230, 230, 230, 1)
                BorderThickness: =2
                Color: =RGBA(0, 0, 0, 1)
                Default: =VAR_MOS_DEF
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =24
                HintText: =""
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                Size: =8
                Visible: =false
                Width: =68
                X: =372
                Y: =136
                ZIndex: =33

            MOS_TextInput As text:
                Align: =Align.Center
                BorderColor: =RGBA(230, 230, 230, 1)
                BorderThickness: =2
                Color: =RGBA(0, 0, 0, 1)
                Default: =If(IsBlankOrError((Find("/",MOS_TextInput_View.Text))),MOS_TextInput_View.Text,Concatenate("20",Last(Split(MOS_TextInput_View.Text, "/")).Result, "-" ,First(Split(MOS_TextInput_View.Text, "/")).Result))
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =24
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                Size: =8
                Visible: =false
                Width: =68
                X: =489
                Y: =114
                ZIndex: =34

            UnpaidButton As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(204, 204, 204, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =RGBA(211, 66, 9, 1)
                OnSelect: |
                    =UpdateContext({showUnpaidDialog: true});
                    UpdateContext({showUnpaidPDF: false});
                    
                    Reset(Unpaid_ClientName_Search);
                    Reset(Unpaid_P_Search);
                    Reset(Unpaid_E_Search);
                    Reset(Unpaid_Contract_Search);
                    Reset(Unpaid_Prod_Name_Search);
                    Reset(Unpaid_AccountOff_Search);
                    Reset(Unpaid_Ref_Invoice_Comment_Search);
                    
                    UpdateContext({PreFilter_C_Code: C_TextInput.Text});
                    UpdateContext({PreFilter_P_Code:""});
                    UpdateContext({PreFilter_E_Code:""});
                    UpdateContext({PreFilter_Vendor: Log_Pub_Name.Text});
                    UpdateContext({PreFilter_MOS: MOS_TextInput_View.Text});
                    /*If(
                        IsBlank(MySelected),
                        Reset(Unpaid_ClientName_Search);
                        Reset(Unpaid_P_Search);
                        Reset(Unpaid_E_Search);
                        Reset(Unpaid_PayingRep_Search);
                        Reset(Unpaid_AccountOff_Search);
                        Reset(Unpaid_Order_Search);
                        Reset(Unpaid_Office_Search);
                        Reset(Unpaid_Contract_Search);
                        ,
                        ""
                    );*/
                PressedColor: =RGBA(211, 66, 9, 1)
                PressedFill: =WhiteSmoke
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="UNPAID"
                Width: =67
                X: =500
                Y: =150
                ZIndex: =35

            Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =22
                Size: =8
                Text: |-
                    ="Match : "
                Visible: =false
                Width: =47
                ZIndex: =36

            CPE_String_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =25
                Size: =10
                Text: |-
                    =If(
                        C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "",
                        "Campaign Description : ",
                        "CPE : "
                    )
                Width: =160
                X: =10
                Y: =15
                ZIndex: =37

            CPE_String_Data_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =88
                Overflow: =Overflow.Scroll
                Size: =9
                Text: |-
                    =Concatenate(
                        VAR_C_DEF,
                        If(
                            IsBlank(VAR_P_DEF),
                            "",
                            "/"
                        ),
                        VAR_P_DEF,
                        If(
                            IsBlank(VAR_E_DEF),
                            "",
                            "/"
                        ),
                        VAR_E_DEF
                    )
                Width: =136
                X: =10
                Y: =40
                ZIndex: =38

            Agency_Match_Label_3 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =8
                Text: |-
                    ="Net Payable :"
                Visible: =false
                Width: =79
                Y: =115
                ZIndex: =39

            Log_Pub_Name As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =8
                Text: |-
                    =//If(IsNumeric(Value(First( Split( Last( Split(VAR_Vendor_DEF, "(" ) ).Result, ")" ) ).Result)),Value(First( Split( Last( Split(VAR_Vendor_DEF, "(" ) ).Result, ")" ) ).Result),0)
                    LookUp(
                        OOH_Log_TXN_VIEW,
                        Log_ID = Value(ID_TextInput.Text),
                        Log_Publication_Name
                    )
                Visible: =false
                Width: =139
                X: =20
                Y: =70
                ZIndex: =41

            Agency_Match_Label_9 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =21
                Size: =10
                Text: ="Ok To Pay"
                Visible: =varIsQA
                Width: =84
                X: =582
                Y: =125
                ZIndex: =43

            PDF_CPE_Match_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =27
                Size: =13
                Text: =LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Log_Invoice_CPE)
                Visible: =false
                Width: =85
                X: =50
                Y: =87
                ZIndex: =45

            Tax_Label_4 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Check"
                Visible: =false
                Width: =50
                X: =618
                Y: =15
                ZIndex: =47

            Match_Button_4 As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(255, 255, 255, 1)
                DisabledFill: =RGBA(128, 128, 128, 1)
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =/*
                    ClearCollect(colTempSplitS9Comments,Split(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), log_Stamp_Comment_S9),"\n"));
                    RemoveIf(colTempSplitS9Comments,IsBlank(Result));
                    ClearCollect(colViewSplitS9Comments,AddColumns(colTempSplitS9Comments,"Description",First(Split(Result,"|")).Result,"Amount",Last(FirstN(Split(Result,"|"),2)).Result));
                    UpdateContext({showSplitS9Comment:true}); */
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="VIEW SPLIT S9 COMMENT"
                Visible: =//If(FA_Status_Dropdown.SelectedText.Value="SPLIT - S9",true,false)
                Width: =155
                X: =120
                Y: =136
                ZIndex: =48

            agency_ID_Hidden As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 1)
                Default: =LookUp(SelectedItems, rowNumber = ROWNUM, Agency_ID)
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Height: =15
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(230, 230, 230, 1)
                HoverFill: =RGBA(230, 230, 230, 1)
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Visible: =false
                Width: =75
                X: =60
                Y: =60
                ZIndex: =49

            UnpaidButton_1 As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(204, 204, 204, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =RGBA(211, 66, 9, 1)
                OnSelect: |
                    =UpdateContext({TempFA_Mapping_Ref_Data: Blank()});
                    UpdateContext({showVendorModal: false});
                    If(
                        VAR_VendorID_DEF = LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Vendor_ID
                        ),
                        "",
                        UpdateContext(
                            {
                                InvoiceLookupRecord: LookUp(
                                    OOH_Invoice_Master,
                                    Invoice_Number = hide_InvoiceID.Text && Invoice_Cease_Date = Blank()
                                )
                            }
                        );
                        Patch(
                            OOH_Invoice_Master,
                            LookUp(
                                OOH_Invoice_Master,
                                Invoice_ID = Value(InvoiceLookupRecord.Invoice_ID)
                            ),
                            {Invoice_Cease_Date: Now()}
                        );
                        // Above function will update existing record.
                    Patch(
                            OOH_Invoice_Master,
                            {
                                Invoice_Number: InvoiceLookupRecord.Invoice_Number,
                                Invoice_Amount: Amount_TextInput.Text,
                                Invoice_Date: InvoiceLookupRecord.Invoice_Date,
                                Invoice_File_Name: InvoiceLookupRecord.Invoice_File_Name,
                                Invoice_Vendor_ID: VAR_VendorID_DEF,
                                Invoice_Agency_ID: InvoiceLookupRecord.Invoice_Agency_ID,
                                Invoice_Insertion_Date: InvoiceLookupRecord.Invoice_Insertion_Date
                            }
                        // Above function will insert new record with empty cease date.
                        );
                        If(
                            // check if there were any errors
                            IsEmpty(Errors(OOH_Invoice_Master)),
                             // if true, go to success notification
                            "",
                         // else, show any error message
                            Notify(
                                Concat(
                                    Errors(OOH_Invoice_Master),
                                    Column & ": " & Message
                                ),
                                NotificationType.Error
                            )
                        );
                        /*ClearCollect(
                            Col_TempFA_Mapping_Ref_Data,
                            LookUp(
                                OOH_FA_Mapping_Ref,
                                FA_Map_FA_ID = Value(hide_FA_ID.Text) && FA_Map_Vendor_ID = Value(hide_VendorID.Text) && FA_Map_Agency_ID = Value(hide_AgencyID.Text)
                            )
                        );
                         // Above funcion will get all the related records from mapping table
                    If(
                            CountRows(Col_TempFA_Mapping_Ref_Data) = 0 && !IsBlank(hide_FA_ID.Text) && !IsBlank(VAR_VendorID_DEF) && !IsBlank(hide_AgencyID.Text),
                            Patch(
                                OOH_FA_Mapping_Ref,
                                {
                                    FA_Map_Agency_ID: Value(hide_AgencyID.Text),
                                    FA_Map_FA_ID: Value(hide_FA_ID.Text),
                                    FA_Map_Vendor_ID: VAR_VendorID_DEF,
                                    FA_Map_Insertion_Date: Now()
                                }
                            ),
                            ""
                        );
                        If(
                            // check if there were any errors
                            IsEmpty(Errors(OOH_FA_Mapping_Ref)),
                             // if true, go to success notification
                            "",
                         // else, show any error message
                            Notify(
                                Concat(
                                    Errors(OOH_FA_Mapping_Ref),
                                    Column & ": " & Message
                                ),
                                NotificationType.Error
                            )
                        );*/
                         // The above function will update Mapping refrences in OOH_FA_Mapping_Ref table.
                    );
                    //If(    !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                    Patch(
                        OOH_Log_Txn,
                        LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text)
                        ),
                        {
                           // Log_Vendor_ID: Value(hide_VendorID.Text),
                            Log_Publication_Code: VAR_PublicationCode_DEF,
                            Log_Publication_Name: VAR_PublicationName_DEF,
                            Log_Invoice_ContractNumber: ContractNumber_TextInput.Text,
                            Log_Invoice_ExtractedTax: Value(Tax_TextInput.Text),
                            Log_Invoice_Amount: Value(Amount_TextInput.Text),
                            Log_Invoice_Number: InvoiceNum_TextInput.Text,
                            Log_Validated_C: C_TextInput.Text,
                            Log_Validated_P: P_TextInput.Text,
                            Log_Validated_E: E_TextInput.Text,
                            Log_Invoice_Date: InvDate_TextInput.Text,
                            Log_Invoice_MOS: MOS_TextInput.Text,
                            Log_FA_Update_Date: Now()
                        }
                    );
                    OOHChangeVendorMapping.Run(
                        ID_TextInput.Text,
                        VAR_VendorID_DEF,
                        0
                    );
                    Refresh(OOH_Log_Txn);
                    Refresh(OOH_Log_TXN_VIEW);
                    If(
                            // check if there were any errors
                        IsEmpty(Errors(OOH_Log_Txn)),
                             // if true, go to success notification
                        Notify(
                            "The record has been successfully Saved, Note:- Changing the Vendor will change the corresponding FA respectively",// patched with FA Status = MANUAL-S9",
                            NotificationType.Success,
                            2000
                        ),
                         // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Log_Txn),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );
                    Reset(Checkbox_Invoice);
                    Reset(Checkbox_MOS);
                    Reset(Checkbox_Amount);
                PressedColor: =RGBA(211, 66, 9, 1)
                PressedFill: =WhiteSmoke
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="SAVE"
                Width: =67
                X: =321
                Y: =150
                ZIndex: =51

            Save_ContractID_Button As button:
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(IsBlank(ContractNumber_TextInput.Text),DisplayMode.Disabled,DisplayMode.Edit)
                Fill: =RGBA(0, 134, 208, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(153, 207, 236, 1), -20%)
                OnSelect: |
                    =Patch(
                        OOH_Log_Txn,
                        LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text)
                        ),
                        {Log_Invoice_ContractNumber: ContractNumber_TextInput.Text}
                    );
                    UpdateContext(
                        {
                            varContractData: OOHGetContractData.Run(
                                ContractNumber_TextInput.Text,
                                selected_ID_Data.Text
                            ).success
                        }
                    );
                    If(
                        varContractData = 1,
                        Notify(
                            "Data Synced on change of Contract Number",
                            NotificationType.Success,
                            2000
                        ),
                        Notify(
                            "Data could not be Synced on change of Contract Number",
                            NotificationType.Error,
                            2000
                        )
                    );
                    Refresh(OOH_Log_Txn);
                    Refresh(OOH_Log_TXN_VIEW);
                    Reset(Checkbox_Invoice);
                    Reset(Checkbox_MOS);
                    Reset(Checkbox_Amount);
                    UpdateContext(
                        {
                            VAR_VendorID_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Vendor_ID
                            )
                        }
                    );
                    UpdateContext(
                        {
                            VAR_Vendor_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Name
                            ),
                            VAR_PublicationCode_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Pub_Code
                            ),
                            VAR_PublicationName_DEF: LookUp(
                                OOH_Vendor_Master,
                                Vendor_ID = Value(hide_VendorID.Text),
                                Vendor_Pub_Name
                            )
                        }
                    );
                    Reset(Vendor_TextInput);
                    UpdateContext(
                        {
                            VAR_ContractNum_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Invoice_ContractNumber
                            )
                        }
                    );
                    Reset(ContractNumber_TextInput);
                    UpdateContext(
                        {
                            VAR_C_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_C
                            )
                        }
                    );
                    Reset(C_TextInput);
                    UpdateContext(
                        {
                            VAR_P_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_P
                            )
                        }
                    );
                    Reset(P_TextInput);
                    UpdateContext(
                        {
                            VAR_E_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Validated_E
                            )
                        }
                    );
                    Reset(E_TextInput);
                    UpdateContext(
                        {
                            VAR_MOS_DEF: LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Invoice_MOS
                            )
                        }
                    );
                    Reset(MOS_TextInput_initial);
                    Reset(MOS_TextInput_View);
                    Reset(MOS_TextInput);
                    Reset(InvDate_TextInput_initial);
                    Reset(InvDate_TextInput_View);
                    Reset(InvDate_TextInput);
                    Reset(Client_Name_TextInput);
                    Reset(InvoiceNum_TextInput);
                    Reset(Amount_TextInput);
                    Reset(Tax_TextInput);
                    Reset(ID_TextInput);
                    //Reset(PredictionItemsDataTable);
                    UpdateContext({MySelected: Blank()});
                PaddingBottom: =10
                PaddingTop: =10
                PressedColor: =RGBA(204, 231, 246, 1)
                PressedFill: =WhiteSmoke
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="SAVE CONTRACT ID"
                Width: =96
                X: =211
                Y: =150
                ZIndex: =52

            Test As button:
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =1
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =OOHChangeVendorMapping.Run(
                        ID_TextInput.Text,
                        VAR_VendorID_DEF,
                        0
                    );
                Size: =15
                Text: ="Test"
                Visible: =false
                Width: =79
                X: =98
                Y: =127
                ZIndex: =53

            Dropdown1 As dropdown:
                AllowEmptySelection: =true
                BorderColor: =RGBA(179, 179, 179, 1)
                ChevronBackground: =RGBA(211, 66, 9, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Height: =27
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                Items: =["YES","NO","NA","P"]
                PaddingLeft: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(251, 188, 159, 1)
                SelectionFill: =RGBA(211, 66, 9, 1)
                Size: =9
                Visible: =varIsQA
                Width: =66
                X: =584
                Y: =150
                ZIndex: =54

            UnpaidButton_2 As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(204, 204, 204, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(127, 178, 57, 1)
                FontWeight: =FontWeight.Semibold
                Height: =27
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =RGBA(211, 66, 9, 1)
                OnSelect: |
                    =//UpdateContext({VAR_Vendor_DEF: OOH_Prediction_Datatable.Selected.Prediction_Publication});
                    //Reset(Vendor_TextInput);
                    UpdateContext({VAR_ContractNum_DEF: OOH_Prediction_Datatable.Selected.Prediction_Unpaid_Contract_Id});
                    Reset(ContractNumber_TextInput);
                    UpdateContext({VAR_C_DEF: OOH_Prediction_Datatable.Selected.Prediction_C});
                    Reset(C_TextInput);
                    UpdateContext({VAR_P_DEF: OOH_Prediction_Datatable.Selected.Prediction_P});
                    Reset(P_TextInput);
                    UpdateContext({VAR_E_DEF: OOH_Prediction_Datatable.Selected.Prediction_E});
                    Reset(E_TextInput);
                    UpdateContext({ VAR_MOS_DEF: OOH_Prediction_Datatable.Selected.Prediction_MOS});
                    Reset(MOS_TextInput_initial);
                PressedColor: =RGBA(211, 66, 9, 1)
                PressedFill: =WhiteSmoke
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="MATCH >"
                Width: =67
                X: =10
                Y: =150
                ZIndex: =55

            Checkbox_Invoice As checkbox:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderStyle: =BorderStyle.None
                CheckboxBorderColor: =RGBA(131, 24, 75, 1)
                CheckboxSize: =28
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: =If(InvoiceNum_TextInput.Text="" Or IsBlank(InvoiceNum_TextInput),DisplayMode.Disabled, DisplayMode.Edit)
                FontWeight: =FontWeight.Semibold
                Height: =25
                HoverColor: =RGBA(131, 24, 75, 1)
                Size: =10
                Text: =""
                Width: =24
                X: =346
                Y: =10
                ZIndex: =56

            Checkbox_Amount As checkbox:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderStyle: =BorderStyle.None
                CheckboxBorderColor: =RGBA(131, 24, 75, 1)
                CheckboxSize: =28
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: =If(Amount_TextInput.Text="" Or IsBlank(Amount_TextInput),DisplayMode.Disabled, DisplayMode.Edit)
                FontWeight: =FontWeight.Semibold
                Height: =25
                HoverColor: =RGBA(131, 24, 75, 1)
                Size: =10
                Text: =""
                Width: =24
                X: =484
                Y: =10
                ZIndex: =57

            Checkbox_MOS As checkbox:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderStyle: =BorderStyle.None
                CheckboxBorderColor: =RGBA(131, 24, 75, 1)
                CheckboxSize: =28
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: =If(MOS_TextInput_View.Text="" Or IsBlank(MOS_TextInput_View),DisplayMode.Disabled, DisplayMode.Edit)
                FontWeight: =FontWeight.Semibold
                Height: =25
                HoverColor: =RGBA(131, 24, 75, 1)
                Size: =10
                Text: =""
                Width: =24
                X: =620
                Y: =67
                ZIndex: =58

            Segmented_Checkbox As checkbox:
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderStyle: =BorderStyle.None
                CheckboxBorderColor: =RGBA(131, 24, 75, 1)
                CheckboxSize: =28
                Color: =RGBA(0, 0, 0, 1)
                Height: =25
                HoverColor: =RGBA(131, 24, 75, 1)
                Size: =13
                Text: =""
                Width: =25
                X: =95
                Y: =150
                ZIndex: =59

        InfoContainer As groupContainer.manualLayoutContainer:
            Width: =966
            ZIndex: =3

            EditableDataContainer As groupContainer.manualLayoutContainer:
                Height: =68
                Width: =673
                X: =10
                Y: =79
                ZIndex: =1

                Client_Name_TextInput As text:
                    BorderColor: =RGBA(230, 230, 230, 1)
                    Clear: =true
                    Color: =RGBA(0, 0, 0, 1)
                    Default: |-
                        =//LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Log_Client_Name)
                        LookUp(OOH_Unpaid_Ref, Unpaid_Ref_Client_Code = C_TextInput.Text,Unpaid_Ref_Client_Name)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderThickness: =4
                    Font: =Font.Arial
                    Height: =32
                    HintText: =""
                    HoverBorderColor: =RGBA(230, 230, 230, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    PaddingLeft: =5
                    RadiusBottomLeft: =2
                    RadiusBottomRight: =2
                    RadiusTopLeft: =2
                    RadiusTopRight: =2
                    Size: =10
                    Tooltip: =If(Invoice_FA_Status_Label.Text="", LookUp(SelectedItems, rowNumber = ROWNUM, Log_Client_Name), LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Log_Client_Name))
                    Visible: |-
                        =//varIsQA
                        true
                    Width: =210
                    X: =244
                    Y: =28
                    ZIndex: =1

                IO_TextInput As text:
                    BorderColor: =RGBA(230, 230, 230, 1)
                    Clear: =true
                    Color: =RGBA(0, 0, 0, 1)
                    Default: |
                        =LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Insertion_Order_Ext_Match)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.Arial
                    Height: =31
                    HintText: =""
                    HoverBorderColor: =RGBA(230, 230, 230, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    PaddingLeft: =5
                    RadiusBottomLeft: =2
                    RadiusBottomRight: =2
                    RadiusTopLeft: =2
                    RadiusTopRight: =2
                    Size: =10
                    Tooltip: =
                    Visible: =false
                    Width: =86
                    X: =368
                    Y: =29
                    ZIndex: =2

                PCID_TextInput As text:
                    Align: =Align.Center
                    BorderColor: =RGBA(230, 230, 230, 1)
                    Clear: =true
                    Color: =RGBA(0, 0, 0, 1)
                    Default: |-
                        =Text(
                            LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_FA_Update_Date
                            ),
                            "yyyy-mm-dd"
                        )
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =32
                    HintText: =""
                    HoverBorderColor: =RGBA(230, 230, 230, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    PaddingLeft: =5
                    RadiusBottomLeft: =2
                    RadiusBottomRight: =2
                    RadiusTopLeft: =2
                    RadiusTopRight: =2
                    Size: =10
                    Tooltip: |
                        =If(Invoice_FA_Status_Label.Text="", LookUp(SelectedItems, rowNumber = ROWNUM, Log_Campaign_ID_Match), LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Campaign_ID_Match))
                    Width: =158
                    X: =463
                    Y: =28
                    ZIndex: =3

                Selected_Vendor_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =28
                    Size: =10
                    Text: ="Vendor"
                    X: =2
                    Y: =1
                    ZIndex: =4

                Selected_Client_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =28
                    Size: =10
                    Text: ="Client"
                    X: =244
                    ZIndex: =5

                Selected_IO_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =28
                    Size: =10
                    Text: ="IO"
                    Visible: =false
                    Width: =86
                    X: =368
                    Y: =1
                    ZIndex: =6

                Selected_PCID_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =27
                    Size: =10
                    Text: ="FA Action Date/Save Date"
                    Width: =181
                    X: =463
                    Y: =1
                    ZIndex: =7

                Vendor_TextInput As text:
                    BorderColor: =RGBA(230, 230, 230, 1)
                    Clear: =true
                    Color: =RGBA(0, 0, 0, 1)
                    Default: =VAR_Vendor_DEF
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(250, 250, 250, 1)
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderThickness: =4
                    Font: =Font.Arial
                    Height: =31
                    HintText: =""
                    HoverBorderColor: =RGBA(204, 204, 204, 1)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    OnSelect: |-
                        =UpdateContext({showVendorModal: true})
                    PaddingLeft: =5
                    RadiusBottomLeft: =2
                    RadiusBottomRight: =2
                    RadiusTopLeft: =2
                    RadiusTopRight: =2
                    Size: =8
                    Tooltip: =VAR_Vendor_DEF
                    Width: =196
                    X: =2
                    Y: =29
                    ZIndex: =8

                Remittance_Label As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =28
                    Size: =9
                    Text: ="REMITTANCE PASS"
                    Visible: =false
                    Width: =122
                    X: =556
                    ZIndex: =9

                RemittancePass_Icon As icon.Check:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(211, 66, 9, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Height: =31
                    Icon: =//If(LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Log_Remittance_Pass) = "Yes", Icon.Check, Icon.Cancel)
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    Visible: =false
                    Width: =48
                    X: =596
                    Y: =29
                    ZIndex: =12

                Icon6 As icon.Search:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(246, 88, 16, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Height: =31
                    Icon: =Icon.Edit
                    OnSelect: |-
                        =UpdateContext({showVendorModal: true})
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    Width: =43
                    X: =198
                    Y: =29
                    ZIndex: =13

            NonEditableDataContainer As groupContainer.manualLayoutContainer:
                BorderStyle: =BorderStyle.None
                ContentLanguage: =VAR_PublicationName_DEF
                Fill: =RGBA(255, 255, 255, 1)
                Height: =75
                Width: =966
                Y: =4
                ZIndex: =11

                BackIcon As icon.ChevronLeft:
                    BorderColor: =RGBA(204, 204, 204, 1)
                    Color: =RGBA(246, 88, 16, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Height: =39
                    Icon: =Icon.BackArrow
                    OnSelect: |-
                        =Refresh(OOH_Log_TXN_VIEW);
                        Refresh(OOH_Log_Txn);
                        Navigate(RecordListScreen)
                    Width: =25
                    X: =3
                    Y: =7
                    ZIndex: =1

                Selected_Email_Date_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =24
                    Size: =8
                    Text: |-
                        ="Inbound Date :"
                    Width: =57
                    X: =145
                    Y: =7
                    ZIndex: =2

                Selected_Agency_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: |-
                        ="Agency :"
                    Width: =55
                    X: =28
                    Y: =7
                    ZIndex: =3

                Selected_FA_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: |-
                        ="FA :"
                    Width: =29
                    X: =28
                    Y: =46
                    ZIndex: =4

                Selected_Next_Button As button:
                    BorderStyle: =BorderStyle.None
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =If(ROWNUM >= Last(SelectedItems).rowNumber Or showDialog = true,DisplayMode.Disabled,DisplayMode.Edit)
                    Fill: =RGBA(0, 134, 208, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    HoverColor: =RGBA(255, 255, 255, 1)
                    HoverFill: =ColorFade(RGBA(153, 207, 236, 1), -20%)
                    OnSelect: |
                        =UpdateContext({ROWNUM: ROWNUM + 1});
                        UpdateContext(
                            {
                                VAR_VendorID_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Vendor_ID
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_PublicationCode_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Code
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_M_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_Media_ID
                                )
                            }
                        );
                        /*UpdateContext(
                            {
                                VAR_Remittance_Address: If(
                                    !IsBlank(
                                        LookUp(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                            Unpaid_Ref_Pay_Address
                                        )
                                    ),
                                    LookUp(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                        Unpaid_Ref_Pay_Address
                                    ),
                                    Last(
                                        Filter(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                                        )
                                    ).Unpaid_Ref_Pay_Address
                                )
                            }
                        );*/
                        If(
                            IsBlank(ContractNumber_TextInput.Text),
                            Sort(
                                Filter(
                                    OOH_Vendor_Master,
                                    (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)
                                ),
                                Vendor_Pub_Name,
                                Ascending
                            ),
                            Sort(
                                Filter(
                                    OOH_Vendor_Master,
                                    (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)
                                ),
                                Vendor_Pub_Name,
                                Ascending
                            )
                        );
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Name
                                ),
                                VAR_PublicationName_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Name
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_ContractNum_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_ContractNumber
                                )
                            }
                        );
                        Reset(ContractNumber_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            }
                        );
                        UpdateContext({showTaggingDropdown: false});
                        If(
                            Last(SelectedItems).rowNumber = ROWNUM,
                            Notify(
                                "This is the Last Record to be Tagged",
                                NotificationType.Information,
                                2000
                            ),
                            ""
                        );
                        Reset(Checkbox2);
                        Reset(Checkbox_Amount);
                        Reset(Checkbox_Invoice);
                        Reset(Checkbox_MOS);
                        Refresh(OOH_Log_Txn);
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath
                                )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GMUSA-KineticFinanceAutomation",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-KineticFinanceAutomation",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-KineticFinanceAutomation",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-KineticFinanceAutomation",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            Notify(
                                "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                NotificationType.Information,
                                2000
                            )
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(InvDate_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(InvoiceNum_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(ID_TextInput);
                        Reset(ViewCommentS9Input);
                        //Reset(galPredictionItems);
                        UpdateContext({MySelected: Blank()});
                        UpdateContext({showCommentS9Popup: false});
                        UpdateContext({showManualS9Popup:false});
                        UpdateContext({showIgnoreCommentBox: false});
                        ClearCollect(
                            colSplitS9Records,
                            {lineNumber: 1}
                        );
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="NEXT"
                    Width: =80
                    X: =806
                    Y: =11
                    ZIndex: =5

                Selected_Precious_Button As button:
                    BorderStyle: =BorderStyle.None
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =If(ROWNUM <= 1 Or showDialog = true,DisplayMode.Disabled,DisplayMode.Edit)
                    Fill: =RGBA(0, 134, 208, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    HoverColor: =RGBA(255, 255, 255, 1)
                    HoverFill: =ColorFade(RGBA(153, 207, 236, 1), -20%)
                    OnSelect: |
                        =UpdateContext({ROWNUM: ROWNUM - 1});
                        UpdateContext(
                            {
                                VAR_VendorID_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Vendor_ID
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_PublicationCode_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Code
                                )
                            }
                        );
                        /*UpdateContext(
                            {
                                VAR_Remittance_Address: If(
                                    !IsBlank(
                                        LookUp(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                            Unpaid_Ref_Pay_Address
                                        )
                                    ),
                                    LookUp(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                        Unpaid_Ref_Pay_Address
                                    ),
                                    Last(
                                        Filter(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                                        )
                                    ).Unpaid_Ref_Pay_Address
                                )
                            }
                        );*/
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Name
                                ),
                                VAR_PublicationName_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Name
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_ContractNum_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_ContractNumber
                                )
                            }
                        );
                        Reset(ContractNumber_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            }
                        );
                        UpdateContext({showTaggingDropdown: false});
                        Reset(Checkbox2);
                        Reset(Checkbox_Amount);
                        Reset(Checkbox_Invoice);
                        Reset(Checkbox_MOS);
                        Refresh(OOH_Log_Txn);
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath
                                )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GMUSA-KineticFinanceAutomation",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-KineticFinanceAutomation",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-KineticFinanceAutomation",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-KineticFinanceAutomation",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            Notify(
                                "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                NotificationType.Information,
                                2000
                            )
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(InvDate_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(ID_TextInput);
                        Reset(ViewCommentS9Input);
                        //Reset(galPredictionItems);
                        UpdateContext({MySelected: Blank()});
                        UpdateContext({showCommentS9Popup: false});
                        UpdateContext({showManualS9Popup:false});
                        UpdateContext({showIgnoreCommentBox: false});
                        ClearCollect(
                            colSplitS9Records,
                            {lineNumber: 1}
                        );
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="PREVIOUS"
                    Width: =82
                    X: =705
                    Y: =11
                    ZIndex: =6

                Selected_Agency_Data As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: =LookUp(OOH_Agency_Master, Agency_ID=Value(agency_ID_Hidden.Text), Agency_Name)
                    Width: =90
                    X: =76
                    Y: =7
                    ZIndex: =7

                Selected_Email_Data As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: |-
                        =//Left(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Invoice_Date), 10)
                        Text(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Insertion_Date), "yyyy-mm-dd")
                    Width: =65
                    X: =205
                    Y: =8
                    ZIndex: =8

                Selected_FA_Data As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =25
                    Overflow: =Overflow.Scroll
                    Size: =8
                    Text: |+
                        =//UpdateContext({FAID: LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_FA_ID)});
                        /*LookUp(
                            OOH_FA_Master,
                            FA_ID = Value(hide_FA_ID.Text),
                            FA_Name
                        )*/
                        LookUp(
                            OOH_Log_TXN_VIEW,
                            Log_ID = Value(ID_TextInput.Text),
                            FA_NAME
                        )
                        
                        
                    Width: =115
                    X: =61
                    Y: =46
                    ZIndex: =9

                Temp_ID_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Height: =20
                    Size: =8
                    Text: |-
                        ="ID :"
                    Width: =33
                    X: =170
                    Y: =46
                    ZIndex: =10

                selected_ID_Data As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_ID)
                    Width: =62
                    X: =208
                    Y: =46
                    ZIndex: =11

                Temp_ID_Label_1 As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: |-
                        ="Score :"
                    Visible: =false
                    Width: =45
                    X: =443
                    Y: =46
                    ZIndex: =12

                Temp_ID_Label_2 As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =27
                    Size: =8
                    Text: |-
                        ="Email :"
                    Width: =45
                    X: =275
                    Y: =4
                    ZIndex: =13

                selected_ID_Data_1 As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =20
                    Size: =8
                    Text: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_ConfidenceScore)
                    Width: =43
                    X: =513
                    Y: =30
                    ZIndex: =14

                selected_ID_Data_2 As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =24
                    Overflow: =Overflow.Scroll
                    Size: =8
                    Text: |-
                        =LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Invoice_Sender_Email
                        )
                    Tooltip: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_Sender_Email)
                    Width: =217
                    X: =320
                    Y: =4
                    ZIndex: =15

            Remittance_Popup As groupContainer.manualLayoutContainer:
                Height: =53
                Width: =683
                Y: =147
                ZIndex: =17

                Remittance_Modal As rectangle:
                    BorderColor: =RGBA(179, 179, 179, 1)
                    BorderThickness: =2
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =53
                    Width: =673
                    X: =10
                    ZIndex: =1

                Invoice_Popup_Label As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(246, 88, 16, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    PaddingLeft: =20
                    Size: =10
                    Text: ="Invoice"
                    Visible: =false
                    Width: =280
                    X: =366
                    ZIndex: =2

                Buy_Popup_Model As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 134, 208, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    PaddingLeft: =15
                    Size: =10
                    Text: ="Buy"
                    Width: =673
                    X: =10
                    ZIndex: =3

                Remittance_PDF_Popup_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =27
                    PaddingBottom: =3
                    PaddingTop: =3
                    Size: =9
                    Text: |-
                        =OOH_Prediction_Datatable.Selected.Prediction_Unpaid_Pay_Address
                        /*LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            log_Remittance_PDF
                        )*/
                    Tooltip: |-
                        =If(
                            Invoice_FA_Status_Label.Text = "",
                            LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Invoice_RemittanceAddress           
                            ),
                            LookUp(
                                 OOH_Log_Txn,
                                 Log_ID = Value(ID_TextInput.Text),
                                 Log_Invoice_RemittanceAddress
                            )
                        )
                    Visible: =false
                    Width: =330
                    X: =353
                    Y: =20
                    ZIndex: =4

                Remittance_Address_Popup_Label As label:
                    BorderColor: =RGBA(131, 24, 75, 1)
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =27
                    PaddingBottom: =3
                    PaddingTop: =3
                    Size: =9
                    Text: |-
                        =If(
                            !IsBlank(
                                LookUp(
                                    OOH_Unpaid_Ref,
                                    Unpaid_Ref_Contract_ID = VAR_ContractNum_DEF,//ContractNumber_TextInput.Text,
                                    Unpaid_Ref_Pay_Address
                                )
                            ),
                            LookUp(
                                OOH_Unpaid_Ref,
                                Unpaid_Ref_Contract_ID = VAR_ContractNum_DEF,//ContractNumber_TextInput.Text,
                                Unpaid_Ref_Pay_Address
                            ),
                            LookUp(
                                OOH_Predictions_Mview,
                                Prediction_Unpaid_Contract_Id = VAR_ContractNum_DEF,//VAR_ContractNum_DEF,
                                Prediction_Unpaid_Pay_Address
                            )
                        )
                    Width: =673
                    X: =10
                    Y: =20
                    ZIndex: =5

                Blue_Line As icon.HorizontalLine:
                    BorderColor: =RGBA(0, 134, 208, 1)
                    Color: =RGBA(0, 134, 208, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Fill: =RGBA(0, 134, 208, 1)
                    Height: =6
                    Icon: =Icon.HorizontalLine
                    Width: =673
                    X: =10
                    Y: =47
                    ZIndex: =7

                Orange_Line As icon.HorizontalLine:
                    BorderColor: =RGBA(246, 88, 16, 1)
                    Color: =RGBA(246, 88, 16, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(244, 244, 244, 1)
                    Fill: =RGBA(246, 88, 16, 1)
                    Height: =10
                    Icon: =Icon.HorizontalLine
                    Visible: =false
                    Width: =338
                    X: =345
                    Y: =47
                    ZIndex: =8

            Tag_Button As button:
                BorderStyle: =BorderStyle.None
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(179, 179, 179, 1)
                DisplayMode: |-
                    =If((IsBlank(C_TextInput.Text) Or C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = ""  Or IsBlank(E_TextInput.Text) Or E_TextInput.Text = "") Or ((IsBlank(MOS_TextInput.Text) Or  MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (IsBlank(Amount_TextInput.Text) Or  Amount_TextInput.Text="" Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM"))Or Checkbox_Amount.Value=false Or Checkbox_Invoice.Value=false Or Checkbox_MOS.Value=false,
                    DisplayMode.Disabled,DisplayMode.Edit)
                Fill: =//If(Text(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_IsMatched)) = "Yes",Color.DarkGreen, RGBA(211, 66, 9, 1))
                FontWeight: =FontWeight.Semibold
                Height: =25
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =/*UpdateContext({showVendorModal: false});
                    
                    If(
                        !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(M_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text),
                        Patch(
                            master_log,
                            LookUp(
                                master_log,
                                ID = Value(ID_TextInput.Text)
                            ),
                            {
                                Vendor: Vendor_TextInput.Text,
                                PUBLICATION_CODE:VAR_PublicationCode_DEF,
                                PUBLICATION_NAME:VAR_PublicationName_DEF,
                                CLIENT_NAME: Client_Name_TextInput.Text,
                                INSERTION_ORDER: IO_TextInput.Text,
                                CAMPAIGN_ID: PCID_TextInput.Text,
                                Invoice_Num: InvoiceNum_TextInput.Text,
                                PDF_Amount: Amount_TextInput.Text,
                                MediaLookup: M_TextInput.Text,
                                C: C_TextInput.Text,
                                P: P_TextInput.Text,
                                E: E_TextInput.Text,
                                PDF_TAX_Amount: Tax_TextInput.Text,
                                PDF_Invoice_Date: InvDate_TextInput.Text,
                                PDF_MOS: MOS_TextInput.Text,
                                UpdatedDate: Now(),
                                UpdatedBy: varLoggedInUser.Email,
                                FA_Status: "TAG",
                                FA_Interface_Log_Status: "FA Processed"
                            }
                        );
                        If(
                         // check if there were any errors
                            !IsEmpty(Errors(master_log)),
                         // if true, show any error message
                            Notify(
                                Concat(
                                    Errors(master_log),
                                    Column & ": " & Message
                                ),
                                NotificationType.Error
                            ),
                         // else, go to success notification
                            Notify(
                                "The record has been successfully patched with FA Status = TAG",
                                NotificationType.Success,
                                2000
                            )
                        );
                        If(
                            ROWNUM >= Last(SelectedItems).rowNumber,
                            "",
                            UpdateContext({ROWNUM: ROWNUM + 1});
                            UpdateContext(
                                {
                                    PDFLink: LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_SP_FilePath
                                    )
                                }
                            );
                            If(
                                !IsBlank(
                                    Find(
                                        "/GRMUSA-APDIGITAL2022",
                                        PDFLink
                                    )
                                ),
                                UpdateContext(
                                    {
                                        varPDF: OOHShowPDFDetails.Run(
                                            Substitute(
                                                Concat(
                                                    FirstN(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GRMUSA-APDIGITAL2022",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result,
                                                        CountRows(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GRMUSA-APDIGITAL2022",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result
                                                        ) - 1
                                                    ),
                                                    Result & "/"
                                                ),
                                                "/GRMUSA-APDIGITAL2022",
                                                ""
                                            ) & LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Invoice_FileName
                                            )
                                        )
                                    }
                                ),
                                UpdateContext(
                                    {
                                        varPDF: OOHShowPDFDetails.Run(
                                            Substitute(
                                                Concat(
                                                    FirstN(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-InvoiceProcessing",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result,
                                                        CountRows(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GMUSA-InvoiceProcessing",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result
                                                        ) - 1
                                                    ),
                                                    Result & "/"
                                                ),
                                                "/GMUSA-InvoiceProcessing",
                                                ""
                                            ) & LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Invoice_FileName
                                            )
                                        )
                                    }
                                )
                            );
                            Refresh(master_log);
                            UpdateContext(
                                {
                                    VAR_Vendor_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Vendor
                                        ),
                                        LookUp(
                                            master_log,
                                            ID = Value(ID_TextInput.Text),
                                            Vendor
                                        )
                                    ),
                                    VAR_PublicationName_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Publication_Name
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Publication_Name
                                    )
                                ),
                                VAR_PublicationCode_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Publication_Code
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Publication_Code
                                    )
                                )
                                }
                            );
                            Reset(Vendor_TextInput);
                            UpdateContext(
                                {
                                    VAR_M_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_Media_ID
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Invoice_Media_ID
                                        )
                                    )
                                }
                            );
                            Reset(M_TextInput);
                            UpdateContext(
                                {
                                    VAR_C_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Validated_C
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_C
                                        )
                                    )
                                }
                            );
                            Reset(C_TextInput);
                            UpdateContext(
                                {
                                    VAR_P_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Validated_P
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_P
                                        )
                                    )
                                }
                            );
                            Reset(P_TextInput);
                            UpdateContext(
                                {
                                    VAR_E_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Validated_E
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_E
                                        )
                                    )
                                }
                            );
                            Reset(E_TextInput);
                            UpdateContext(
                                {
                                    VAR_MOS_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_MOS
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Invoice_MOS
                                        )
                                    )
                                }
                            );
                            Reset(MOS_TextInput_initial);
                            Reset(Client_Name_TextInput);
                            Reset(IO_TextInput);
                            Reset(PCID_TextInput);
                            Reset(InvoiceNum_TextInput);
                            Reset(Amount_TextInput);
                            Reset(Tax_TextInput);
                            Reset(InvDate_TextInput_initial);
                            Reset(ID_TextInput);
                           
                        ),
                        If(
                            IsBlank(MOS_TextInput_initial.Text),
                            Notify(
                                "Insertion Month Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(E_TextInput.Text),
                            Notify(
                                "Estimate Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(P_TextInput.Text),
                            Notify(
                                "Product Code Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(C_TextInput.Text),
                            Notify(
                                "Client Code Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(M_TextInput.Text),
                            Notify(
                                "MediaLookup Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(Amount_TextInput.Text),
                            Notify(
                                "Amount Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(InvoiceNum_TextInput.Text),
                            Notify(
                                "Invoice Number Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            IsBlank(Vendor_TextInput.Text),
                            Notify(
                                "Vendor Field is Empty",
                                NotificationType.Warning
                            ),
                            ""
                        );
                        If(
                            !IsBlank(ViewCommentS9Input.Text),
                            Patch(
                                FA_Interface_FA_Comments,
                                Defaults(FA_Interface_FA_Comments),
                                {
                                    SNo: GUID(),
                                    Agency: Selected_Agency_Data.Text,
                                    Vendor: Vendor_TextInput.Text,
                                    InsertionMonth: MOS_TextInput.Text,
                                    InvoiceNum: InvoiceNum_TextInput.Text,
                                    RecordID: ID_TextInput.Text,
                                    ClientCode: C_TextInput.Text,
                                    ProductCode: P_TextInput.Text,
                                    EstCode: E_TextInput.Text,
                                    CommenterID: Selected_FA_Data.Text,
                                    CreateDate: Now(),
                                    Comment: ViewCommentS9Input.Text
                                }
                            );
                            If(
                         // check if there were any errors
                                !IsEmpty(Errors(FA_Interface_FA_Comments)),
                         // if true, show any error message
                                Notify(
                                    Concat(
                                        Errors(FA_Interface_FA_Comments),
                                        Column & ": " & Message
                                    ),
                                    NotificationType.Error
                                ),
                         // else, go to success notification
                                Notify(
                                    "Comment has been successfully added for this record",
                                    NotificationType.Success,
                                    2000
                                )
                            );
                            Reset(ViewCommentS9Input);
                            ,
                            ""
                        );
                        
                    );
                    Reset(Checkbox1);
                     Reset(ViewCommentS9Input); */
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Text: ="TAG"
                Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number is  missing/invalid.","")
                Visible: |-
                    =//If(Tagging_Button.Text="VIEW TAGGING",false,true)
                    false
                Width: =80
                X: =568
                Y: =24
                ZIndex: =22

            Invoice_FA_Status_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =//If(Text(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_IsMatched)) = "Yes",Color.DarkGreen, RGBA(0, 0, 0, 1))
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =20
                Size: =7
                Text: =LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_FA_Action_Status)
                Width: =94
                X: =336
                Y: =49
                ZIndex: =23

            Status_Name As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =//If(Text(LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_IsMatched)) = "Yes",Color.DarkGreen, RGBA(0, 0, 0, 1))
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =8
                Text: |-
                    ="FA Status :"
                Width: =65
                X: =271
                Y: =49
                ZIndex: =24

            Label1 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =8
                Text: |-
                    ="UUID :"
                Visible: =false
                Width: =50
                X: =558
                Y: =54
                ZIndex: =25

            Label2 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =17
                Size: =8
                Text: =LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_UUID)
                Visible: =false
                Width: =55
                X: =614
                Y: =55
                ZIndex: =26

            Label6 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Bold
                Height: =20
                PaddingTop: =0
                Size: =10
                Text: =If(IsBlank(Last(SelectedItems).rowNumber),"",If(ROWNUM=1,"Selected "&ROWNUM &"st record out of "& Last(SelectedItems).rowNumber,If(ROWNUM=2,"Selected "&ROWNUM &"nd record out of "& Last(SelectedItems).rowNumber,If(ROWNUM=3,"Selected "&ROWNUM &"rd record out of "& Last(SelectedItems).rowNumber,"Selected "&ROWNUM &"th record out of "& Last(SelectedItems).rowNumber))))
                Width: =230
                X: =705
                Y: =49
                ZIndex: =27

            Icon8 As icon.ChevronDown:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(255, 255, 255, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(0, 121, 187, 1)
                Height: =25
                Icon: =If(showTaggingDropdown,Icon.ChevronUp,Icon.ChevronDown)
                OnSelect: |-
                    =UpdateContext({showTaggingDropdown:!showTaggingDropdown});
                    UpdateContext({showVendorModal: false})
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Width: =25
                X: =663
                Y: =24
                ZIndex: =28

            Container5 As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =1
                Height: =62
                Visible: =showTaggingDropdown
                Width: =130
                X: =558
                Y: =49
                ZIndex: =29

                TAG As button:
                    BorderStyle: =BorderStyle.None
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="TAG"
                    Visible: =false
                    Width: =130
                    Y: =30
                    ZIndex: =1

                "'MAN-S9_Button' As button":
                    BorderStyle: =BorderStyle.None
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    DisplayMode: |
                        =If(
                            (IsBlank(C_TextInput.Text) Or  C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = "" Or IsBlank(E_TextInput.Text) Or E_TextInput.Text = "") Or ((IsBlank(MOS_TextInput.Text) Or  MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (IsBlank(Amount_TextInput.Text) Or Amount_TextInput.Text="" Or Amount_TextInput.Text = "FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text = "FFM")) Or Checkbox_Amount.Value=false Or Checkbox_Invoice.Value=false Or Checkbox_MOS.Value=false,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =25
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =/*UpdateContext({showVendorModal: false});
                        If(
                            !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                            Patch(
                                master_log,
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text)
                                ),
                                {
                                    Vendor: Vendor_TextInput.Text,
                                    PUBLICATION_CODE:VAR_PublicationCode_DEF,
                                    PUBLICATION_NAME:VAR_PublicationName_DEF,
                                    CLIENT_NAME: Client_Name_TextInput.Text,
                                    INSERTION_ORDER: IO_TextInput.Text,
                                    CAMPAIGN_ID: PCID_TextInput.Text,
                                    Invoice_Num: InvoiceNum_TextInput.Text,
                                    PDF_Amount: Amount_TextInput.Text,
                                    MediaLookup: If(
                                        !IsBlank(M_TextInput.Text),
                                        M_TextInput.Text,
                                        "I"
                                    ),
                                    C: C_TextInput.Text,
                                    P: P_TextInput.Text,
                                    E: E_TextInput.Text,
                                    PDF_TAX_Amount: Tax_TextInput.Text,
                                    PDF_Invoice_Date: InvDate_TextInput.Text,
                                    PDF_MOS: MOS_TextInput.Text,
                                    UpdatedDate: Now(),
                                    UpdatedBy: varLoggedInUser.Email,
                                    FA_Status: "MANUAL - S9",
                                    FA_Interface_Log_Status: "FA Processed"
                                }
                            );
                            If(
                                ROWNUM >= Last(SelectedItems).rowNumber,
                                "",
                                UpdateContext({ROWNUM: ROWNUM + 1});
                                UpdateContext(
                                    {
                                        PDFLink: LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_SP_FilePath
                                        )
                                    }
                                );
                                If(
                                    !IsBlank(
                                        Find(
                                            "/GRMUSA-APDIGITAL2022",
                                            PDFLink
                                        )
                                    ),
                                    UpdateContext(
                                        {
                                            varPDF: OOHShowPDFDetails.Run(
                                                Substitute(
                                                    Concat(
                                                        FirstN(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GRMUSA-APDIGITAL2022",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result,
                                                            CountRows(
                                                                Split(
                                                                    Mid(
                                                                        PDFLink,
                                                                        Find(
                                                                            "/GRMUSA-APDIGITAL2022",
                                                                            PDFLink
                                                                        )
                                                                    ),
                                                                    "/"
                                                                ).Result
                                                            ) - 1
                                                        ),
                                                        Result & "/"
                                                    ),
                                                    "/GRMUSA-APDIGITAL2022",
                                                    ""
                                                ) & LookUp(
                                                    SelectedItems,
                                                    rowNumber = ROWNUM,
                                                    Log_Invoice_FileName
                                                )
                                            )
                                        }
                                    ),
                                    UpdateContext(
                                        {
                                            varPDF: OOHShowPDFDetails.Run(
                                                Substitute(
                                                    Concat(
                                                        FirstN(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GMUSA-InvoiceProcessing",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result,
                                                            CountRows(
                                                                Split(
                                                                    Mid(
                                                                        PDFLink,
                                                                        Find(
                                                                            "/GMUSA-InvoiceProcessing",
                                                                            PDFLink
                                                                        )
                                                                    ),
                                                                    "/"
                                                                ).Result
                                                            ) - 1
                                                        ),
                                                        Result & "/"
                                                    ),
                                                    "/GMUSA-InvoiceProcessing",
                                                    ""
                                                ) & LookUp(
                                                    SelectedItems,
                                                    rowNumber = ROWNUM,
                                                    Log_Invoice_FileName
                                                )
                                            )
                                        }
                                    )
                                );
                                Refresh(master_log);
                                UpdateContext(
                                    {
                                        VAR_Vendor_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Vendor
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                Vendor
                                            )
                                        ),
                                        VAR_PublicationName_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Publication_Name
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Publication_Name
                                            )
                                        ),
                                        VAR_PublicationCode_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Publication_Code
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Publication_Code
                                            )
                                        )
                                    }
                                );
                                Reset(Vendor_TextInput);
                                UpdateContext(
                                    {
                                        VAR_M_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                MediaLookup
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                MediaLookup
                                            )
                                        )
                                    }
                                );
                                Reset(M_TextInput);
                                UpdateContext(
                                    {
                                        VAR_C_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                C
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                C
                                            )
                                        )
                                    }
                                );
                                Reset(C_TextInput);
                                UpdateContext(
                                    {
                                        VAR_P_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                P
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                P
                                            )
                                        )
                                    }
                                );
                                Reset(P_TextInput);
                                UpdateContext(
                                    {
                                        VAR_E_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                E
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                E
                                            )
                                        )
                                    }
                                );
                                Reset(E_TextInput);
                                UpdateContext(
                                    {
                                        VAR_MOS_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                PDF_MOS
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                PDF_MOS
                                            )
                                        )
                                    }
                                );
                                Reset(MOS_TextInput_initial);
                                Reset(Client_Name_TextInput);
                                Reset(IO_TextInput);
                                Reset(PCID_TextInput);
                                Reset(InvoiceNum_TextInput);
                                Reset(Amount_TextInput);
                                Reset(Tax_TextInput);
                                Reset(InvDate_TextInput_initial);
                                Reset(ID_TextInput);
                                
                                If(
                                // check if there were any errors
                                IsEmpty(Errors(master_log)),
                                 // if true, go to success notification
                                Notify(
                                    "The record has been successfully patched with FA Status = MANUAL-S9",
                                    NotificationType.Success,2000
                                ),
                             // else, show any error message
                                 Notify(
                                    Concat(
                                        Errors(master_log),
                                        Column & ": " & Message
                                    ),
                                    NotificationType.Error
                                  )
                                );
                            ),
                           If(IsBlank(InvDate_TextInput_initial.Text), Notify("Invoice Date Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(MOS_TextInput_initial.Text), Notify("Insertion Month Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(E_TextInput.Text), Notify("Estimate Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(P_TextInput.Text), Notify("Product Code Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(C_TextInput.Text), Notify("Client Code Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(Amount_TextInput.Text), Notify("Amount Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(InvoiceNum_TextInput.Text), Notify("Invoice Number Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(Vendor_TextInput.Text), Notify("Vendor Field is Empty", NotificationType.Warning), "");
                           If(
                                !IsBlank(ViewCommentS9Input.Text),
                                Patch(
                                    FA_Interface_FA_Comments,
                                    Defaults(FA_Interface_FA_Comments),
                                    {
                                        SNo: GUID(),
                                        Agency: Selected_Agency_Data.Text,
                                        Vendor: Vendor_TextInput.Text,
                                        InsertionMonth: MOS_TextInput.Text,
                                        InvoiceNum: InvoiceNum_TextInput.Text,
                                        RecordID: ID_TextInput.Text,
                                        ClientCode: C_TextInput.Text,
                                        ProductCode: P_TextInput.Text,
                                        EstCode: E_TextInput.Text,
                                        CommenterID: Selected_FA_Data.Text,
                                        CreateDate: Now(),
                                        Comment: ViewCommentS9Input.Text
                                    }
                                );
                                If(
                             // check if there were any errors
                                    !IsEmpty(Errors(FA_Interface_FA_Comments)),
                             // if true, show any error message
                                    Notify(
                                        Concat(
                                            Errors(FA_Interface_FA_Comments),
                                            Column & ": " & Message
                                        ),
                                        NotificationType.Error
                                    ),
                             // else, go to success notification
                                    Notify(
                                        "Comment has been successfully added for this record",
                                        NotificationType.Success,
                                        2000
                                    )
                                );
                                Reset(ViewCommentS9Input);
                                ,
                                ""
                            );
                        );
                        Reset(Checkbox1);
                        Reset(ViewCommentS9Input);*/
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="MANUAL-S9"
                    Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                    Visible: =false
                    Width: =105
                    Y: =75
                    ZIndex: =2

                NR_Button As button:
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    DisplayMode: |
                        =If(
                            (IsBlank(C_TextInput.Text) Or  C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = "" Or IsBlank(E_TextInput.Text) Or E_TextInput.Text = "") Or ((IsBlank(MOS_TextInput.Text) Or  MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (IsBlank(Amount_TextInput.Text) Or Amount_TextInput.Text="" Or Amount_TextInput.Text = "FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text = "FFM")) Or Checkbox_Amount.Value=false Or Checkbox_Invoice.Value=false Or Checkbox_MOS.Value=false,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =UpdateContext({TempFA_Mapping_Ref_Data: Blank()});
                        UpdateContext({showVendorModal: false});
                        If(
                            VAR_VendorID_DEF = LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_Vendor_ID
                            ),
                            "",
                            UpdateContext(
                                {
                                    InvoiceLookupRecord: LookUp(
                                        OOH_Invoice_Master,
                                        Invoice_Number = hide_InvoiceID.Text && Invoice_Cease_Date = Blank()
                                    )
                                }
                            );
                            Patch(
                                OOH_Invoice_Master,
                                LookUp(
                                    OOH_Invoice_Master,
                                    Invoice_ID = Value(InvoiceLookupRecord.Invoice_ID)
                                ),
                                {Invoice_Cease_Date: Now()}
                            );
                            // Above function will update existing record.
                        Patch(
                                OOH_Invoice_Master,
                                {
                                    Invoice_Number: InvoiceLookupRecord.Invoice_Number,
                                    Invoice_Amount: Value(Amount_TextInput.Text),
                                    Invoice_Date: InvoiceLookupRecord.Invoice_Date,
                                    Invoice_File_Name: InvoiceLookupRecord.Invoice_File_Name,
                                    Invoice_Vendor_ID: VAR_VendorID_DEF,
                                    Invoice_Agency_ID: InvoiceLookupRecord.Invoice_Agency_ID,
                                    Invoice_Insertion_Date: InvoiceLookupRecord.Invoice_Insertion_Date
                                }
                            // Above function will insert new record with empty cease date.
                            );
                            If(
                                // check if there were any errors
                                IsEmpty(Errors(OOH_Invoice_Master)),
                                 // if true, go to success notification
                                "",
                             // else, show any error message
                                Notify(
                                    Concat(
                                        Errors(OOH_Invoice_Master),
                                        Column & ": " & Message
                                    ),
                                    NotificationType.Error
                                )
                            );
                        );
                        If(
                            !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                            Patch(
                                OOH_Log_Txn,
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text)
                                ),
                                {
                                    // Log_Vendor_ID: Value(hide_VendorID.Text),
                                    Log_Publication_Code: VAR_PublicationCode_DEF,
                                    Log_Publication_Name: VAR_PublicationName_DEF,
                                    Log_Invoice_ContractNumber: ContractNumber_TextInput.Text,
                                    Log_Invoice_ExtractedTax: Value(Tax_TextInput.Text),
                                    Log_Invoice_Amount: Value(Amount_TextInput.Text),
                                    Log_Invoice_Number: InvoiceNum_TextInput.Text,
                                    //Log_Manual_Override:varLoggedInUser.Email,
                                    Log_Validated_C: C_TextInput.Text,
                                    Log_Validated_P: P_TextInput.Text,
                                    Log_Validated_E: E_TextInput.Text,
                                    Log_Invoice_Date: InvDate_TextInput.Text,
                                    Log_Invoice_MOS: MOS_TextInput.Text,
                                    Log_FA_Update_Date: Now(),
                                    Log_FA_Action_Status: "NR",
                                    Log_FA_Interface_Log_Status: "FA Processed"
                                }
                            );
                            OOHChangeVendorMapping.Run(
                                ID_TextInput.Text,
                                VAR_VendorID_DEF,
                                0
                            );
                            Refresh(OOH_Log_Txn);
                        Refresh(OOH_Log_TXN_VIEW);
                            If(
                                // check if there were any errors
                                IsEmpty(Errors(OOH_Log_Txn)),
                                 // if true, go to success notification
                                Notify(
                                    "The record has been successfully patched with FA Status = NR, Note:- Changing the Vendor will change it's corresponding FA respectively",
                                    NotificationType.Success,
                                    2000
                                ),
                             // else, show any error message
                                Notify(
                                    Concat(
                                        Errors(OOH_Log_Txn),
                                        Column & ": " & Message
                                    ),
                                    NotificationType.Error
                                )
                            );
                            If(
                                ROWNUM >= Last(SelectedItems).rowNumber,
                                "",
                                UpdateContext({ROWNUM: ROWNUM + 1});
                                UpdateContext(
                                    {
                                        PDFLink: LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_SP_FilePath
                                        )
                                    }
                                );
                                If(
                                    !IsBlank(
                                        Find(
                                            "/GMUSA-KineticFinanceAutomation",
                                            PDFLink
                                        )
                                    ),
                                    UpdateContext(
                                        {
                                            varPDF: OOHShowPDFDetails.Run(
                                                Substitute(
                                                    Concat(
                                                        FirstN(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GMUSA-KineticFinanceAutomation",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result,
                                                            CountRows(
                                                                Split(
                                                                    Mid(
                                                                        PDFLink,
                                                                        Find(
                                                                            "/GMUSA-KineticFinanceAutomation",
                                                                            PDFLink
                                                                        )
                                                                    ),
                                                                    "/"
                                                                ).Result
                                                            ) - 1
                                                        ),
                                                        Result & "/"
                                                    ),
                                                    "/GMUSA-KineticFinanceAutomation",
                                                    ""
                                                ) & LookUp(
                                                    SelectedItems,
                                                    rowNumber = ROWNUM,
                                                    Log_Invoice_FileName
                                                )
                                            )
                                        }
                                    ),
                                    Notify(
                                        "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                        NotificationType.Information,
                                        2000
                                    )
                                );
                                Refresh(OOH_Log_Txn);
                                /*UpdateContext(
                                    {
                                        VAR_Remittance_Address: If(
                                            !IsBlank(
                                                LookUp(
                                                    OOH_Unpaid_Ref,
                                                    Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                                    Unpaid_Ref_Pay_Address
                                                )
                                            ),
                                            LookUp(
                                                OOH_Unpaid_Ref,
                                                Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                                Unpaid_Ref_Pay_Address
                                            ),
                                            Last(
                                                Filter(
                                                    OOH_Unpaid_Ref,
                                                    Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                                                )
                                            ).Unpaid_Ref_Pay_Address
                                        )
                                    }
                                );*/
                        UpdateContext(
                                    {
                                        VAR_VendorID_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Vendor_ID
                                        )
                                    }
                                );
                                UpdateContext(
                                    {
                                        VAR_Vendor_DEF: LookUp(
                                            OOH_Vendor_Master,
                                            Vendor_ID = Value(hide_VendorID.Text),
                                            Vendor_Name
                                        ),
                                        VAR_PublicationName_DEF: LookUp(
                                            OOH_Vendor_Master,
                                            Vendor_ID = Value(hide_VendorID.Text),
                                            Vendor_Pub_Name
                                        ),
                                        VAR_PublicationCode_DEF: LookUp(
                                            OOH_Vendor_Master,
                                            Vendor_ID = Value(hide_VendorID.Text),
                                            Vendor_Pub_Code
                                        )
                                    }
                                );
                                Reset(Vendor_TextInput);
                                UpdateContext(
                                    {
                                        VAR_ContractNum_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Invoice_ContractNumber
                                        )
                                    }
                                );
                                Reset(ContractNumber_TextInput);
                                UpdateContext(
                                    {
                                        VAR_C_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_C
                                        )
                                    }
                                );
                                Reset(C_TextInput);
                                UpdateContext(
                                    {
                                        VAR_P_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_P
                                        )
                                    }
                                );
                                Reset(P_TextInput);
                                UpdateContext(
                                    {
                                        VAR_E_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Validated_E
                                        )
                                    }
                                );
                                Reset(E_TextInput);
                                UpdateContext(
                                    {
                                        VAR_MOS_DEF: LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Invoice_MOS
                                        )
                                    }
                                );
                                Reset(MOS_TextInput_initial);
                                Reset(Client_Name_TextInput);
                                Reset(IO_TextInput);
                                Reset(PCID_TextInput);
                                Reset(InvoiceNum_TextInput);
                                Reset(Amount_TextInput);
                                Reset(Tax_TextInput);
                                Reset(InvDate_TextInput_initial);
                                Reset(ID_TextInput);
                            ),
                            If(
                                IsBlank(InvDate_TextInput_initial.Text),
                                Notify(
                                    "Invoice Date Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(MOS_TextInput_initial.Text),
                                Notify(
                                    "Insertion Month Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(E_TextInput.Text),
                                Notify(
                                    "Estimate Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(P_TextInput.Text),
                                Notify(
                                    "Product Code Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(C_TextInput.Text),
                                Notify(
                                    "Client Code Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(Amount_TextInput.Text),
                                Notify(
                                    "Amount Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(InvoiceNum_TextInput.Text),
                                Notify(
                                    "Invoice Number Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            If(
                                IsBlank(Vendor_TextInput.Text),
                                Notify(
                                    "Vendor Field is Empty",
                                    NotificationType.Warning
                                ),
                                ""
                            );
                            Notify(
                                "Comment has been successfully added for this record",
                                NotificationType.Success,
                                2000
                            );
                            
                        );
                        Reset(Checkbox_Amount);
                        Reset(Checkbox_Invoice);
                        Reset(Checkbox_MOS);
                        Reset(ViewCommentS9Input);
                    PressedColor: =RGBA(211, 66, 9, 1)
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="NR"
                    Tooltip: |-
                        =If((C_TextInput.Text = "" Or P_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),
                        "The value of C P or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                    Visible: =showTaggingDropdown
                    Width: =130
                    Y: =30
                    ZIndex: =3

                Redirect_Button As button:
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =24
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =UpdateContext({showDialog: true});
                        UpdateContext({showVendorModal: false});
                        ClearCollect(colFAIssueList, 'FA Issue List'.Title);
                    PressedColor: =RGBA(211, 66, 9, 1)
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="REDIRECT"
                    Visible: =false
                    Width: =105
                    Y: =125
                    ZIndex: =4

                "'Comment-S9_Button' As button":
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    DisplayMode: |
                        =If(
                            (IsBlank(C_TextInput.Text) Or C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = "" Or E_TextInput.Text = "" Or IsBlank(E_TextInput.Text) ) Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text="" Or Amount_TextInput.Text = "FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text = "FFM")) Or Checkbox_Amount.Value=false Or Checkbox_Invoice.Value=false Or Checkbox_MOS.Value=false,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =25
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =UpdateContext({showCommentS9Popup:true});
                        UpdateContext({showTaggingDropdown:false});
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="SPLIT-S9"
                    Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                    Visible: =false
                    Width: =105
                    Y: =25
                    ZIndex: =5

                Complex_Button_6 As button:
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    DisplayMode: |-
                        =//If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text = "FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text = "FFM")), DisplayMode.Disabled,  DisplayMode.Edit)
                        DisplayMode.Edit
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =25
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =/* UpdateContext({showVendorModal: false});
                        If(
                            !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                            Patch(
                                master_log,
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text)
                                ),
                                {
                                    Vendor: Vendor_TextInput.Text,
                                    PUBLICATION_CODE:VAR_PublicationCode_DEF,
                                    PUBLICATION_NAME:VAR_PublicationName_DEF,
                                    CLIENT_NAME: Client_Name_TextInput.Text,
                                    INSERTION_ORDER: IO_TextInput.Text,
                                    CAMPAIGN_ID: PCID_TextInput.Text,
                                    Invoice_Num: InvoiceNum_TextInput.Text,
                                    PDF_Amount: Amount_TextInput.Text,
                                    MediaLookup: If(
                                        !IsBlank(M_TextInput.Text),
                                        M_TextInput.Text,
                                        "I"
                                    ),
                                    C: C_TextInput.Text,
                                    P: P_TextInput.Text,
                                    E: E_TextInput.Text,
                                    PDF_TAX_Amount: Tax_TextInput.Text,
                                    PDF_Invoice_Date: InvDate_TextInput.Text,
                                    PDF_MOS: MOS_TextInput.Text,
                                    UpdatedDate: Now(),
                                    UpdatedBy: varLoggedInUser.Email,
                                    FA_Status: "COMPLEX",
                                    FA_Interface_Log_Status: "FA Processed"
                                }
                            );
                            If(
                                ROWNUM >= Last(SelectedItems).rowNumber,
                                "",
                                UpdateContext({ROWNUM: ROWNUM + 1});
                                UpdateContext(
                                    {
                                        PDFLink: LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_SP_FilePath
                                        )
                                    }
                                );
                                If(
                                    !IsBlank(
                                        Find(
                                            "/GRMUSA-APDIGITAL2022",
                                            PDFLink
                                        )
                                    ),
                                    UpdateContext(
                                        {
                                            varPDF: OOHShowPDFDetails.Run(
                                                Substitute(
                                                    Concat(
                                                        FirstN(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GRMUSA-APDIGITAL2022",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result,
                                                            CountRows(
                                                                Split(
                                                                    Mid(
                                                                        PDFLink,
                                                                        Find(
                                                                            "/GRMUSA-APDIGITAL2022",
                                                                            PDFLink
                                                                        )
                                                                    ),
                                                                    "/"
                                                                ).Result
                                                            ) - 1
                                                        ),
                                                        Result & "/"
                                                    ),
                                                    "/GRMUSA-APDIGITAL2022",
                                                    ""
                                                ) & LookUp(
                                                    SelectedItems,
                                                    rowNumber = ROWNUM,
                                                    Log_Invoice_FileName
                                                )
                                            )
                                        }
                                    ),
                                    UpdateContext(
                                        {
                                            varPDF: OOHShowPDFDetails.Run(
                                                Substitute(
                                                    Concat(
                                                        FirstN(
                                                            Split(
                                                                Mid(
                                                                    PDFLink,
                                                                    Find(
                                                                        "/GMUSA-InvoiceProcessing",
                                                                        PDFLink
                                                                    )
                                                                ),
                                                                "/"
                                                            ).Result,
                                                            CountRows(
                                                                Split(
                                                                    Mid(
                                                                        PDFLink,
                                                                        Find(
                                                                            "/GMUSA-InvoiceProcessing",
                                                                            PDFLink
                                                                        )
                                                                    ),
                                                                    "/"
                                                                ).Result
                                                            ) - 1
                                                        ),
                                                        Result & "/"
                                                    ),
                                                    "/GMUSA-InvoiceProcessing",
                                                    ""
                                                ) & LookUp(
                                                    SelectedItems,
                                                    rowNumber = ROWNUM,
                                                    Log_Invoice_FileName
                                                )
                                            )
                                        }
                                    )
                                );
                                Refresh(master_log);
                                UpdateContext(
                                    {
                                        VAR_Vendor_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Vendor
                                            ),
                                            LookUp(
                                                master_log,
                                                ID = Value(ID_TextInput.Text),
                                                Vendor
                                            )
                                        ),
                                        VAR_PublicationName_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Publication_Name
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Publication_Name
                                        )
                                    ),
                                    VAR_PublicationCode_DEF: If(
                                        Invoice_FA_Staus_Label.Text = "",
                                        LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Publication_Code
                                        ),
                                        LookUp(
                                            OOH_Log_Txn,
                                            Log_ID = Value(ID_TextInput.Text),
                                            Log_Publication_Code
                                        )
                                    )
                                    }
                                );
                                Reset(Vendor_TextInput);
                                UpdateContext(
                                    {
                                        VAR_M_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Invoice_Media_ID
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Invoice_Media_ID
                                            )
                                        )
                                    }
                                );
                                Reset(M_TextInput);
                                UpdateContext(
                                    {
                                        VAR_C_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Validated_C
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Validated_C
                                            )
                                        )
                                    }
                                );
                                Reset(C_TextInput);
                                UpdateContext(
                                    {
                                        VAR_P_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Validated_P
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Validated_P
                                            )
                                        )
                                    }
                                );
                                Reset(P_TextInput);
                                UpdateContext(
                                    {
                                        VAR_E_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Validated_E
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Validated_E
                                            )
                                        )
                                    }
                                );
                                Reset(E_TextInput);
                                UpdateContext(
                                    {
                                        VAR_MOS_DEF: If(
                                            Invoice_FA_Staus_Label.Text = "",
                                            LookUp(
                                                SelectedItems,
                                                rowNumber = ROWNUM,
                                                Log_Invoice_MOS
                                            ),
                                            LookUp(
                                                OOH_Log_Txn,
                                                Log_ID = Value(ID_TextInput.Text),
                                                Log_Invoice_MOS
                                            )
                                        )
                                    }
                                );
                                Reset(MOS_TextInput_initial);
                                Reset(Client_Name_TextInput);
                                Reset(IO_TextInput);
                                Reset(PCID_TextInput);
                                Reset(InvoiceNum_TextInput);
                                Reset(Amount_TextInput);
                                Reset(Tax_TextInput);
                                Reset(InvDate_TextInput_initial);
                                Reset(ID_TextInput);
                                
                                If(
                                // check if there were any errors
                                IsEmpty(Errors(master_log)),
                                 // if true, go to success notification
                                Notify(
                                    "The record has been successfully patched with FA Status = COMPLEX",
                                    NotificationType.Success,2000
                                ),
                             // else, show any error message
                                 Notify(
                                    Concat(
                                        Errors(master_log),
                                        Column & ": " & Message
                                    ),
                                    NotificationType.Error
                                  )
                                );
                            ),
                           If(IsBlank(InvDate_TextInput_initial.Text), Notify("Invoice Date Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(MOS_TextInput_initial.Text), Notify("Insertion Month Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(E_TextInput.Text), Notify("Estimate Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(P_TextInput.Text), Notify("Product Code Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(C_TextInput.Text), Notify("Client Code Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(Amount_TextInput.Text), Notify("Amount Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(InvoiceNum_TextInput.Text), Notify("Invoice Number Field is Empty", NotificationType.Warning), "");
                           If(IsBlank(Vendor_TextInput.Text), Notify("Vendor Field is Empty", NotificationType.Warning), "");
                           If(
                                !IsBlank(ViewCommentS9Input.Text),
                                Patch(
                                    FA_Interface_FA_Comments,
                                    Defaults(FA_Interface_FA_Comments),
                                    {
                                        SNo: GUID(),
                                        Agency: Selected_Agency_Data.Text,
                                        Vendor: Vendor_TextInput.Text,
                                        InsertionMonth: MOS_TextInput.Text,
                                        InvoiceNum: InvoiceNum_TextInput.Text,
                                        RecordID: ID_TextInput.Text,
                                        ClientCode: C_TextInput.Text,
                                        ProductCode: P_TextInput.Text,
                                        EstCode: E_TextInput.Text,
                                        CommenterID: Selected_FA_Data.Text,
                                        CreateDate: Now(),
                                        Comment: ViewCommentS9Input.Text
                                    }
                                );
                                If(
                             // check if there were any errors
                                    !IsEmpty(Errors(FA_Interface_FA_Comments)),
                             // if true, show any error message
                                    Notify(
                                        Concat(
                                            Errors(FA_Interface_FA_Comments),
                                            Column & ": " & Message
                                        ),
                                        NotificationType.Error
                                    ),
                             // else, go to success notification
                                    Notify(
                                        "Comment has been successfully added for this record",
                                        NotificationType.Success,
                                        2000
                                    )
                                );
                                Reset(ViewCommentS9Input);
                                ,
                                ""
                            );
                        );
                        Reset(Checkbox1);
                        Reset(ViewCommentS9Input); */
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="COMPLEX"
                    Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                    Width: =105
                    ZIndex: =6

                IGNORE_Button As button:
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(204, 204, 204, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    HoverColor: =RGBA(230, 230, 230, 1)
                    HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                    OnSelect: |
                        =UpdateContext({showIgnoreCommentBox:true});
                        UpdateContext({showTaggingDropdown:false});
                        UpdateContext({showVendorModal: false});
                    PressedFill: =RGBA(230, 230, 230, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =8
                    Text: ="IGNORE"
                    Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                    Width: =130
                    ZIndex: =7

            "'MAN-S9_Button_4' As button":
                BorderStyle: =BorderStyle.None
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(204, 204, 204, 1)
                DisplayMode: |
                    =If(
                        (IsBlank(C_TextInput.Text) Or  C_TextInput.Text = "" Or IsBlank(P_TextInput.Text) Or P_TextInput.Text = "" Or IsBlank(E_TextInput.Text) Or E_TextInput.Text = "") Or ((IsBlank(MOS_TextInput.Text) Or  MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (IsBlank(Amount_TextInput.Text) Or Amount_TextInput.Text="" Or Amount_TextInput.Text = "FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text = "FFM")) Or Checkbox_Amount.Value=false Or Checkbox_Invoice.Value=false Or Checkbox_MOS.Value=false,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(211, 66, 9, 1)
                FontWeight: =FontWeight.Semibold
                Height: =25
                HoverColor: =RGBA(230, 230, 230, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =UpdateContext({showManualS9Popup: true});
                PressedFill: =RGBA(230, 230, 230, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Text: ="MANUAL-S9"
                Tooltip: =If((C_TextInput.Text = "" Or P_TextInput.Text = "" Or E_TextInput.Text = "") Or ((MOS_TextInput.Text = "" Or MOS_TextInput.Text = "FFM") Or (Amount_TextInput.Text Or Amount_TextInput.Text ="FFM") Or (InvoiceNum_TextInput.Text = "" Or InvoiceNum_TextInput.Text = "FFM") Or (InvDate_TextInput.Text = "" Or InvDate_TextInput.Text =  "FFM")),"The value of C P E or MOS or Amount or Invoice number or Invoice date is  missing/invalid.","")
                Width: =105
                X: =558
                Y: =24
                ZIndex: =30

    PDFName_with_Link_button As button:
        BorderThickness: =0
        Color: =RGBA( 63, 189, 191, 1 )
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(39, 113, 194, 1)
        DisabledFill: =RGBA(0, 0, 0,0)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderColor: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =0
        Height: =75
        HoverColor: =RGBA(39, 113, 194, 1)
        HoverFill: =RGBA(255, 255, 255, 1)
        OnSelect: =Launch(LookUp(SelectedItems, rowNumber = ROWNUM, Log_SP_FilePath))
        PressedColor: =RGBA(39, 113, 194, 1)
        PressedFill: =RGBA(255, 255, 255, 1)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Text: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_FileName)
        Tooltip: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_FileName)
        Underline: =true
        Width: =405
        X: =960
        Y: =4
        ZIndex: =6

    PDFName_with_Link As label:
        Align: =Align.Center
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderStyle: =BorderStyle.None
        Color: =RGBA( 63, 189, 191, 1 )
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =1
        Font: =Font.Arial
        Height: =75
        HoverColor: =RGBA( 63, 125, 191, 1 )
        OnSelect: =Launch(LookUp(SelectedItems, rowNumber = ROWNUM, Log_SP_FilePath))
        PaddingBottom: =0
        PaddingRight: =0
        PaddingTop: =0
        PressedColor: =RGBA( 89, 126, 165, 1 )
        Size: =10
        Text: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_FileName)
        Tooltip: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_FileName)
        Underline: =true
        Visible: =false
        Width: =405
        X: =960
        Y: =4
        ZIndex: =7

    CommentsContainer As groupContainer.manualLayoutContainer:
        Height: =39
        Width: =673
        X: =10
        Y: =375
        ZIndex: =8

        ViewCommentS9Input As text:
            BorderColor: =RGBA(230, 230, 230, 1)
            Clear: =true
            Color: =RGBA(0, 0, 0, 1)
            Default: =//LookUp(master_log, ID = Value(ID_TextInput.Text), Stamp_Comment_S9)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Font: =Font.Arial
            Height: =31
            HintText: =//If(IsBlank(LookUp(FA_Interface_FA_Comments, RecordID = ID_TextInput.Text, Comment)),"Add Comment for this Record...",LookUp(Sort(FA_Interface_FA_Comments, CreateDate, Descending), RecordID = ID_TextInput.Text, Comment))
            HoverBorderColor: =RGBA(204, 204, 204, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            PaddingLeft: =5
            RadiusBottomLeft: =2
            RadiusBottomRight: =2
            RadiusTopLeft: =2
            RadiusTopRight: =2
            Size: =9
            Visible: |-
                =//If(!IsBlank(LookUp(master_log, ID = Value(ID_TextInput.Text), Stamp_Comment_S9)),true,false)
                false
            Width: =673
            Y: =5
            ZIndex: =4

        ViewIgnoreCommentInput As text:
            BorderColor: =RGBA(230, 230, 230, 1)
            Clear: =true
            Color: =RGBA(0, 0, 0, 1)
            Default: =//LookUp(FA_Interface_FA_Comments, RecordID = ID_TextInput.Text, Comment)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Font: =Font.Arial
            Height: =31
            HintText: =//If(IsBlank(LookUp(FA_Interface_FA_Comments, RecordID = ID_TextInput.Text, Comment)),"Add Comment for this Record...",LookUp(Sort(FA_Interface_FA_Comments, CreateDate, Descending), RecordID = ID_TextInput.Text, Comment))
            HoverBorderColor: =RGBA(204, 204, 204, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            PaddingLeft: =5
            RadiusBottomLeft: =2
            RadiusBottomRight: =2
            RadiusTopLeft: =2
            RadiusTopRight: =2
            Size: =9
            Visible: |-
                =//If(!IsBlank(LookUp(FA_Interface_FA_Comments, RecordID = ID_TextInput.Text, Comment)),true,false)
                false
            Width: =673
            Y: =8
            ZIndex: =5

    NoRecordContainer As groupContainer.manualLayoutContainer:
        Fill: =RGBA(255, 255, 255, 1)
        Height: =524
        Visible: =showUnpaidDialog && If(IsBlank(PaidUnpaidDataTable),true,false)
        Width: =1271
        X: =47
        Y: =191
        ZIndex: =9

        Search_Icon_for_no_items_1 As icon.Search:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(246, 88, 16, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            DisplayMode: =DisplayMode.View
            Height: =182
            Icon: =Icon.Search
            Visible: =showUnpaidDialog && If(IsBlank(PaidUnpaidDataTable),true,false)
            Width: =105
            X: =578
            Y: =102
            ZIndex: =1

        No_Record_Found_Label_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(246, 88, 16, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =30
            Size: =30
            Text: ="No Records Found"
            Visible: =showUnpaidDialog && If(IsBlank(PaidUnpaidDataTable),true,false)
            Width: =821
            X: =220
            Y: =342
            ZIndex: =2

    Container6 As groupContainer:
        Fill: =RGBA(255, 255, 255, 1)
        Height: =265
        Visible: =showVendorModal
        Width: =280
        X: =10
        Y: =140
        ZIndex: =22

        "galVendorItems As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
            BorderColor: =RGBA(102, 182, 227, 1)
            BorderThickness: =3
            Fill: =RGBA(255, 255, 255, 1)
            Height: =210
            Items: |-
                =
                //If(IsBlank(M_TextInput.Text),Sort( Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending),Sort(Filter(vw_VendorRemittance, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in vendor And Media_Code=M_TextInput.Text) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name And Media_Code=M_TextInput.Text) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending))
                
                If(IsBlank(ContractNumber_TextInput.Text),Sort( Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending),Sort(Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending))
            Layout: =Layout.Vertical
            ShowNavigation: =true
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =42
            Visible: =showVendorModal
            Width: =260
            X: =10
            Y: =48
            ZIndex: =1

            Title5 As label:
                Color: =RGBA(246, 88, 16, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Semibold
                Height: =20
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.Vendor_Name
                Tooltip: =ThisItem.Vendor_Name
                Visible: =false
                Width: =230
                Wrap: =false
                X: =5
                ZIndex: =1

            NextArrow5 As icon.ChevronRight:
                AccessibleLabel: =Self.Tooltip
                BorderColor: =RGBA(230, 230, 230, 1)
                Color: =RGBA(168, 0, 0, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Height: =40
                Icon: =Icon.ChevronRight
                OnSelect: |-
                    =UpdateContext(
                        {
                            VAR_Vendor_DEF: galVendorItems.Selected.Vendor_Name,
                            VAR_PublicationCode_DEF:galVendorItems.Selected.Vendor_Pub_Code,
                            VAR_PublicationName_DEF:galVendorItems.Selected.Vendor_Pub_Name,
                            VAR_VendorID_DEF:galVendorItems.Selected.Vendor_ID
                        }
                    );
                    /*
                    If(IsBlank(LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code And Media_Code=VAR_M_DEF,remittance_address)), UpdateContext({VAR_Remittance_Address: LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code , remittance_address)}),UpdateContext({
                        VAR_Remittance_Address: LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code And Media_Code=VAR_M_DEF , remittance_address)
                        })); */
                        
                        If(IsBlank(ContractNumber_TextInput.Text),Sort( Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending),Sort(Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending));
                        
                    Reset(Vendor_TextInput_5);
                    UpdateContext({showVendorModal: false});
                    /*UpdateContext({
                        VAR_Remittance_Address: LookUp(Vendor_Remittance, PUBLICATION_CODE =galVendorItems.Selected.PUBLICATION_CODE  , REMITTANCE_ADDRESS)
                        })*/
                    
                    
                     
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                TabIndex: =0
                Tooltip: ="View item details"
                Width: =30
                X: =230
                Y: =2
                ZIndex: =3

            Separator5 As rectangle:
                BorderColor: =RGBA(131, 24, 75, 1)
                Fill: =RGBA(0, 134, 208, 1)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            Label21 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =15
                OnSelect: =Select(Parent)
                Size: =9
                Text: =ThisItem.Vendor_Pub_Name
                Width: =180
                X: =70
                Y: =22
                ZIndex: =5

            Label22 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =15
                OnSelect: =Select(Parent)
                PaddingLeft: =0
                PaddingRight: =0
                Size: =10
                Text: =ThisItem.Vendor_Pub_Code
                Width: =70
                X: =5
                Y: =22
                ZIndex: =6

            Button8 As button:
                Align: =Align.Left
                BorderThickness: =0
                Color: =RGBA(246, 88, 16, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(246, 88, 16, 1)
                DisabledFill: =RGBA(0, 0, 0,0)
                Fill: =RGBA(0, 0, 0, 0)
                FontWeight: =FontWeight.Semibold
                Height: =35
                HoverColor: =RGBA(246, 88, 16, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                OnSelect: |-
                    =UpdateContext(
                        {
                            VAR_Vendor_DEF: galVendorItems.Selected.Vendor_Name,
                            VAR_PublicationCode_DEF:galVendorItems.Selected.Vendor_Pub_Code,
                            VAR_PublicationName_DEF:galVendorItems.Selected.Vendor_Pub_Name,
                            VAR_VendorID_DEF:galVendorItems.Selected.Vendor_ID
                        }
                    );
                    /*
                    If(IsBlank(LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code And Media_Code=VAR_M_DEF,remittance_address)), UpdateContext({VAR_Remittance_Address: LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code , remittance_address)}),UpdateContext({
                        VAR_Remittance_Address: LookUp(vw_VendorRemittance, publication_code =galVendorItems.Selected.publication_code And Media_Code=VAR_M_DEF , remittance_address)
                        })); */
                        
                        If(IsBlank(ContractNumber_TextInput.Text),Sort( Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending),Sort(Filter(OOH_Vendor_Master, (Vendor_TextInput_5.Text in Vendor_Pub_Code And Vendor_TextInput_5.Text in Vendor_Name) Or (Vendor_TextInput_5.Text in Vendor_Pub_Name And Vendor_TextInput_5.Text in Vendor_Name) Or IsBlank(Vendor_TextInput_5)),Vendor_Pub_Name,Ascending));
                        
                    Reset(Vendor_TextInput_5);
                    UpdateContext({showVendorModal: false});
                    /*UpdateContext({
                        VAR_Remittance_Address: LookUp(Vendor_Remittance, PUBLICATION_CODE =galVendorItems.Selected.PUBLICATION_CODE  , REMITTANCE_ADDRESS)
                        })*/
                    
                    
                     
                PaddingLeft: =0
                PressedColor: =RGBA(246, 88, 16, 1)
                PressedFill: =RGBA(0, 0, 0, 0)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =ThisItem.Vendor_Name
                Tooltip: =ThisItem.Vendor_Name
                VerticalAlign: =VerticalAlign.Top
                Width: =250
                X: =5
                ZIndex: =7

        Vendor_TextInput_5 As text:
            BorderColor: =RGBA(230, 230, 230, 1)
            Clear: =true
            Color: =RGBA(153, 153, 153, 1)
            Default: =""
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Font: =Font.Arial
            Height: =31
            HintText: ="Search by Pub Name OR Pub Code..."
            HoverBorderColor: =RGBA(204, 204, 204, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            PaddingLeft: =5
            RadiusBottomLeft: =2
            RadiusBottomRight: =2
            RadiusTopLeft: =2
            RadiusTopRight: =2
            Size: =11
            Tooltip: ="Search/Type Publication Name or Publication Code."
            Visible: =showVendorModal
            Width: =260
            X: =10
            Y: =10
            ZIndex: =2

    CancelVendorModal As icon.CancelBadge:
        BorderColor: =RGBA(131, 24, 75, 1)
        Color: =RGBA(211, 66, 9, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(255, 255, 255, 1)
        Height: =25
        Icon: =Icon.CancelBadge
        OnSelect: |-
            =UpdateContext({showVendorModal: false})
        Visible: =showVendorModal
        Width: =24
        X: =278
        Y: =124
        ZIndex: =23

    grpIgnoreConfirmationDialogue As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =44

        rctIgnoreConfirmationBack As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .6)
            Height: =768
            Visible: =showIgnoreConfirmationDialogue
            Width: =699
            ZIndex: =30

        rctIgnoreConfirmationTop As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =250
            Visible: =showIgnoreConfirmationDialogue
            Width: =460
            X: =124
            Y: =192
            ZIndex: =31

        lblIgnoreConfirmationHeader As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Bold
            Size: =18
            Text: ="Ignore?"
            Visible: =showIgnoreConfirmationDialogue
            X: =150
            Y: =210
            ZIndex: =32

        btnCancelIgnoreConfirmation As button:
            BorderColor: =RGBA(0,0,0,1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showIgnoreConfirmationDialogue:false})
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="No"
            Visible: =showIgnoreConfirmationDialogue
            Width: =100
            X: =443
            Y: =370
            ZIndex: =33

        btnSaveIgnoreConfirmation As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =/*Patch(
                    master_log,
                    LookUp(
                        master_log,
                        ID = Value(ID_TextInput.Text)
                    ),
                    {
                        FA_Status: "Ignore",
                        UpdatedDate: Now(),
                        UpdatedBy: varLoggedInUser.Email,
                        FA_Interface_Log_Status: "FA Processed"
                    }
                );
                If(
                     // check if there were any errors
                    !IsEmpty(Errors(master_log)),
                     // if true, show any error message
                    Notify(
                        Concat(
                            Errors(master_log),
                            Column & ": " & Message
                        ),
                        NotificationType.Error
                    ),
                     // else, go to success notification
                    Notify(
                        "The record has been successfully Redirected (Ignored)",
                        NotificationType.Success,
                        2000
                    )
                );
                UpdateContext({showDialog: false});
                If(
                    ROWNUM >= Last(SelectedItems).rowNumber,
                    "",
                    UpdateContext({ROWNUM: ROWNUM + 1});
                    UpdateContext(
                        {
                            PDFLink: LookUp(
                                SelectedItems,
                                rowNumber = ROWNUM,
                                Log_SP_FilePath
                            )
                        }
                    );
                    If(
                        !IsBlank(
                            Find(
                                "/GRMUSA-APDIGITAL2022",
                                PDFLink
                            )
                        ),
                        UpdateContext(
                            {
                                varPDF: OOHShowPDFDetails.Run(
                                    Substitute(
                                        Concat(
                                            FirstN(
                                                Split(
                                                    Mid(
                                                        PDFLink,
                                                        Find(
                                                            "/GRMUSA-APDIGITAL2022",
                                                            PDFLink
                                                        )
                                                    ),
                                                    "/"
                                                ).Result,
                                                CountRows(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GRMUSA-APDIGITAL2022",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result
                                                ) - 1
                                            ),
                                            Result & "/"
                                        ),
                                        "/GRMUSA-APDIGITAL2022",
                                        ""
                                    ) & LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Invoice_FileName
                                    )
                                )
                            }
                        ),
                        UpdateContext(
                            {
                                varPDF: OOHShowPDFDetails.Run(
                                    Substitute(
                                        Concat(
                                            FirstN(
                                                Split(
                                                    Mid(
                                                        PDFLink,
                                                        Find(
                                                            "/GMUSA-InvoiceProcessing",
                                                            PDFLink
                                                        )
                                                    ),
                                                    "/"
                                                ).Result,
                                                CountRows(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-InvoiceProcessing",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result
                                                ) - 1
                                            ),
                                            Result & "/"
                                        ),
                                        "/GMUSA-InvoiceProcessing",
                                        ""
                                    ) & LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Invoice_FileName
                                    )
                                )
                            }
                        )
                    );
                    Refresh(master_log);
                    UpdateContext(
                        {
                            VAR_Vendor_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Vendor
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    Vendor
                                )
                            ),
                            VAR_PublicationName_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Publication_Name
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    ID = Value(ID_TextInput.Text),
                                    Log_Publication_Name
                                )
                            ),
                            VAR_PublicationCode_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Publication_Code
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Publication_Code
                                )
                            )
                        }
                    );
                    Reset(Vendor_TextInput);
                    UpdateContext(
                        {
                            VAR_M_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Invoice_Media_ID
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_Media_ID
                                )
                            )
                        }
                    );
                    Reset(M_TextInput);
                    UpdateContext(
                        {
                            VAR_C_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Validated_C
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            )
                        }
                    );
                    Reset(C_TextInput);
                    UpdateContext(
                        {
                            VAR_P_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Validated_P
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            )
                        }
                    );
                    Reset(P_TextInput);
                    UpdateContext(
                        {
                            VAR_E_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Validated_E
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            )
                        }
                    );
                    Reset(E_TextInput);
                    UpdateContext(
                        {
                            VAR_MOS_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_Invoice_MOS
                                ),
                                LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            )
                        }
                    );
                    Reset(MOS_TextInput_initial);
                    Reset(Client_Name_TextInput);
                    Reset(IO_TextInput);
                    Reset(PCID_TextInput);
                    Reset(InvoiceNum_TextInput);
                    Reset(Amount_TextInput);
                    Reset(Tax_TextInput);
                    Reset(InvDate_TextInput_initial);
                    Reset(ID_TextInput);
                    
                );
                If(
                    !IsBlank(ViewCommentS9Input.Text),
                    Patch(
                        FA_Interface_FA_Comments,
                        Defaults(FA_Interface_FA_Comments),
                        {
                            SNo: GUID(),
                            Agency: Selected_Agency_Data.Text,
                            Vendor: Vendor_TextInput.Text,
                            InsertionMonth: MOS_TextInput.Text,
                            InvoiceNum: InvoiceNum_TextInput.Text,
                            RecordID: ID_TextInput.Text,
                            ClientCode: C_TextInput.Text,
                            ProductCode: P_TextInput.Text,
                            EstCode: E_TextInput.Text,
                            CommenterID: Selected_FA_Data.Text,
                            CreateDate: Now(),
                            Comment: ViewCommentS9Input.Text
                        }
                    );
                    If(
                     // check if there were any errors
                        !IsEmpty(Errors(FA_Interface_FA_Comments)),
                     // if true, show any error message
                        Notify(
                            Concat(
                                Errors(FA_Interface_FA_Comments),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        ),
                     // else, go to success notification
                        Notify(
                            "Comment has been successfully added for this record",
                            NotificationType.Success,
                            2000
                        )
                    );
                    Reset(ViewCommentS9Input);
                    ,
                    ""
                );
                Reset(Checkbox1);
                Reset(ViewCommentS9Input);
                UpdateContext({showIgnoreConfirmationDialogue:false}) */
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Yes"
            Visible: =showIgnoreConfirmationDialogue
            Width: =100
            X: =320
            Y: =370
            ZIndex: =34

        IconIgnoreConfirmationClose As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =30
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showIgnoreConfirmationDialogue:false})
            Visible: =showIgnoreConfirmationDialogue
            Width: =30
            X: =555
            Y: =153
            ZIndex: =35

        lblIgnoreConfirmationMsg As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =13
            Text: ="Are you sure do you want to Ignore this record?"
            Visible: =showIgnoreConfirmationDialogue
            Width: =420
            X: =150
            Y: =260
            ZIndex: =36

    Revert_Label_4 As label:
        BorderColor: =RGBA(131, 24, 75, 1)
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Font: =Font.Arial
        Height: =21
        Size: =13
        Text: |-
            ="REVERT: to QA"
        Visible: =showDialog
        Width: =338
        X: =200
        Y: =485
        ZIndex: =48

    Revert_to_QA_Dropdown As dropdown:
        BorderColor: =RGBA(230, 230, 230, 1)
        BorderStyle: =BorderStyle.None
        BorderThickness: =0
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronFill: =RGBA(246, 88, 16, 1)
        ChevronHoverBackground: =
        ChevronHoverFill: =RGBA(246, 88, 16, 1)
        Default: =""
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(QARedirectCheckbox.Value = false,DisplayMode.Disabled, DisplayMode.Edit)
        Font: =Font.Arial
        Height: =29
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        Items: =colFAIssueList
        PressedColor: =RGBA(0, 0, 0, 1)
        PressedFill: =RGBA(230, 230, 230, 1)
        SelectionColor: =RGBA(230, 230, 230, 1)
        SelectionFill: =RGBA(255, 255, 255, 1)
        Size: =10
        Visible: =showDialog
        Width: =338
        X: =200
        Y: =518
        ZIndex: =49

    QARedirectCheckbox As checkbox:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderStyle: =BorderStyle.None
        CheckboxBorderColor: =RGBA(128, 128, 128, 1)
        Color: =RGBA(0, 0, 0, 1)
        HoverColor: =RGBA(131, 24, 75, 1)
        Size: =13
        Text: =""
        Visible: =showDialog
        Width: =44
        X: =340
        Y: =468
        ZIndex: =50

    grpIgnoreCommentPopup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =51

        rctIgnoreCommentback As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .7)
            Height: =768
            Visible: =showIgnoreCommentBox
            Width: =699
            ZIndex: =37

        rctIgnoreCommenttop As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =354
            Visible: =showIgnoreCommentBox
            Width: =614
            X: =47
            Y: =153
            ZIndex: =38

        txtIgnoreComment As text:
            BorderColor: =RGBA(211, 66, 9, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Height: =165
            HintText: ="Type Ignore comments"
            HoverBorderColor: =RGBA(246, 88, 16, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            Mode: =TextMode.MultiLine
            Size: =13
            Visible: =showIgnoreCommentBox
            Width: =546
            X: =79
            Y: =231
            ZIndex: =39

        lblIgnoreCommentHeader As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: ="Ignore Comment"
            Visible: =showIgnoreCommentBox
            Width: =200
            X: =79
            Y: =179
            ZIndex: =40

        btnCancelIgnoreComment As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showIgnoreCommentBox:false});
                Reset(txtIgnoreComment);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Cancel"
            Visible: =showIgnoreCommentBox
            Width: =100
            X: =397
            Y: =438
            ZIndex: =41

        btnSaveIgnoreComment As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(IsBlank(txtIgnoreComment.Text),DisplayMode.Disabled,DisplayMode.Edit)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =If(
                    txtIgnoreComment.Text = "" Or txtIgnoreComment.Text = Blank(),
                    Notify(
                        "Please enter the ignore comment.",
                        NotificationType.Error,
                        2000
                    ),
                    Patch(
                        OOH_Log_Txn,
                        LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text)
                        ),
                        {
                            //Log_Manual_Override:varLoggedInUser.Email,
                            Log_FA_Update_Date: Now(),
                            Log_FA_Action_Status: "Ignore",
                            Log_FA_Interface_Log_Status: "FA Processed",
                            Log_FA_Interface_Comment: txtIgnoreComment.Text
                        }
                    );
                    If(
                     // check if there were any errors
                        !IsEmpty(Errors(OOH_Log_Txn)),
                     // if true, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Log_Txn),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        ),
                     // else, go to success notification
                        Notify(
                            "The record has been successfully Redirected (Ignored)",
                            NotificationType.Success,
                            2000
                        )
                    );
                    Reset(txtIgnoreComment);
                    UpdateContext({showIgnoreCommentBox: false});
                    If(
                        ROWNUM >= Last(SelectedItems).rowNumber,
                        "",
                        UpdateContext({ROWNUM: ROWNUM + 1});
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath
                                )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GMUSA-KineticFinanceAutomation",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-KineticFinanceAutomation",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-KineticFinanceAutomation",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-KineticFinanceAutomation",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            Notify(
                                "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                NotificationType.Information,
                                2000
                            )
                        );
                        Refresh(OOH_Log_Txn);
                        UpdateContext(
                            {
                                VAR_VendorID_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Vendor_ID
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Name
                                ),
                                VAR_PublicationName_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Name
                                ),
                                VAR_PublicationCode_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Code
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_ContractNum_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_ContractNumber
                                )
                            }
                        );
                        Reset(ContractNumber_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            }
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(InvoiceNum_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(InvDate_TextInput_initial);
                        Reset(ID_TextInput);
                    )
                )
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Save"
            Visible: =showIgnoreCommentBox
            Width: =100
            X: =525
            Y: =438
            ZIndex: =42

        IconIgnoreCommentClose As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =30
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showIgnoreCommentBox:false});
                Reset(txtIgnoreComment);
            Visible: =showIgnoreCommentBox
            Width: =30
            X: =647
            Y: =113
            ZIndex: =43

    hide_VendorID As text:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 1)
        Default: =VAR_VendorID_DEF
        DelayOutput: =true
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Height: =15
        HoverBorderColor: =RGBA(230, 230, 230, 1)
        HoverColor: =RGBA(230, 230, 230, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        PaddingLeft: =5
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Visible: =false
        Width: =75
        Y: =325
        ZIndex: =60

    grpSplitS9PopupRecordList As group:
        Height: =5
        Width: =5
        X: =60
        Y: =60
        ZIndex: =60

        rctCommentS9back As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .7)
            Height: =768
            Visible: =showCommentS9Popup
            Width: =699
            ZIndex: =24

        rctCommentS9top As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =450
            Visible: =showCommentS9Popup
            Width: =614
            X: =47
            Y: =140
            ZIndex: =25

        lblCommentS9Header As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: ="Comments"
            Visible: =showCommentS9Popup
            X: =79
            Y: =159
            ZIndex: =26

        btnCancelCommentS9 As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showCommentS9Popup:false});
                ClearCollect(colSplitS9Records,{ lineNumber:1});
                Reset(Checkbox2);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Cancel"
            Visible: =showCommentS9Popup
            Width: =80
            X: =450
            Y: =543
            ZIndex: =27

        btnSaveCommentS9 As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(Checkbox2.Value=true, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =/* UpdateContext({splitS9DataString: Concat(Gallery2_2.AllItems, If(IsBlank(TextInput1_2.Text) Or TextInput1_2.Text="" Or IsBlank(TextInput2_2.Text) Or TextInput2_2.Text="" ,"", Concatenate(TextInput1_2.Text &"|"&TextInput2_2.Text&"\n")))});
                
                UpdateContext({showVendorModal: false});
                If(
                    !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                    Patch(
                        master_log,
                        LookUp(
                            master_log,
                            ID = Value(ID_TextInput.Text)
                        ),
                        {
                            Vendor: Vendor_TextInput.Text,
                            PUBLICATION_CODE:VAR_PublicationCode_DEF,
                            PUBLICATION_NAME:VAR_PublicationName_DEF,
                            Stamp_Comment_S9:splitS9DataString,
                            CLIENT_NAME: Client_Name_TextInput.Text,
                            INSERTION_ORDER: IO_TextInput.Text,
                            CAMPAIGN_ID: PCID_TextInput.Text,
                            Invoice_Num: InvoiceNum_TextInput.Text,
                            PDF_Amount: Amount_TextInput.Text,
                            MediaLookup: If(
                                !IsBlank(M_TextInput.Text),
                                M_TextInput.Text,
                                "I"
                            ),
                            C: C_TextInput.Text,
                            P: P_TextInput.Text,
                            E: E_TextInput.Text,
                            Extracted_Tax: Tax_TextInput.Text,
                            PDF_Invoice_Date: InvDate_TextInput.Text,
                            PDF_MOS: MOS_TextInput.Text,
                            UpdatedDate: Now(),
                            UpdatedBy: varLoggedInUser.Email,
                            FA_Status: "SPLIT - S9",
                            FA_Interface_Log_Status: "FA Processed"
                        }
                    );
                    If(
                        ROWNUM >= Last(SelectedItems).rowNumber,
                        "",
                        UpdateContext({ROWNUM: ROWNUM + 1});
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath             )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GRMUSA-APDIGITAL2022",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GRMUSA-APDIGITAL2022",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GRMUSA-APDIGITAL2022",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GRMUSA-APDIGITAL2022",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-InvoiceProcessing",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-InvoiceProcessing",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-InvoiceProcessing",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            )
                        );
                        Refresh(master_log);
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Vendor
                                    ),
                                    LookUp(
                                        master_log,
                                        ID = Value(ID_TextInput.Text),
                                        Vendor
                                    )
                                ),
                                VAR_PublicationName_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Publication_Name
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Publication_Name
                                    )
                                ),
                                VAR_PublicationCode_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Publication_Code
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Publication_Code
                                    )
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_M_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Invoice_Media_ID                  ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Invoice_Media_ID
                                    )
                                )
                            }
                        );
                        Reset(M_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Validated_C
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Validated_C                    )
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Validated_P
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Validated_P
                                    )
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Validated_E
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Validated_E
                                    )
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: If(
                                    Invoice_FA_Staus_Label.Text = "",
                                    LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Log_Invoice_MOS
                                    ),
                                    LookUp(
                                        OOH_Log_Txn,
                                        Log_ID = Value(ID_TextInput.Text),
                                        Log_Invoice_MOS                   )
                                )
                            }
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(InvoiceNum_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(InvDate_TextInput_initial);
                        Reset(ID_TextInput);
                        
                        If(
                        // check if there were any errors
                        IsEmpty(Errors(master_log)),
                         // if true, go to success notification
                        Notify(
                            "The record has been successfully patched with FA Status = SPLIT - S9",
                            NotificationType.Success,2000
                        ),
                     // else, show any error message
                         Notify(
                            Concat(
                                Errors(master_log),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                          )
                        );
                    ),
                   If(IsBlank(InvDate_TextInput_initial.Text), Notify("Invoice Date Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(MOS_TextInput_initial.Text), Notify("Insertion Month Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(E_TextInput.Text), Notify("Estimate Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(P_TextInput.Text), Notify("Product Code Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(C_TextInput.Text), Notify("Client Code Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(Amount_TextInput.Text), Notify("Amount Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(InvoiceNum_TextInput.Text), Notify("Invoice Number Field is Empty", NotificationType.Warning), "");
                   If(IsBlank(Vendor_TextInput.Text), Notify("Vendor Field is Empty", NotificationType.Warning), "");
                   If(
                        !IsBlank(ViewCommentS9Input.Text),
                        Patch(
                            FA_Interface_FA_Comments,
                            Defaults(FA_Interface_FA_Comments),
                            {
                                SNo: GUID(),
                                Agency: Selected_Agency_Data.Text,
                                Vendor: Vendor_TextInput.Text,
                                InsertionMonth: MOS_TextInput.Text,
                                InvoiceNum: InvoiceNum_TextInput.Text,
                                RecordID: ID_TextInput.Text,
                                ClientCode: C_TextInput.Text,
                                ProductCode: P_TextInput.Text,
                                EstCode: E_TextInput.Text,
                                CommenterID: Selected_FA_Data.Text,
                                CreateDate: Now(),
                                Comment: ViewCommentS9Input.Text
                            }
                        );
                        If(
                     // check if there were any errors
                            !IsEmpty(Errors(FA_Interface_FA_Comments)),
                     // if true, show any error message
                            Notify(
                                Concat(
                                    Errors(FA_Interface_FA_Comments),
                                    Column & ": " & Message
                                ),
                                NotificationType.Error
                            ),
                     // else, go to success notification
                            Notify(
                                "Comment has been successfully added for this record",
                                NotificationType.Success,
                                2000
                            )
                        );
                        Reset(ViewCommentS9Input);
                        ,
                        ""
                    );
                );
                Reset(ViewCommentS9Input);
                Reset(Checkbox2);
                Reset(Checkbox1);
                ClearCollect(colSplitS9Records,{ lineNumber:1});
                UpdateContext({showCommentS9Popup:false}); */
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Save"
            Visible: =showCommentS9Popup
            Width: =80
            X: =551
            Y: =543
            ZIndex: =28

        IconCommentS9Close As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =30
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showCommentS9Popup:false});
                ClearCollect(colSplitS9Records,{ lineNumber:1});
                Reset(Checkbox2);
            Visible: =showCommentS9Popup
            Width: =30
            X: =631
            Y: =100
            ZIndex: =29

        "Gallery2_2 As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
            BorderColor: =RGBA(204, 204, 204, 1)
            BorderThickness: =1
            Height: =300
            Items: =colSplitS9Records
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =60
            Visible: =showCommentS9Popup
            Width: =560
            X: =75
            Y: =205
            ZIndex: =44

            NextArrow2_2 As icon.ChevronRight:
                AccessibleLabel: =Self.Tooltip
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(211, 66, 9, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =0
                Height: =20
                Icon: =Icon.Cancel
                OnSelect: =Remove(colSplitS9Records,LookUp(colSplitS9Records,lineNumber=Gallery2_2.Selected.lineNumber))
                TabIndex: =0
                Tooltip: ="Remove current row"
                Width: =20
                X: =505
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =2

            Separator3_2 As rectangle:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =1
                Fill: =RGBA(204, 204, 204, 1)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =3

            TextInput1_2 As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =2
                HintText: ="Description"
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =310
                X: =10
                Y: =10
                ZIndex: =4

            TextInput2_2 As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =2
                Format: =TextFormat.Number
                HintText: ="Amount"
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =150
                X: =342
                Y: =10
                ZIndex: =5

            Icon12_2 As icon.VerticalLine:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(204, 204, 204, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                DisplayMode: =DisplayMode.View
                FocusedBorderThickness: =1
                Height: =60
                Icon: =Icon.VerticalLine
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingTop: =2
                Width: =3
                X: =330
                ZIndex: =6

        Icon11_2 As icon.Add:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(211, 66, 9, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =40
            Icon: =Icon.Add
            OnSelect: |-
                =
                If(CountRows(colSplitS9Records)=25,Notify( "You can add maximum 25 rows only.",NotificationType.Information),
                Set(TotalLines,TotalLines+1);
                 Collect(colSplitS9Records,
                {
                    lineNumber:TotalLines
                }
                ));
            Tooltip: ="Add row"
            Visible: =showCommentS9Popup
            Width: =40
            X: =589
            Y: =153
            ZIndex: =45

        Label24_2 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =35
            Size: =12
            Text: ="Amount Total - $"& Sum(Gallery2_2.AllItems, TextInput2_2.Text)
            Visible: =showCommentS9Popup
            Width: =230
            X: =210
            Y: =543
            ZIndex: =46

        Label24_4 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =35
            Size: =12
            Text: ="Total Rows - "& CountRows(colSplitS9Records)
            Visible: =showCommentS9Popup
            Width: =130
            X: =75
            Y: =543
            ZIndex: =47

        Label24_8 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(211, 66, 9, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =25
            Size: =12
            Text: ="I have manually tagged these in PBT"
            Visible: =showCommentS9Popup
            Width: =300
            X: =280
            Y: =508
            ZIndex: =51

        Checkbox2 As checkbox:
            BorderColor: =RGBA(131, 24, 75, 1)
            CheckboxBorderColor: =RGBA(131, 24, 75, 1)
            CheckboxSize: =30
            Color: =RGBA(0, 0, 0, 1)
            FocusedBorderThickness: =0
            Height: =28
            HoverColor: =RGBA(131, 24, 75, 1)
            Size: =13
            Text: =""
            Visible: =showCommentS9Popup
            Width: =30
            X: =574
            Y: =508
            ZIndex: =52

    hide_InvoiceID As text:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 1)
        Default: =LookUp(SelectedItems, rowNumber = ROWNUM, Log_Invoice_Number)
        DelayOutput: =true
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Height: =15
        HoverBorderColor: =RGBA(230, 230, 230, 1)
        HoverColor: =RGBA(230, 230, 230, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        PaddingLeft: =5
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Visible: =false
        Width: =75
        X: =155
        Y: =338
        ZIndex: =62

    grp_SplitS9 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =67

        rctCommentS9back_2 As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .7)
            Height: =768
            Visible: =showSplitS9Comment
            Width: =699
            ZIndex: =53

        rctViewCommentS9top_2 As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =300
            Visible: =showSplitS9Comment
            Width: =550
            X: =70
            Y: =200
            ZIndex: =54

        lbl_Comment As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =49
            Size: =13
            Text: ="Comments"
            Visible: =showSplitS9Comment
            X: =100
            Y: =211
            ZIndex: =55

        IconViewCommentS9Close As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =30
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showSplitS9Comment:false});
            Visible: =showSplitS9Comment
            Width: =30
            X: =585
            Y: =160
            ZIndex: =56

        "gal_SplitS9 As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
            BorderColor: =RGBA(204, 204, 204, 1)
            BorderThickness: =1
            Height: =200
            Items: =//colViewSplitS9Comments
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =50
            Visible: =showSplitS9Comment
            Width: =495
            X: =100
            Y: =260
            ZIndex: =57

            lbl_SplitS9_Description As label:
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Semibold
                Height: =35
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =11
                Text: =//ThisItem.Description
                Width: =327
                X: =15
                Y: =5
                ZIndex: =1

            lbl_SplitS9_Amount As label:
                Align: =Align.Center
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =25
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =11
                Text: =//"$"&ThisItem.Amount
                VerticalAlign: =VerticalAlign.Top
                Width: =123
                X: =356
                Y: =9
                ZIndex: =2

            Separator_SplitS9 As rectangle:
                BorderColor: =RGBA(131, 24, 75, 1)
                Fill: =RGBA(204, 204, 204, 1)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            Icon_SplitS9_VL As icon.VerticalLine:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(204, 204, 204, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Height: =50
                Icon: =Icon.VerticalLine
                OnSelect: =Select(Parent)
                PaddingBottom: =3
                PaddingTop: =3
                Width: =3
                X: =350
                ZIndex: =5

        lbl_SplitS9_Total As label:
            Align: =Align.Center
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =25
            Size: =13
            Text: =//"  $"& Sum(colViewSplitS9Comments,Amount)
            Visible: =showSplitS9Comment
            Width: =123
            X: =450
            Y: =465
            ZIndex: =58

        lbl_SplitS9_TotalAmount As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =13
            Text: ="Total Amount -"
            Visible: =showSplitS9Comment
            Width: =140
            X: =310
            Y: =456
            ZIndex: =59

    DialogGroup As group:
        Height: =5
        Width: =5
        X: =20
        Y: =20
        ZIndex: =78

        Screen_Overlay As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =768
            Visible: =showDialog
            Width: =704
            ZIndex: =10

        Modal_popup As rectangle:
            BorderColor: =RGBA(153, 153, 153, 1)
            BorderThickness: =2
            Fill: =RGBA(237, 237, 237, 1)
            Height: =591
            Visible: =showDialog
            Width: =490
            X: =124
            Y: =64
            ZIndex: =11

        Redirect_Label As label:
            Align: =Align.Center
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.Arial
            Size: =15
            Text: ="REDIRECT"
            Visible: =showDialog
            Width: =154
            X: =282
            Y: =96
            ZIndex: =12

        Redefine_Dropdown As dropdown:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            ChevronBackground: =RGBA(255, 255, 255, 1)
            ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
            ChevronDisabledFill: =RGBA(244, 244, 244, 1)
            ChevronFill: =RGBA(246, 88, 16, 1)
            ChevronHoverBackground: =
            ChevronHoverFill: =RGBA(246, 88, 16, 1)
            Default: |-
                =
                //Text(LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Label))
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(QARedirectCheckbox.Value = true,DisplayMode.Disabled, DisplayMode.Edit)
            Font: =Font.Arial
            Height: =29
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(230, 230, 230, 1)
            Items: |-
                =//Filter(colLabel, Not(Result = "All"))
                ["Audit Request","Corrupt","Corrupt Unknown","Credit Memo","Image","Insertion Order","Invoice","Letters","Other","Statement","W-9"]
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =RGBA(230, 230, 230, 1)
            SelectionColor: =RGBA(0, 0, 0, 1)
            SelectionFill: =RGBA(230, 230, 230, 1)
            Size: =10
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =207
            ZIndex: =13

        Redefine_Label As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.Arial
            Height: =23
            Size: =13
            Text: |-
                ="REDEFINE: Record Type"
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =171
            ZIndex: =14

        Reassign_Label As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.Arial
            Height: =18
            Size: =13
            Text: |-
                ="REASSIGN: to FA Owner"
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =283
            ZIndex: =15

        Reassign_Dropdown As dropdown:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            ChevronBackground: =RGBA(255, 255, 255, 1)
            ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
            ChevronDisabledFill: =RGBA(244, 244, 244, 1)
            ChevronFill: =RGBA(246, 88, 16, 1)
            ChevronHoverBackground: =
            ChevronHoverFill: =RGBA(246, 88, 16, 1)
            Default: |-
                =Text(
                    LookUp(
                        colAssociate,
                        Proper(
                            LookUp(
                                OOH_Log_Txn,
                                Log_ID = Value(ID_TextInput.Text),
                                Log_FA_ID
                            )
                        ) in Result,
                        Result
                    )
                )
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(QARedirectCheckbox.Value = true,DisplayMode.Disabled, DisplayMode.Edit)
            Font: =Font.Arial
            Height: =29
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(230, 230, 230, 1)
            Items: =Filter(colAssociate, Not(Result = "All"))
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =RGBA(230, 230, 230, 1)
            SelectionColor: =RGBA(0, 0, 0, 1)
            SelectionFill: =RGBA(230, 230, 230, 1)
            Size: =10
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =313
            ZIndex: =16

        Revert_Label As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.Arial
            Height: =21
            Size: =13
            Text: |-
                ="REVERT: to AGENCY"
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =394
            ZIndex: =17

        Revert_Dropdown As dropdown:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            ChevronBackground: =RGBA(255, 255, 255, 1)
            ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
            ChevronDisabledFill: =RGBA(244, 244, 244, 1)
            ChevronFill: =RGBA(246, 88, 16, 1)
            ChevronHoverBackground: =
            ChevronHoverFill: =RGBA(246, 88, 16, 1)
            Default: =//Text(LookUp(colAgency, LookUp(OOH_Log_Txn, Log_ID=Value(ID_TextInput.Text), Log_Agency_ID) in Result, Result))
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(QARedirectCheckbox.Value = true,DisplayMode.Disabled, DisplayMode.Edit)
            Font: =Font.Arial
            Height: =29
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(230, 230, 230, 1)
            Items: =Filter(colAgency, Not(Agency_ID = 0))
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =RGBA(230, 230, 230, 1)
            SelectionColor: =RGBA(230, 230, 230, 1)
            SelectionFill: =RGBA(255, 255, 255, 1)
            Size: =10
            Visible: =showDialog
            Width: =338
            X: =200
            Y: =427
            ZIndex: =18

        Save_Button As button:
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            Font: =Font.Arial
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |
                =/*If(
                    QARedirectCheckbox.Value = false,
                    Patch(
                        master_log,
                        LookUp(
                            master_log,
                            ID = Value(ID_TextInput.Text)
                        ),
                        {
                            Label: Redefine_Dropdown.Selected.Value,
                            Finance_Associate: Reassign_Dropdown.Selected.Result,
                            Agency: Revert_Dropdown.Selected.Result,
                            FA_Status: "",
                            FA_Interface_Log_Status: "FA Redirected",
                            UpdatedDate: Now(),
                            UpdatedBy: varLoggedInUser.Email
                        }
                    ),
                    Patch(
                        master_log,
                        LookUp(
                            master_log,
                            ID = Value(ID_TextInput.Text)
                        ),
                        {
                            Embargo_Record:Revert_to_QA_Dropdown.Selected.Title,
                            FA_Interface_Ready: "No",
                            FA_Status: "",
                            FA_Interface_Log_Status: "FA Redirected",
                            UpdatedDate: Now(),
                            UpdatedBy: varLoggedInUser.Email
                        }
                    )
                );
                If(
                     // check if there were any errors
                    !IsEmpty(Errors(master_log)),
                     // if true, show any error message
                    Notify(
                        Concat(
                            Errors(master_log),
                            Column & ": " & Message
                        ),
                        NotificationType.Error
                    ),
                     // else, go to success notification
                    Notify(
                        "The record has been successfully Redirected",
                        NotificationType.Success,
                        2000
                    )
                );
                UpdateContext({showDialog: false});
                If(
                    ROWNUM >= Last(SelectedItems).rowNumber,
                    "",
                    UpdateContext({ROWNUM: ROWNUM + 1});
                    UpdateContext(
                        {
                            PDFLink: LookUp(
                                SelectedItems,
                                rowNumber = ROWNUM,
                                Doc_Link
                            )
                        }
                    );
                    If(
                        !IsBlank(
                            Find(
                                "/GRMUSA-APDIGITAL2022",
                                PDFLink
                            )
                        ),
                        UpdateContext(
                            {
                                varPDF: OOHShowPDFDetails.Run(
                                    Substitute(
                                        Concat(
                                            FirstN(
                                                Split(
                                                    Mid(
                                                        PDFLink,
                                                        Find(
                                                            "/GRMUSA-APDIGITAL2022",
                                                            PDFLink
                                                        )
                                                    ),
                                                    "/"
                                                ).Result,
                                                CountRows(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GRMUSA-APDIGITAL2022",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result
                                                ) - 1
                                            ),
                                            Result & "/"
                                        ),
                                        "/GRMUSA-APDIGITAL2022",
                                        ""
                                    ) & LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Invoice_Name_Link
                                    )
                                )
                            }
                        ),
                        UpdateContext(
                            {
                                varPDF: OOHShowPDFDetails.Run(
                                    Substitute(
                                        Concat(
                                            FirstN(
                                                Split(
                                                    Mid(
                                                        PDFLink,
                                                        Find(
                                                            "/GMUSA-InvoiceProcessing",
                                                            PDFLink
                                                        )
                                                    ),
                                                    "/"
                                                ).Result,
                                                CountRows(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-InvoiceProcessing",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result
                                                ) - 1
                                            ),
                                            Result & "/"
                                        ),
                                        "/GMUSA-InvoiceProcessing",
                                        ""
                                    ) & LookUp(
                                        SelectedItems,
                                        rowNumber = ROWNUM,
                                        Invoice_Name_Link
                                    )
                                )
                            }
                        )
                    );
                    Refresh(master_log);
                    UpdateContext(
                        {
                            VAR_Vendor_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Vendor
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    Vendor
                                )
                            ),
                            VAR_PublicationName_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    PUBLICATION_NAME
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    PUBLICATION_NAME
                                )
                            ),
                            VAR_PublicationCode_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    PUBLICATION_CODE
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    PUBLICATION_CODE
                                )
                            )
                        }
                    );
                    Reset(Vendor_TextInput);
                    UpdateContext(
                        {
                            VAR_M_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    MediaLookup
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    MediaLookup
                                )
                            )
                        }
                    );
                    Reset(M_TextInput);
                    UpdateContext(
                        {
                            VAR_C_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    C
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    C
                                )
                            )
                        }
                    );
                    Reset(C_TextInput);
                    UpdateContext(
                        {
                            VAR_P_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    P
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    P
                                )
                            )
                        }
                    );
                    Reset(P_TextInput);
                    UpdateContext(
                        {
                            VAR_E_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    E
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    E
                                )
                            )
                        }
                    );
                    Reset(E_TextInput);
                    UpdateContext(
                        {
                            VAR_MOS_DEF: If(
                                Invoice_FA_Staus_Label.Text = "",
                                LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    PDF_MOS
                                ),
                                LookUp(
                                    master_log,
                                    ID = Value(ID_TextInput.Text),
                                    PDF_MOS
                                )
                            )
                        }
                    );
                    Reset(MOS_TextInput_initial);
                    Reset(Client_Name_TextInput);
                    Reset(IO_TextInput);
                    Reset(PCID_TextInput);
                    Reset(InvoiceNum_TextInput);
                    Reset(Amount_TextInput);
                    Reset(Tax_TextInput);
                    Reset(InvDate_TextInput_initial);
                    Reset(ID_TextInput);
                    
                );
                If(
                    !IsBlank(ViewCommentS9Input.Text),
                    Patch(
                        FA_Interface_FA_Comments,
                        Defaults(FA_Interface_FA_Comments),
                        {
                            SNo: GUID(),
                            Agency: Selected_Agency_Data.Text,
                            Vendor: Vendor_TextInput.Text,
                            InsertionMonth: MOS_TextInput.Text,
                            InvoiceNum: InvoiceNum_TextInput.Text,
                            RecordID: ID_TextInput.Text,
                            ClientCode: C_TextInput.Text,
                            ProductCode: P_TextInput.Text,
                            EstCode: E_TextInput.Text,
                            CommenterID: Selected_FA_Data.Text,
                            CreateDate: Now(),
                            Comment: ViewCommentS9Input.Text
                        }
                    );
                    If(
                     // check if there were any errors
                        !IsEmpty(Errors(FA_Interface_FA_Comments)),
                     // if true, show any error message
                        Notify(
                            Concat(
                                Errors(FA_Interface_FA_Comments),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        ),
                     // else, go to success notification
                        Notify(
                            "Comment has been successfully added for this record",
                            NotificationType.Success,
                            2000
                        )
                    );
                    Reset(ViewCommentS9Input);
                    ,
                    ""
                );
                Reset(ViewCommentS9Input);*/
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="SAVE"
            Visible: =showDialog
            Width: =79
            X: =497
            Y: =591
            ZIndex: =19

        Cancel_Redirect_Modal As icon.Cancel:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(246, 88, 16, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =0
            Height: =45
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialog: false})
            Visible: =showDialog
            Width: =33
            X: =580
            Y: =72
            ZIndex: =20

        Ignore_Button As button:
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            Font: =Font.Arial
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showDialog: false})
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Cancel"
            Visible: =showDialog
            Width: =79
            X: =200
            Y: =591
            ZIndex: =21

    hide_FA_ID As text:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 1)
        Default: =LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_FA_ID)
        DelayOutput: =true
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Height: =16
        HoverBorderColor: =RGBA(230, 230, 230, 1)
        HoverColor: =RGBA(230, 230, 230, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        PaddingLeft: =5
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Visible: =false
        Width: =65
        Y: =352
        ZIndex: =86

    hide_AgencyID As text:
        BorderColor: =RGBA(131, 24, 75, 1)
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 1)
        Default: |-
            =//LookUp(SelectedItems, rowNumber = ROWNUM, Log_Agency_ID)
            LookUp(OOH_Log_Txn, Log_ID = Value(ID_TextInput.Text), Log_Agency_ID)
        DelayOutput: =true
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Height: =15
        HoverBorderColor: =RGBA(230, 230, 230, 1)
        HoverColor: =RGBA(230, 230, 230, 1)
        HoverFill: =RGBA(230, 230, 230, 1)
        PaddingLeft: =5
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Visible: =false
        Width: =75
        X: =32
        Y: =320
        ZIndex: =87

    Unpaid_Popoup_Group As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =91

        Screen_Overlay_Unpaid As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(204, 204, 204, 1)
            Height: =766
            Visible: =showUnpaidDialog
            Width: =1366
            Y: =2
            ZIndex: =89

        Modal_popup_Unpaid As rectangle:
            BorderColor: =RGBA(153, 153, 153, 1)
            BorderThickness: =2
            Fill: =RGBA(237, 237, 237, 1)
            Height: =703
            Visible: =showUnpaidDialog
            Width: =1300
            X: =32
            Y: =31
            ZIndex: =90

        ModalPopupContainer As groupContainer.manualLayoutContainer:
            Height: =159
            Visible: =showUnpaidDialog
            Width: =1297
            X: =33
            Y: =32
            ZIndex: =91

            Cancel_Redirect_Modal_Unpaid As icon.Cancel:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(246, 88, 16, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =0
                Height: =20
                Icon: =Icon.Cancel
                OnSelect: |-
                    =UpdateContext({showUnpaidDialog: false});
                    Reset(Unpaid_ClientName_Search);
                    Reset(Unpaid_P_Search);
                    Reset(Unpaid_E_Search);
                    Reset(Unpaid_Contract_Search);
                    Reset(Unpaid_Prod_Name_Search);
                    Reset(Unpaid_AccountOff_Search);
                    Reset(Unpaid_Ref_Invoice_Comment_Search);
                Visible: =showUnpaidDialog
                Width: =15
                X: =1270
                Y: =8
                ZIndex: =1

            MOS_Dropdown As dropdown:
                BorderColor: =RGBA(230, 230, 230, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronFill: =RGBA(246, 88, 16, 1)
                ChevronHoverBackground: =
                ChevronHoverFill: =RGBA(246, 88, 16, 1)
                Default: =PreFilter_MOS
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Font: =Font.Arial
                Height: =28
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(230, 230, 230, 1)
                Items: =colUnpaidMOS.Unpaid_ref_Insertion_MOS_Month
                OnChange: =
                PressedColor: =RGBA(0, 0, 0, 1)
                PressedFill: =RGBA(230, 230, 230, 1)
                SelectionColor: =RGBA(230, 230, 230, 1)
                SelectionFill: =RGBA(255, 255, 255, 1)
                Size: =10
                Visible: =showUnpaidDialog
                Width: =95
                X: =725
                Y: =38
                ZIndex: =2

            Unpaid_P_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =PreFilter_P_Code
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =28
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =99
                X: =309
                Y: =42
                ZIndex: =4

            Unpaid_E_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =PreFilter_E_Code
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =28
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =92
                X: =427
                Y: =42
                ZIndex: =5

            Unpaid_Ref_Invoice_Comment_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =32
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                OnSelect: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =183
                X: =696
                Y: =100
                ZIndex: =7

            Unpaid_AccountOff_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =29
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                OnSelect: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =158
                X: =519
                Y: =102
                ZIndex: =8

            Excel_Download_Button As button:
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                Font: =Font.Arial
                Height: =35
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |
                    =ClearCollect(
                        varExportToExcel,
                        ({
                            FA_Name: LookUp(
                            OOH_FA_Master,
                            FA_ID = Value(hide_FA_ID.Text),
                            FA_Email_ID
                            ),
                            From: Text(
                                From_DatePicker.SelectedDate,
                                "[$-en-US]dd-mm-yy"
                            ),
                            To: Text(
                                To_DatePicker.SelectedDate,
                                "[$-en-US]dd-mm-yy"
                            )
                        })
                    );
                    Set(VarLink, OOHDownloadReportInExcel.Run(
                        JSON(
                            varExportToExcel,
                            JSONFormat.IndentFour
                        )
                    ).filelink);
                    
                    Download(VarLink);
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: ="DOWNLOAD"
                Width: =100
                X: =1050
                Y: =96
                ZIndex: =9

            Match_Unpaid_Button As button:
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(211, 66, 9, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                Font: =Font.Arial
                Height: =33
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =RGBA(211, 66, 9, 1)
                OnSelect: |
                    =UpdateContext(
                        {
                            VAR_Vendor_DEF: Concatenate(
                                PaidUnpaidDataTable.Selected.Unpaid_Ref_Publication_Name,
                                " (",
                                PaidUnpaidDataTable.Selected.Unpaid_Ref_Publication_Code,
                                ")"
                            )
                        }
                    );
                    Reset(Vendor_TextInput);
                    UpdateContext({VAR_ContractNum_DEF: PaidUnpaidDataTable.Selected.Unpaid_Ref_Contract_ID});
                    Reset(ContractNumber_TextInput);
                    UpdateContext({VAR_C_DEF: PaidUnpaidDataTable.Selected.Unpaid_Ref_Client_Code});
                    Reset(C_TextInput);
                    UpdateContext({VAR_P_DEF: PaidUnpaidDataTable.Selected.Unpaid_Ref_Product_Code});
                    Reset(P_TextInput);
                    UpdateContext({VAR_E_DEF: Text(PaidUnpaidDataTable.Selected.Unpaid_Ref_EST_Code)});
                    Reset(E_TextInput);
                    
                    UpdateContext({VAR_PublicationCode_DEF: Text(PaidUnpaidDataTable.Selected.Unpaid_Ref_Publication_Code)});
                    
                    ClearCollect(
                        MOS_Month,
                        ForAll(
                            colMonthInNumber,
                            If(
                                ThisRecord.Text = First(
                                    Split(
                                        PaidUnpaidDataTable.Selected.Unpaid_Ref_Insertion_MOS_Month,
                                        "/"
                                    )
                                ).Result,
                                Text(ThisRecord.Val),
                                ""
                            )
                        )
                    );
                    UpdateContext(
                        {
                            VAR_MOS_DEF: PaidUnpaidDataTable.Selected.Unpaid_Ref_Insertion_MOS_Month
                        }
                    );
                    Reset(MOS_TextInput_initial);
                    UpdateContext({MySelected: PaidUnpaidDataTable.Selected});
                    
                    UpdateContext({showUnpaidDialog: false});
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: ="MATCH >"
                Visible: =showUnpaidDialog
                Width: =100
                X: =1185
                Y: =43
                ZIndex: =10

            Client_Code_Unpaid_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Client Code"
                Visible: =showUnpaidDialog
                Width: =99
                X: =21
                Y: =8
                ZIndex: =11

            Product_Code_Unpaid_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Product Code"
                Visible: =showUnpaidDialog
                Width: =99
                X: =309
                Y: =8
                ZIndex: =12

            Estimate_Code_Unpaid_Label As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Estimate Code"
                Visible: =showUnpaidDialog
                Width: =125
                X: =427
                Y: =10
                ZIndex: =13

            Vendor_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="Publication name"
                Visible: =showUnpaidDialog
                Width: =210
                X: =519
                Y: =8
                ZIndex: =14

            MOS_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="MOS"
                Visible: =showUnpaidDialog
                Width: =95
                X: =721
                Y: =8
                ZIndex: =15

            Campaign_Name_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =19
                Size: =10
                Text: ="Invoice Comment"
                Visible: =showUnpaidDialog
                Width: =179
                X: =696
                Y: =77
                ZIndex: =16

            Estimate_Name_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =20
                Size: =10
                Text: ="CLI Account Off"
                Visible: =showUnpaidDialog
                Width: =156
                X: =518
                Y: =79
                ZIndex: =17

            Download_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =51
                Size: =12
                Text: ="(All Unpaid for FA)"
                Visible: =showUnpaidDialog
                Width: =155
                X: =885
                Y: =92
                ZIndex: =18

            Unpaid_Vendor_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =PreFilter_Vendor
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =30
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =8
                Visible: =showUnpaidDialog
                Width: =171
                X: =541
                Y: =40
                ZIndex: =19

            Order_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =29
                Size: =10
                Text: ="Contract ID"
                Visible: =showUnpaidDialog
                Width: =153
                X: =168
                Y: =76
                ZIndex: =20

            PCID_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =28
                Size: =10
                Text: ="PCID"
                Visible: =false
                Width: =137
                X: =176
                Y: =68
                ZIndex: =21

            PROD_Name_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =28
                Size: =10
                Text: ="Product Name"
                Visible: =showUnpaidDialog
                Width: =165
                X: =335
                Y: =75
                ZIndex: =22

            Unpaid_Order_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =28
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =false
                Width: =138
                X: =200
                Y: =104
                ZIndex: =23

            Unpaid_Contract_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =28
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =135
                X: =183
                Y: =104
                ZIndex: =24

            Unpaid_Prod_Name_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =29
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =165
                X: =335
                Y: =103
                ZIndex: =25

            from_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =31
                Size: =10
                Text: ="From INS Date"
                Visible: =showUnpaidDialog
                Width: =125
                X: =891
                Y: =11
                ZIndex: =28

            To_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =32
                Size: =10
                Text: ="To INS Date"
                Visible: =showUnpaidDialog
                Width: =131
                X: =1026
                Y: =11
                ZIndex: =29

            From_DatePicker As datepicker:
                BorderColor: =RGBA(230, 230, 230, 1)
                CalendarHeaderFill: =RGBA(211, 66, 9, 1)
                Color: =RGBA(0, 0, 0, 1)
                DefaultDate: =Date(2019,01,01)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Font: =Font.Arial
                Height: =32
                HoverDateFill: =RGBA(255, 211, 205, 1)
                IconBackground: =RGBA(211, 66, 9, 1)
                IsEditable: =true
                OnChange: =
                PaddingLeft: =5
                PaddingTop: =5
                SelectedDateFill: =RGBA(211, 66, 9, 1)
                Size: =11
                Visible: =showUnpaidDialog
                Width: =125
                X: =891
                Y: =45
                ZIndex: =30

            To_DatePicker As datepicker:
                BorderColor: =RGBA(230, 230, 230, 1)
                CalendarHeaderFill: =RGBA(211, 66, 9, 1)
                Color: =RGBA(0, 0, 0, 1)
                DefaultDate: =Now()
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Font: =Font.Arial
                Height: =32
                HoverDateFill: =RGBA(255, 211, 205, 1)
                IconBackground: =RGBA(211, 66, 9, 1)
                IsEditable: =true
                OnChange: =
                PaddingLeft: =5
                PaddingTop: =5
                SelectedDateFill: =RGBA(211, 66, 9, 1)
                Size: =11
                Visible: =showUnpaidDialog
                Width: =131
                X: =1026
                Y: =43
                ZIndex: =31

            Client_Name_Unpaid_Label As label:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =21
                Size: =10
                Text: ="Client Name"
                Visible: =showUnpaidDialog
                Width: =168
                X: =120
                Y: =7
                ZIndex: =32

            Unpaid_ClientName_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =""
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =31
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                OnSelect: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =168
                X: =123
                Y: =37
                ZIndex: =33

            ShowPDFIcon As icon.DocumentPDF:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(211, 66, 9, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Height: =43
                Icon: =Icon.DocumentPDF
                OnSelect: |-
                    =UpdateContext({showUnpaidPDF: !showUnpaidPDF});
                Width: =51
                X: =1199
                Y: =88
                ZIndex: =34

            SortUnpaidCPEIcon As icon.ChevronUp:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(190, 59, 8, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Height: =35
                Icon: =If(SortID,Icon.ChevronUp,Icon.ChevronDown)
                OnSelect: =Set(SortID,!SortID)
                Visible: =showUnpaidDialog
                Width: =23
                X: =110
                Y: =124
                ZIndex: =35

            Label11 As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =19
                Size: =13
                Text: ="Sort CPE"
                Visible: =showUnpaidDialog
                Width: =97
                X: =27
                Y: =131
                ZIndex: =36

            Unpaid_C_Search As text:
                BorderColor: =RGBA(204, 204, 204, 1)
                BorderThickness: =2
                Clear: =true
                Color: =RGBA(0, 0, 0, 1)
                Default: =PreFilter_C_Code
                DelayOutput: =true
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =4
                Font: =Font.Arial
                Height: =28
                HintText: ="Search..."
                HoverBorderColor: =RGBA(230, 230, 230, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =
                Size: =10
                Visible: =showUnpaidDialog
                Width: =88
                X: =20
                Y: =40
                ZIndex: =37

            Match_Unpaid_Button_6 As button:
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(211, 66, 9, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(211, 66, 9, 1)
                Font: =Font.Arial
                Height: =39
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =RGBA(211, 66, 9, 1)
                OnSelect: |
                    =ClearCollect(
                        ColSegmentUnpaidData,
                        Sort(
                            Sort(
                                Sort(
                                    Filter(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Vendor_Search.Text in Unpaid_Ref_Publication_Name Or IsBlank(Unpaid_Vendor_Search),
                                        Unpaid_C_Search.Text in Unpaid_Ref_Client_Code Or IsBlank(Unpaid_C_Search),
                                        Unpaid_P_Search.Text in Unpaid_Ref_Product_Code Or IsBlank(Unpaid_P_Search),
                                        Unpaid_E_Search.Text = Unpaid_Ref_EST_Code Or IsBlank(Unpaid_E_Search),
                                        MOS_Dropdown.Selected.Unpaid_ref_Insertion_MOS_Month = Blank() Or Unpaid_Ref_Insertion_MOS_Month = MOS_Dropdown.Selected.Unpaid_ref_Insertion_MOS_Month,
                                        Unpaid_Contract_Search.Text in Unpaid_Ref_Contract_ID Or IsBlank(Unpaid_Contract_Search),
                                        Unpaid_AccountOff_Search.Text in Unpaid_Ref_CLI_Acc_Off Or IsBlank(Unpaid_AccountOff_Search),
                                        Unpaid_Prod_Name_Search.Text in Unpaid_Ref_Product_Name Or IsBlank(Unpaid_Prod_Name_Search),
                                        Unpaid_Ref_Invoice_Comment_Search.Text in Unpaid_Ref_Invoice_Comment Or IsBlank(Unpaid_Ref_Invoice_Comment_Search),
                                        Unpaid_ClientName_Search.Text in Unpaid_Ref_Client_Name Or IsBlank(Unpaid_ClientName_Search)
                                    ),
                                    Unpaid_Ref_Client_Code,
                                    If(
                                        SortID,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                Unpaid_Ref_Product_Code,
                                If(
                                    SortID,
                                    Ascending,
                                    Descending
                                )
                            ),
                            Unpaid_Ref_EST_Code,
                            If(
                                SortID,
                                Ascending,
                                Descending
                            )
                        )
                    );
                    UpdateContext({showUnpaidDialog: false});
                    //UpdateContext({showSegmentUnpaidPopup: false});
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Text: ="START SEGMENT MATCH >"
                Tooltip: ="Navigates for adding segment buys"
                Visible: =showSegmentUnpaidPopup
                Width: =109
                X: =1176
                Y: =40
                ZIndex: =38

        PaidUnpaidDataTable As dataTable.datatable:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(255, 255, 255, 1)
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HeadingColor: =RGBA(0, 0, 0, 1)
            HeadingFill: =RGBA(204, 204, 204, 1)
            HeadingFont: =Font.Arial
            HeadingFontWeight: =FontWeight.Normal
            HeadingSize: =11
            Height: =524
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, .2)
            InputFill: =RGBA(255, 255, 255, 1)
            InvertedColor: =RGBA(255, 255, 255, 1)
            Items: |-
                =Sort(
                    Sort(
                        Sort(
                            Filter(
                                OOH_Unpaid_Ref,
                               Unpaid_Vendor_Search.Text in Unpaid_Ref_Publication_Name Or IsBlank(Unpaid_Vendor_Search),
                                Unpaid_C_Search.Text in Unpaid_Ref_Client_Code Or IsBlank(Unpaid_C_Search),
                              Unpaid_P_Search.Text in Unpaid_Ref_Product_Code Or IsBlank(Unpaid_P_Search),
                              Unpaid_E_Search.Text = Unpaid_Ref_EST_Code Or IsBlank(Unpaid_E_Search),
                                MOS_Dropdown.Selected.Unpaid_ref_Insertion_MOS_Month = Blank() Or Unpaid_Ref_Insertion_MOS_Month = MOS_Dropdown.Selected.Unpaid_ref_Insertion_MOS_Month,
                                Unpaid_Contract_Search.Text in Unpaid_Ref_Contract_ID Or IsBlank(Unpaid_Contract_Search),
                               Unpaid_AccountOff_Search.Text in Unpaid_Ref_CLI_Acc_Off Or IsBlank(Unpaid_AccountOff_Search),
                               Unpaid_Prod_Name_Search.Text in Unpaid_Ref_Product_Name Or IsBlank(Unpaid_Prod_Name_Search),
                                Unpaid_Ref_Invoice_Comment_Search.Text in Unpaid_Ref_Invoice_Comment Or IsBlank(Unpaid_Ref_Invoice_Comment_Search),
                               Unpaid_ClientName_Search.Text in Unpaid_Ref_Client_Name Or IsBlank(Unpaid_ClientName_Search)
                            ),
                            Unpaid_Ref_Client_Code,
                            If(
                                SortID,
                                Ascending,
                                Descending
                            )
                        ),
                        Unpaid_Ref_Product_Code,
                        If(
                            SortID,
                            Ascending,
                            Descending
                        )
                    ),
                    Unpaid_Ref_EST_Code,
                    If(
                        SortID,
                        Ascending,
                        Descending
                    )
                )
                //OOH_Unpaid_Ref
            LinkColor: =RGBA(0, 134, 208, 1)
            PrimaryColor1: =RGBA(211, 66, 9, 1)
            PrimaryColor2: =RGBA(131, 24, 75, 1)
            PrimaryColor3: =RGBA(255, 211, 205, 1)
            SelectedColor: =Black
            SelectedFill: |-
                =//If(PaidUnpaidDataTable.Selected.FA_Matched = "Yes",RGBA(137, 208, 139, 0.77),RGBA(211, 66, 9, .2))
                RGBA(211, 66, 9, .2)
            Size: =11
            Visible: =showUnpaidDialog
            Width: =1271
            X: =47
            Y: =191
            ZIndex: =105

            Unpaid_Ref_Publication_Code_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PUB NUM"
                FieldName: ="Unpaid_Ref_Publication_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =39
                Text: =ThisItem.Unpaid_Ref_Publication_Code
                Width: =93
                X: =0
                Y: =0
                ZIndex: =84

            Unpaid_Ref_Publication_Name_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PUB NAME"
                FieldName: ="Unpaid_Ref_Publication_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =38
                Text: =ThisItem.Unpaid_Ref_Publication_Name
                Width: =100
                X: =0
                Y: =0
                ZIndex: =85

            Unpaid_Ref_CLI_Acc_Off_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CLI"
                FieldName: ="Unpaid_Ref_CLI_Acc_Off"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =31
                Text: =                 
                Width: =80
                X: =0
                Y: =0
                ZIndex: =87

            Unpaid_Ref_Client_Code_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CLIENT CODE"
                FieldName: ="Unpaid_Ref_Client_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =32
                Text: =ThisItem.Unpaid_Ref_Client_Code
                Width: =120
                X: =0
                Y: =0
                ZIndex: =88

            Unpaid_Ref_Client_Name_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CLIENT NAME"
                FieldName: ="Unpaid_Ref_Client_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =33
                Text: =ThisItem.Unpaid_Ref_Client_Name
                Width: =100
                X: =0
                Y: =0
                ZIndex: =89

            Unpaid_Ref_Contract_ID_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CONTRACT ID"
                FieldName: ="Unpaid_Ref_Contract_ID"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =42
                Text: =ThisItem.Unpaid_Ref_Contract_ID
                Width: =120
                X: =0
                Y: =0
                ZIndex: =90

            Unpaid_Ref_EST_Code_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="EST"
                FieldName: ="Unpaid_Ref_EST_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =37
                Text: =ThisItem.Unpaid_Ref_EST_Code
                Width: =83
                X: =0
                Y: =0
                ZIndex: =91

            Unpaid_Ref_IDesk_Recon_Status_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="IDESK"
                FieldName: ="Unpaid_Ref_IDesk_Recon_Status"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =29
                Text: =ThisItem.Unpaid_Ref_IDesk_Recon_Status
                Width: =70
                X: =0
                Y: =0
                ZIndex: =93

            Unpaid_Ref_Insertion_Date_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS DATE"
                FieldName: ="Unpaid_Ref_Insertion_Date"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =40
                Text: =ThisItem.Unpaid_Ref_Insertion_Date
                Width: =110
                X: =1111
                Y: =0
                ZIndex: =94

            Unpaid_Ref_Insertion_MOS_Month_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS MOS"
                FieldName: ="Unpaid_Ref_Insertion_MOS_Month"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =41
                Text: =ThisItem.Unpaid_Ref_Insertion_MOS_Month
                Width: =100
                X: =0
                Y: =0
                ZIndex: =95

            Unpaid_Ref_Insertion_Order_Comment_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS ORDER COMMENT"
                FieldName: ="Unpaid_Ref_Insertion_Order_Comment"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =43
                Text: =ThisItem.Unpaid_Ref_Insertion_Order_Comment
                Width: =100
                X: =0
                Y: =0
                ZIndex: =96

            Unpaid_Ref_Insertion_Order_Comment_2_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS ORDER COMMENT 2"
                FieldName: ="Unpaid_Ref_Insertion_Order_Comment_2"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =44
                Text: =ThisItem.Unpaid_Ref_Insertion_Order_Comment_2
                Width: =100
                X: =0
                Y: =0
                ZIndex: =97

            Unpaid_Ref_Invoice_Comment_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="AB INV COMM"
                FieldName: ="Unpaid_Ref_Invoice_Comment"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =27
                Text: =ThisItem.Unpaid_Ref_Invoice_Comment
                Width: =100
                X: =0
                Y: =0
                ZIndex: =99

            Unpaid_Ref_Invoice_Dollar_Column1 As dataTableColumn.numberColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="ABINV DOLLARS"
                FieldName: ="Unpaid_Ref_Invoice_Dollar"
                FieldVariantName: ="numberColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =23
                Text: |-
                    =//Text(Value(ThisItem.Unpaid_Ref_Invoice_Dollar), "[$-en-US],$#,##0.00")
                    ThisItem.Unpaid_Ref_Invoice_Dollar
                Width: =120
                X: =0
                Y: =0
                ZIndex: =100

            Unpaid_Ref_Payable_Net_Column1 As dataTableColumn.numberColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PAYABLE NET"
                FieldName: ="Unpaid_Ref_Payable_Net"
                FieldVariantName: ="numberColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =25
                Text: |-
                    =Text(Value(ThisItem.Unpaid_Ref_Payable_Net), "[$-en-US],$#,##0.00")
                Width: =110
                X: =0
                Y: =0
                ZIndex: =101

            Unpaid_Ref_Invoice_Number_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="AB INV"
                FieldName: ="Unpaid_Ref_Invoice_Number"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =22
                Text: =ThisItem.Unpaid_Ref_Invoice_Number
                Width: =120
                X: =0
                Y: =0
                ZIndex: =102

            Unpaid_Ref_Paid_Net_Column1 As dataTableColumn.numberColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PAID NET"
                FieldName: ="Unpaid_Ref_Paid_Net"
                FieldVariantName: ="numberColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =26
                Text: |-
                    =Text(Value(ThisItem.Unpaid_Ref_Paid_Net), "[$-en-US],$#,##0.00")
                Width: =100
                X: =0
                Y: =0
                ZIndex: =105

            Unpaid_Ref_Product_Code_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PRODUCT CODE"
                FieldName: ="Unpaid_Ref_Product_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =34
                Text: =ThisItem.Unpaid_Ref_Product_Code
                Width: =130
                X: =0
                Y: =0
                ZIndex: =107

            Unpaid_Ref_Product_Name_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PRODUCT NAME"
                FieldName: ="Unpaid_Ref_Product_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =35
                Text: =ThisItem.Unpaid_Ref_Product_Name
                Width: =120
                X: =0
                Y: =0
                ZIndex: =108

            Unpaid_Ref_Pay_Address_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="PAY ADDRESS"
                FieldName: ="Unpaid_Ref_Pay_Address"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =49
                Text: =ThisItem.Unpaid_Ref_Pay_Address
                Width: =100
                X: =0
                Y: =0
                ZIndex: =109

            Unpaid_Ref_TS_Received_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="TS RECEIVED"
                FieldName: ="Unpaid_Ref_TS_Received"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =28
                Text: =ThisItem.Unpaid_Ref_TS_Received
                Width: =120
                X: =0
                Y: =0
                ZIndex: =110

            Unpaid_Ref_Insertion_Order_Comment_4_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS ORDER COMMENT 4"
                FieldName: ="Unpaid_Ref_Insertion_Order_Comment_4"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =48
                Text: =ThisItem.Unpaid_Ref_Insertion_Order_Comment_4
                Width: =100
                X: =0
                Y: =0
                ZIndex: =111

    Segmented_Group As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =92

        Rectangle1 As rectangle:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderThickness: =10
            Fill: =RGBA(255, 255, 255, 1)
            Height: =689
            Visible: =showSegmentPopup
            Width: =699
            Y: =79
            ZIndex: =61

        Rectangle4_3 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            Height: =75
            Visible: =showSegmentPopup
            Width: =966
            Y: =4
            ZIndex: =63

        Icon3 As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 121, 187, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =48
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showSegmentPopup:false});
                UpdateContext({showSegmentUnpaidPopup:false});
            Visible: =showSegmentPopup
            Width: =32
            X: =13
            Y: =18
            ZIndex: =64

        Label4 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =64
            Size: =11
            Text: =VAR_Vendor_DEF
            Visible: =showSegmentPopup
            X: =52
            Y: =2
            ZIndex: =65

        Label5 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =11
            Text: ="| "&If(IsBlankOrError(DateValue(InvDate_TextInput_initial.Text)),InvDate_TextInput_initial.Text,Text(DateValue( InvDate_TextInput_initial.Text ), "mm/dd/yy" )) 
            Visible: =showSegmentPopup
            X: =220
            Y: =13
            ZIndex: =66

        Label7 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =11
            Text: |-
                ="| " & LookUp(
                    OOH_Log_TXN_VIEW,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Invoice_Number
                )
            Visible: =showSegmentPopup
            X: =353
            Y: =13
            ZIndex: =67

        Label8 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =11
            Text: ="| "& MOS_TextInput_View.Text
            Visible: =showSegmentPopup
            Width: =90
            X: =520
            Y: =13
            ZIndex: =68

        Label9 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =11
            Text: |-
                ="| $" & LookUp(
                    OOH_Log_TXN_VIEW,
                    Log_ID = Value(ID_TextInput.Text),
                    Log_Invoice_Amount
                )
            Visible: =showSegmentPopup
            X: =610
            Y: =13
            ZIndex: =69

        ReconUnpaidDataTable As dataTable.datatable:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderStyle: =BorderStyle.Solid
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(255, 255, 255, 1)
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HeadingColor: =RGBA(255, 255, 255, 1)
            HeadingFill: =RGBA(211, 66, 9, 1)
            HeadingFont: =Font.Arial
            HeadingFontWeight: =FontWeight.Normal
            HeadingSize: =8
            Height: =341
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, .2)
            InputFill: =RGBA(255, 255, 255, 1)
            InvertedColor: =RGBA(255, 255, 255, 1)
            Items: =ColSegmentUnpaidData
            LinkColor: =RGBA(0, 134, 208, 1)
            NoDataText: =""
            PrimaryColor1: =RGBA(211, 66, 9, 1)
            PrimaryColor2: =RGBA(131, 24, 75, 1)
            PrimaryColor3: =RGBA(255, 211, 205, 1)
            SelectedColor: =RGBA(0, 0, 0, 1)
            SelectedFill: =RGBA(211, 66, 9, .2)
            Size: =10
            Visible: =showSegmentPopup
            Width: =673
            X: =13
            Y: =427
            ZIndex: =70

            Unpaid_Ref_CLI_Acc_Off_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CLI"
                FieldName: ="Unpaid_Ref_CLI_Acc_Off"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =19
                Text: =ThisItem.Unpaid_Ref_CLI_Acc_Off
                Width: =100
                X: =0
                Y: =0
                ZIndex: =112

            Unpaid_Ref_Contract_ID_Column2 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Contract ID"
                FieldName: ="Unpaid_Ref_Contract_ID"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =3
                Text: =ThisItem.Unpaid_Ref_Contract_ID
                Width: =113
                X: =0
                Y: =0
                ZIndex: =113

            Unpaid_Ref_Client_Name_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Client Name"
                FieldName: ="Unpaid_Ref_Client_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =21
                Text: =ThisItem.Unpaid_Ref_Client_Name
                Width: =100
                X: =0
                Y: =0
                ZIndex: =114

            Unpaid_Ref_Insertion_Date_Column2 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS Date"
                FieldName: ="Unpaid_Ref_Insertion_Date"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =2
                Text: =ThisItem.Unpaid_Ref_Insertion_Date
                Width: =96
                X: =0
                Y: =0
                ZIndex: =115

            Unpaid_Ref_IDesk_Recon_Status_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="IDesk Recon Status"
                FieldName: ="Unpaid_Ref_IDesk_Recon_Status"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =6
                Text: =ThisItem.Unpaid_Ref_IDesk_Recon_Status
                Width: =100
                X: =0
                Y: =0
                ZIndex: =116

            Unpaid_Ref_Insertion_MOS_Month_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="INS MOS Month"
                FieldName: ="Unpaid_Ref_Insertion_MOS_Month"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =24
                Text: =ThisItem.Unpaid_Ref_Insertion_MOS_Month
                Width: =100
                X: =0
                Y: =0
                ZIndex: =117

            Unpaid_Ref_Invoice_Number_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Invoice Number"
                FieldName: ="Unpaid_Ref_Invoice_Number"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =25
                Text: =ThisItem.Unpaid_Ref_Invoice_Number
                Width: =100
                X: =0
                Y: =0
                ZIndex: =118

            Unpaid_Ref_Invoice_Dollar_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Invoice Dollar"
                FieldName: ="Unpaid_Ref_Invoice_Dollar"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =26
                Text: =ThisItem.Unpaid_Ref_Invoice_Dollar
                Width: =100
                X: =0
                Y: =0
                ZIndex: =119

            Unpaid_Ref_Invoice_Comment_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Invoice Comment"
                FieldName: ="Unpaid_Ref_Invoice_Comment"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =27
                Text: =ThisItem.Unpaid_Ref_Invoice_Comment
                Width: =100
                X: =0
                Y: =0
                ZIndex: =120

            Unpaid_Ref_Ordered_Net_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Net Ordered"
                FieldName: ="Unpaid_Ref_Ordered_Net"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =28
                Text: =ThisItem.Unpaid_Ref_Ordered_Net
                Width: =100
                X: =0
                Y: =0
                ZIndex: =121

            Unpaid_Ref_Paid_Net_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Net Paid"
                FieldName: ="Unpaid_Ref_Paid_Net"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =29
                Text: =ThisItem.Unpaid_Ref_Paid_Net
                Width: =100
                X: =0
                Y: =0
                ZIndex: =122

            Unpaid_Ref_Payable_Net_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Net Payable"
                FieldName: ="Unpaid_Ref_Payable_Net"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =4
                Text: |-
                    =Text(Value(ThisItem.Unpaid_Ref_Payable_Net),"[$-en-US]#,##0.00")
                Width: =100
                X: =0
                Y: =0
                ZIndex: =123

            Unpaid_Ref_Publication_Code_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Publication Code"
                FieldName: ="Unpaid_Ref_Publication_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =31
                Text: =ThisItem.Unpaid_Ref_Publication_Code
                Width: =100
                X: =0
                Y: =0
                ZIndex: =124

            Unpaid_Ref_Product_Name_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Product Name"
                FieldName: ="Unpaid_Ref_Product_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =32
                Text: =ThisItem.Unpaid_Ref_Product_Name
                Width: =100
                X: =0
                Y: =0
                ZIndex: =125

            Unpaid_Ref_Product_Code_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Product Code"
                FieldName: ="Unpaid_Ref_Product_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =33
                Text: =ThisItem.Unpaid_Ref_Product_Code
                Width: =100
                X: =0
                Y: =0
                ZIndex: =126

            Unpaid_Ref_Publication_Name_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Publication Name"
                FieldName: ="Unpaid_Ref_Publication_Name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =34
                Text: =ThisItem.Unpaid_Ref_Publication_Name
                Width: =100
                X: =0
                Y: =0
                ZIndex: =127

            Unpaid_Ref_TS_Received_Column2 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="TS Received"
                FieldName: ="Unpaid_Ref_TS_Received"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =5
                Text: =ThisItem.Unpaid_Ref_TS_Received
                Width: =100
                X: =321
                Y: =0
                ZIndex: =128

            Unpaid_Ref_Client_Code_Column2 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="CPE"
                FieldName: ="Unpaid_Ref_Client_Code"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =
                Text: =Text(Concatenate(ThisItem.Unpaid_Ref_Client_Code, "/", ThisItem.Unpaid_Ref_Product_Code, "/", ThisItem.Unpaid_Ref_EST_Code))
                Width: =120
                X: =0
                Y: =0
                ZIndex: =129

        Button6_3 As button:
            BorderThickness: =1
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If((IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF) Or Invoice_FA_Status_Label.Text="") And isSegmentEdited=false,DisplayMode.Disabled,DisplayMode.Edit)
            Fill: =RGBA(39, 113, 194, 1)
            FocusedBorderThickness: =2
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |+
                =UpdateContext({showUnpaidDialog: true});
                UpdateContext({showUnpaidPDF: false});
                UpdateContext({showSegmentUnpaidPopup:true});
                UpdateContext({PreFilter_C_Code: VAR_C_DEF});
                UpdateContext({PreFilter_P_Code:VAR_P_DEF});
                UpdateContext({PreFilter_E_Code:VAR_E_DEF});
                UpdateContext({PreFilter_Vendor: Log_Pub_Name.Text});
                UpdateContext({PreFilter_MOS: MOS_TextInput_View.Text});
                
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Find Unpaid Segment Buys"
            Tooltip: =If(IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF),"The value of C P Or E is missing/invalid." ,"")
            Visible: =showSegmentPopup
            Width: =190
            X: =482
            Y: =380
            ZIndex: =71

        TextInput7_1 As text:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            Default: |-
                =Text(Value(Sum(Recon_Gallery.AllItems, Segment_Inv_Amt.Text)),"[$-en-US] #,#0.00")
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(0, 0, 0, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =DisplayMode.Disabled
            FocusedBorderThickness: =2
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverBorderColor: =RGBA(131, 24, 75, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, 1)
            PaddingLeft: =5
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Visible: =showSegmentPopup
            Width: =130
            X: =337
            Y: =379
            ZIndex: =72

        Label10 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Size: =13
            Text: |-
                ="Total : $"
            Visible: =showSegmentPopup
            Width: =82
            X: =253
            Y: =374
            ZIndex: =73

        Label23_2 As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =37
            Size: =12
            Text: |-
                ="Total Rows : "&CountRows(colSegmentRecords) 
            Visible: =showSegmentPopup
            Width: =120
            X: =114
            Y: =374
            ZIndex: =74

        Button6_2 As button:
            BorderThickness: =1
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(39, 113, 194, 1)
            FocusedBorderThickness: =2
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |
                =UpdateContext({showMCPEPopupBox: true});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Edit CPE"
            Visible: =showSegmentPopup
            Width: =87
            X: =13
            Y: =379
            ZIndex: =75

        "Recon_Gallery As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
            BorderColor: =RGBA(204, 204, 204, 1)
            BorderThickness: =1
            Height: =232
            Items: =colSegmentRecords
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =45
            Visible: =showSegmentPopup
            Width: =676
            X: =10
            Y: =124
            ZIndex: =76

            Separator6_1 As rectangle:
                BorderColor: =RGBA(131, 24, 75, 1)
                Fill: =RGBA(230, 230, 230, 1)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =655
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            Recon_CPE_Label As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =If(IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF),"Edit CPE value.",VAR_C_DEF&"/"&VAR_P_DEF&"/"&VAR_E_DEF)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderThickness: =2
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                OnSelect: =Select(Parent)
                PaddingLeft: =2
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Tooltip: =If(IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF),"Edit CPE",VAR_C_DEF&"/"&VAR_P_DEF&"/"&VAR_E_DEF)
                Width: =67
                X: =5
                Y: =8
                ZIndex: =5

            Ins_Date_Segment As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =ThisItem.PBT_Segment_Insertion_Date
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =2
                Font: =Font.Arial
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnSelect: =Select(Parent)
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Tooltip: =ThisItem.Ins_Date_Segment
                Width: =73
                X: =203
                Y: =8
                ZIndex: =6

            segment_Buy_Amt As text:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =ThisItem.PBT_Segment_BuyAmount 
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderThickness: =2
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Format: =TextFormat.Number
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                OnSelect: =Select(Parent)
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Tooltip: =ThisItem.Buy_Amount
                Width: =48
                X: =78
                Y: =8
                ZIndex: =7

            Recon_Match_Button As button:
                BorderThickness: =1
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =RGBA(211, 66, 9, 1)
                FocusedBorderThickness: =2
                FontWeight: =FontWeight.Bold
                Height: =30
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                OnSelect: |-
                    =If(CountRows(Filter(colSegmentRecords,Ins_Date_Segment=ReconUnpaidDataTable.Selected.Unpaid_Ref_Insertion_Date))>0,Notify("Record already exists in current table"),
                    
                    UpdateIf(
                        colSegmentRecords,
                        lineNumber = Recon_Gallery.Selected.lineNumber,
                        {
                           PBT_Segment_Insertion_Date: ReconUnpaidDataTable.Selected.Unpaid_Ref_Insertion_Date,
                           PBT_Segment_IDesk_Recon: ReconUnpaidDataTable.Selected.Unpaid_Ref_IDesk_Recon_Status,
                          // Inv_Amount: ReconUnpaidDataTable.Selected.Unpaid_Ref_Payable_Net,
                           PBT_Segment_BuyAmount: Value( ReconUnpaidDataTable.Selected.Unpaid_Ref_Payable_Net),
                          // Segment_Comment: ReconUnpaidDataTable.Selected.Unpaid_Ref_Invoice_Comment,
                           PBT_TS_Received: ReconUnpaidDataTable.Selected.Unpaid_Ref_TS_Received,
                           PBT_Log_ID: Value(ID_TextInput.Text),
                           PBT_Segment_ContractID: ReconUnpaidDataTable.Selected.Unpaid_Ref_Contract_ID
                        }
                    );
                    UpdateContext({varResetDropdown: true});
                    UpdateContext({varResetDropdown: false});
                    UpdateContext({Var_Recon_Status: ReconUnpaidDataTable.Selected.Unpaid_Ref_IDesk_Recon_Status});
                    );
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Text: ="< Match"
                Tooltip: ="Fetches the data from selected buy from Prediction grid with the invoice"
                Width: =65
                X: =574
                Y: =8
                ZIndex: =8

            Recon_Cancel_Icon As icon.Add:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(255, 255, 255, 1)
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =RGBA(39, 113, 194, 1)
                Height: =30
                Icon: |
                    =Icon.Cancel
                OnSelect: |-
                    =If(IsBlank(Recon_Gallery.Selected.PBT_Log_ID), Remove(colSegmentRecords,LookUp(colSegmentRecords,lineNumber=Recon_Gallery.Selected.lineNumber)),
                    Remove(colSegmentRecords,LookUp(colSegmentRecords,PBT_Log_ID=Recon_Gallery.Selected.PBT_Log_ID)))
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: ="Remove the current row"
                Width: =26
                X: =643
                Y: =8
                ZIndex: =9

            lbl_hidden_ContractID As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =ThisItem.PBT_Segment_ContractID
                Width: =1
                Y: =5
                ZIndex: =10

            lbl_hidden_Campaign_Name As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Campaign_Name
                Width: =1
                Y: =5
                ZIndex: =11

            lbl_hidden_Idesk_Recon As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =ThisItem.PBT_Segment_IDesk_Recon
                Width: =1
                Y: =5
                ZIndex: =12

            lbl_hidden_Insertion_Month As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Insertion_Month
                Width: =1
                Y: =5
                ZIndex: =13

            lbl_hidden_Invoiced_Amt As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Invoiced_Amt
                Width: =1
                Y: =5
                ZIndex: =14

            lbl_hidden_Net_Ordered As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Net_Ordered
                Width: =1
                Y: =5
                ZIndex: =16

            lbl_hidden_Net_Payable As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Net_Payable
                Width: =1
                Y: =5
                ZIndex: =17

            lbl_hidden_Order As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Order
                Width: =1
                Y: =5
                ZIndex: =18

            lbl_hidden_Publication_Name As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Publication_Name
                Width: =1
                Y: =5
                ZIndex: =19

            lbl_hidden_Remittance_Address As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =//ThisItem.Remittance_Address
                Width: =1
                Y: =5
                ZIndex: =20

            lbl_hidden_Buy_Amount As label:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                OnSelect: =Select(Parent)
                Size: =13
                Text: =ThisItem.Buy_Amount
                Width: =1
                Y: =5
                ZIndex: =21

            Segment_Comment As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =ThisItem.PBT_Segment_Comment
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =2
                Font: =Font.Arial
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                Mode: =TextMode.MultiLine
                OnSelect: =Select(Parent)
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =9
                Tooltip: ="Please Enter Comment about the Record"
                Width: =123
                X: =354
                Y: =8
                ZIndex: =22

            Segment_Inv_Amt As text:
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =ThisItem.PBT_Segment_InvoiceAmount
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =2
                Font: =Font.Arial
                Format: =TextFormat.Number
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnSelect: =Select(Parent)
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Tooltip: ="Please Fill the Required Amount in Numbers"
                Width: =64
                X: =284
                Y: =8
                ZIndex: =23

            Recon_Dropdown As dropdown:
                AllowEmptySelection: =true
                BorderColor: =RGBA(131, 24, 75, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(246, 88, 16, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(211, 66, 9, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =ThisItem.PBT_Recon_Status
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(Invoice_FA_Status_Label.Text="" And isSegmentEdited=false,DisplayMode.Disabled, DisplayMode.Edit)
                Font: =Font.Arial
                Height: =30
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(253, 222, 207, 1)
                Italic: =true
                Items: =["YES","NO","NA","P"]
                OnSelect: =Select(Parent)
                PaddingLeft: =5
                PressedColor: =RGBA(0, 0, 0, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                Reset: =varResetDropdown
                SelectionFill: =RGBA(211, 66, 9, 1)
                Size: =7
                TabIndex: =-1
                Width: =85
                X: =483
                Y: =8
                ZIndex: =24

            Recon_TS_TextInput As text:
                Align: =Align.Center
                BorderColor: =RGBA(131, 24, 75, 1)
                Color: =RGBA(0, 0, 0, 1)
                Default: =ThisItem.PBT_TS_Received
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderThickness: =4
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(131, 24, 75, 1)
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(255, 211, 205, 1)
                OnSelect: =Select(Parent)
                PaddingLeft: =2
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =8
                Tooltip: =ThisItem.TS_Received
                Width: =65
                X: =132
                Y: =8
                ZIndex: =25

        CPE_seg_Label As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.Arial
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="CPE"
            Visible: =showSegmentPopup
            Width: =75
            X: =10
            Y: =94
            ZIndex: =77

        Label13 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="Ins Date Segment"
            Visible: =showSegmentPopup
            Width: =80
            X: =210
            Y: =94
            ZIndex: =78

        Label14 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="Buy Amt"
            Visible: =showSegmentPopup
            Width: =55
            X: =85
            Y: =94
            ZIndex: =79

        Label15 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="Inv Amt"
            Visible: =showSegmentPopup
            Width: =70
            X: =290
            Y: =94
            ZIndex: =80

        Label16 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="Segment Comment"
            Visible: =showSegmentPopup
            Width: =130
            X: =360
            Y: =94
            ZIndex: =81

        Label17 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="Ok To Pay"
            Visible: =showSegmentPopup
            Width: =90
            X: =490
            Y: =94
            ZIndex: =82

        Icon4 As icon.Add:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(102, 182, 227, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =37
            Icon: =Icon.Add
            OnSelect: |
                =If(
                    CountRows(colSegmentRecords) = 25,
                    Notify(
                        "You can add maximum 25 rows only.",
                        NotificationType.Information
                    ),
                    Set(
                        TotalLines,
                        TotalLines + 1
                    );
                    Collect(
                        colSegmentRecords,
                        {lineNumber: TotalLines}
                    )
                );
            Visible: =showSegmentPopup
            Width: =31
            X: =605
            Y: =87
            ZIndex: =83

        Icon14 As icon.Edit:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(131, 24, 75, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =28
            Icon: =If(isSegmentEdited=false, Icon.Edit,Icon.Cancel)
            OnSelect: |-
                =UpdateContext({isSegmentEdited:!isSegmentEdited});
            Tooltip: =If(isSegmentEdited=false, "Edit","Cancel edit")
            Visible: |-
                =If(showSegmentPopup=true And Invoice_FA_Status_Label.Text="TAG",true,false)
                //true
            Width: =32
            X: =640
            Y: =91
            ZIndex: =84

        Tag_Button_5 As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(0, 0, 0, 1)
            DisabledFill: =RGBA(179, 179, 179, 1)
            DisplayMode: |
                =If(((IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF)) Or Invoice_FA_Status_Label.Text="") And isSegmentEdited=false,DisplayMode.Disabled,DisplayMode.Edit)
                //DisplayMode.Disabled
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =25
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |
                =UpdateContext({showVendorModal: false});
                /*If(
                    VAR_VendorID_DEF = LookUp(
                        OOH_Log_Txn,
                        Log_ID = Value(ID_TextInput.Text),
                        Log_Vendor_ID
                    ),
                    "",
                    UpdateContext(
                        {
                            InvoiceLookupRecord: LookUp(
                                OOH_Invoice_Master,
                                Invoice_Number = hide_InvoiceID.Text && Invoice_Cease_Date = Blank()
                            )
                        }
                    );
                    Patch(
                        OOH_Invoice_Master,
                        LookUp(
                            OOH_Invoice_Master,
                            Invoice_ID = Value(InvoiceLookupRecord.Invoice_ID)
                        ),
                        {Invoice_Cease_Date: Now()}
                    );
                    // Above function will update existing record.
                Patch(
                        OOH_Invoice_Master,
                        {
                            Invoice_Number: InvoiceLookupRecord.Invoice_Number,
                            Invoice_Amount: Value(Amount_TextInput.Text),
                            Invoice_Date: InvoiceLookupRecord.Invoice_Date,
                            Invoice_File_Name: InvoiceLookupRecord.Invoice_File_Name,
                            Invoice_Vendor_ID: VAR_VendorID_DEF,
                            Invoice_Agency_ID: InvoiceLookupRecord.Invoice_Agency_ID,
                            Invoice_Insertion_Date: InvoiceLookupRecord.Invoice_Insertion_Date
                        }
                    // Above function will insert new record with empty cease date.
                    );
                    If(
                        // check if there were any errors
                        IsEmpty(Errors(OOH_Invoice_Master)),
                         // if true, go to success notification
                        "",
                     // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Invoice_Master),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );
                    
                );*/
                If(
                    !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                   /* Patch(
                        OOH_Log_Txn,
                        LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text)
                        ),
                        {
                            // Log_Vendor_ID: Value(hide_VendorID.Text),
                            Log_Publication_Code: VAR_PublicationCode_DEF,
                            Log_Publication_Name: VAR_PublicationName_DEF,
                            Log_Invoice_ContractNumber: ContractNumber_TextInput.Text,
                            Log_Invoice_ExtractedTax: Value(Tax_TextInput.Text),
                            Log_Invoice_Amount: Value(Amount_TextInput.Text),
                            Log_Invoice_Number: InvoiceNum_TextInput.Text,
                            //Log_Manual_Override:varLoggedInUser.Email,
                            Log_Validated_C: C_TextInput.Text,
                            Log_Validated_P: P_TextInput.Text,
                            Log_Validated_E: E_TextInput.Text,
                            Log_Invoice_Date: InvDate_TextInput.Text,
                            Log_Invoice_MOS: MOS_TextInput.Text,
                            Log_FA_Update_Date: Now(),
                            Log_FA_Action_Status: "TAG",
                            Log_FA_Interface_Log_Status: "FA Processed"
                        }
                    );*/
                    /*OOHChangeVendorMapping.Run(
                        ID_TextInput.Text,
                        VAR_VendorID_DEF,
                        0
                    );*/
                    Refresh(OOH_Log_Txn);
                    Refresh(OOH_Log_TXN_VIEW);
                    If(
                        // check if there were any errors
                        IsEmpty(Errors(OOH_Log_Txn)),
                         // if true, go to success notification
                        Notify(
                            "The record has been successfully patched with FA Status = TAG, Note:- Changing the Vendor will change it's corresponding FA respectively",
                            NotificationType.Success,
                            2000
                        ),
                     // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Log_Txn),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );
                    ForAll(
                        Recon_Gallery.AllItems,
                        Patch(
                            OOH_PBT_Txn,
                            {
                                PBT_Log_ID: Value(ID_TextInput.Text),
                                PBT_Insertion_Date: Now(),
                                PBT_Segment_UnpaidRef_ContractID: lbl_hidden_ContractID.Text,
                                //PBT_Is_Recon: true,
                                PBT_Segment_BuyAmount:Value(segment_Buy_Amt.Text),
                                PBT_TS_Received:Recon_TS_TextInput.Text,
                                PBT_Segment_Insertion_Date:Ins_Date_Segment.Text,
                                PBT_Segment_InvoiceAmount:Value(Segment_Inv_Amt.Text),
                                PBT_Is_Segement: true,
                                PBT_Segment_Comment: Segment_Comment.Text,
                                PBT_Recon_Status: Recon_Dropdown.Selected.Value,
                                PBT_Segment_UnpaidRef_IDesk_Recon:lbl_hidden_Idesk_Recon.Text,
                                PBT_Update_Date: Now(),
                                PBT_FA_UpdatedBy_ID: Value(hide_FA_ID.Text)
                            }
                        )
                    );
                    ClearCollect(
                        colSegmentRecords,
                        {
                            lineNumber: 1,
                            PBT_Log_ID: 0,
                            PBT_Segment_IDesk_Recon: "",
                            PBT_Segment_ContractID: "",
                            Ins_Date_Segment: "",
                            TS_Received: "",
                            Buy_Amount: "",
                            Inv_Amount: "",
                            Segment_Comment: ""
                        }
                    );
                    UpdateContext({showSegmentPopup: false});
                    UpdateContext({isSegmentEdited: false});
                    Clear(ColSegmentUnpaidData);
                    /*If(
                        ROWNUM >= Last(SelectedItems).rowNumber,
                        "",
                        UpdateContext({ROWNUM: ROWNUM + 1});
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath
                                )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GMUSA-KineticFinanceAutomation",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-KineticFinanceAutomation",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-KineticFinanceAutomation",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-KineticFinanceAutomation",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            Notify(
                                "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                NotificationType.Information,
                                2000
                            )
                        );
                        Refresh(OOH_Log_Txn);
                        UpdateContext(
                            {
                                VAR_VendorID_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Vendor_ID
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Name
                                ),
                                VAR_PublicationName_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Name
                                ),
                                VAR_PublicationCode_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Code
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_ContractNum_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_ContractNumber
                                )
                            }
                        );
                        Reset(ContractNumber_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            }
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(InvoiceNum_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(InvDate_TextInput_initial);
                        Reset(ID_TextInput);
                    ) */,
                    If(
                        IsBlank(InvDate_TextInput_initial.Text),
                        Notify(
                            "Invoice Date Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(InvoiceNum_TextInput.Text),
                        Notify(
                            "Invoice Number Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(MOS_TextInput_initial.Text),
                        Notify(
                            "Insertion Month Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(E_TextInput.Text),
                        Notify(
                            "Estimate Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(P_TextInput.Text),
                        Notify(
                            "Product Code Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(C_TextInput.Text),
                        Notify(
                            "Client Code Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(Amount_TextInput.Text),
                        Notify(
                            "Amount Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(InvoiceNum_TextInput.Text),
                        Notify(
                            "Invoice Number Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(Vendor_TextInput.Text),
                        Notify(
                            "Vendor Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                   /* Notify(
                        "Comment has been successfully added for this record",
                        NotificationType.Success,
                        2000
                    );*/
                    
                );
                Reset(Checkbox_Amount);
                Reset(Checkbox_Invoice);
                Reset(Checkbox_MOS);
                Reset(ViewCommentS9Input);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =8
            Text: ="TAG"
            Tooltip: =If(IsBlank(VAR_C_DEF)Or IsBlank(VAR_P_DEF) Or IsBlank(VAR_E_DEF),"The value of C P Or E is missing/invalid.","")
            Visible: =showSegmentPopup
            Width: =105
            X: =762
            Y: =21
            ZIndex: =85

        Label14_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(179, 179, 179, 1)
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =8
            Text: ="TS Received"
            Visible: =showSegmentPopup
            Width: =70
            X: =140
            Y: =94
            ZIndex: =88

    grpEditMCPEPopup_1 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =104

        rct_EditMCPE_Back As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .6)
            Height: =768
            Visible: =showMCPEPopupBox
            Width: =688
            ZIndex: =92

        rct_EditMCPE_Top As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(204, 204, 204, 1)
            Height: =189
            Visible: =showMCPEPopupBox
            Width: =393
            X: =150
            Y: =199
            ZIndex: =93

        txt_Edit_M As text:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =VAR_M_DEF
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Height: =30
            HoverBorderColor: =RGBA(131, 24, 75, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =false
            Width: =140
            X: =197
            Y: =225
            ZIndex: =94

        txt_Edit_P As text:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =VAR_P_DEF
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Height: =30
            HoverBorderColor: =RGBA(131, 24, 75, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =showMCPEPopupBox
            Width: =140
            X: =380
            Y: =225
            ZIndex: =95

        txt_Edit_C As text:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =VAR_C_DEF
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Height: =30
            HoverBorderColor: =RGBA(131, 24, 75, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =showMCPEPopupBox
            Width: =140
            X: =197
            Y: =225
            ZIndex: =96

        txt_Edit_E As text:
            BorderColor: =RGBA(131, 24, 75, 1)
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 1)
            Default: =VAR_E_DEF
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Height: =30
            HoverBorderColor: =RGBA(131, 24, 75, 1)
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(255, 211, 205, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =showMCPEPopupBox
            Width: =140
            X: =197
            Y: =283
            ZIndex: =97

        lbl_EditMCPE_M As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =30
            Size: =13
            Text: |-
                ="M :"
            Visible: =false
            Width: =35
            X: =158
            Y: =225
            ZIndex: =98

        lbl_EditMCPE_E As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =30
            Size: =13
            Text: |-
                ="E :"
            Visible: =showMCPEPopupBox
            Width: =32
            X: =162
            Y: =283
            ZIndex: =99

        lbl_EditMCPE_C As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =30
            Size: =13
            Text: |-
                ="C :"
            Visible: =showMCPEPopupBox
            Width: =32
            X: =162
            Y: =225
            ZIndex: =100

        lbl_EditMCPE_P As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =30
            Size: =13
            Text: |-
                ="P :"
            Visible: =showMCPEPopupBox
            Width: =32
            X: =345
            Y: =225
            ZIndex: =101

        btn_EditMCPE_Save As button:
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |
                =Patch(
                    OOH_Log_Txn,
                    LookUp(
                        OOH_Log_Txn,
                        Log_ID = Value(ID_TextInput.Text)
                    ),
                    {
                        Log_Validated_C: txt_Edit_C.Text,
                        Log_Validated_P: txt_Edit_P.Text,
                        Log_Validated_E: txt_Edit_E.Text,
                        Log_FA_Update_Date: Now(),
                        Log_FA_UpdateBy_ID: Value(hide_FA_ID.Text)
                    }
                );
                Refresh(OOH_Log_Txn);
                Refresh(OOH_Log_TXN_VIEW);
                UpdateContext(
                    {
                        VAR_E_DEF: LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Validated_E
                        ),
                        VAR_C_DEF: LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Validated_C
                        ),
                        VAR_P_DEF: LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text),
                            Log_Validated_P
                        )
                    }
                );
                Notify(
                    "The MCPE Updated successfully.",
                    NotificationType.Success,
                    2000
                );
                UpdateContext({showMCPEPopupBox: false});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Save"
            Visible: =showMCPEPopupBox
            Width: =100
            X: =420
            Y: =339
            ZIndex: =102

        btn_EditMCPE_Cancel As button:
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(39, 113, 194, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showMCPEPopupBox:false});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Cancel"
            Visible: =showMCPEPopupBox
            Width: =100
            X: =300
            Y: =339
            ZIndex: =103

        Icon_EditMCPE_Cancel As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =35
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({showMCPEPopupBox:false});
            Visible: =showMCPEPopupBox
            Width: =35
            X: =508
            Y: =152
            ZIndex: =104

    InvoicePdfViewer_1 As pdfViewer:
        Document: =varPDF.pdfurl
        Height: =684
        ShowControls: =true
        Visible: =showUnpaidPDF && showUnpaidDialog
        Width: =667
        X: =524
        Y: =31
        ZIndex: =106
        Zoom: =varZoom

    grpManualS9_Popup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =113

        rct_ManualS9_back As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(0, 0, 0, .7)
            Height: =768
            Visible: =showManualS9Popup
            Width: =700
            ZIndex: =107

        rct_ManualS9_top As rectangle:
            BorderColor: =RGBA(131, 24, 75, 1)
            Fill: =RGBA(230, 230, 230, 1)
            Height: =220
            Visible: =showManualS9Popup
            Width: =423
            X: =115
            Y: =205
            ZIndex: =108

        lbl_ManualS9_Header As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Size: =15
            Text: ="Confirm!"
            Visible: =showManualS9Popup
            Width: =192
            X: =145
            Y: =220
            ZIndex: =109

        btn_ManualS9_Cancel As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({showManualS9Popup:false});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="Cancel"
            Visible: =showManualS9Popup
            Width: =96
            X: =303
            Y: =370
            ZIndex: =110

        btn_ManualS9_Save As button:
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(211, 66, 9, 1)
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(211, 66, 9, 1), -20%)
            OnSelect: |-
                =UpdateContext({TempFA_Mapping_Ref_Data: Blank()});
                UpdateContext({showVendorModal: false});
                If(
                    VAR_VendorID_DEF = LookUp(
                        OOH_Log_Txn,
                        Log_ID = Value(ID_TextInput.Text),
                        Log_Vendor_ID
                    ),
                    "",
                    UpdateContext(
                        {
                            InvoiceLookupRecord: LookUp(
                                OOH_Invoice_Master,
                                Invoice_Number = hide_InvoiceID.Text && Invoice_Cease_Date = Blank()
                            )
                        }
                    );
                    Patch(
                        OOH_Invoice_Master,
                        LookUp(
                            OOH_Invoice_Master,
                            Invoice_ID = Value(InvoiceLookupRecord.Invoice_ID)
                        ),
                        {Invoice_Cease_Date: Now()}
                    );
                    // Above function will update existing record.
                Patch(
                        OOH_Invoice_Master,
                        {
                            Invoice_Number: InvoiceLookupRecord.Invoice_Number,
                            Invoice_Amount: Value(Amount_TextInput.Text),
                            Invoice_Date: InvoiceLookupRecord.Invoice_Date,
                            Invoice_File_Name: InvoiceLookupRecord.Invoice_File_Name,
                            Invoice_Vendor_ID: VAR_VendorID_DEF,
                            Invoice_Agency_ID: InvoiceLookupRecord.Invoice_Agency_ID,
                            Invoice_Insertion_Date: InvoiceLookupRecord.Invoice_Insertion_Date
                        }
                    // Above function will insert new record with empty cease date.
                    );
                    If(
                        // check if there were any errors
                        IsEmpty(Errors(OOH_Invoice_Master)),
                         // if true, go to success notification
                        "",
                     // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Invoice_Master),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );
                    /*ClearCollect(
                        Col_TempFA_Mapping_Ref_Data,
                        LookUp(
                            OOH_FA_Mapping_Ref,
                            FA_Map_FA_ID = Value(hide_FA_ID.Text) && FA_Map_Vendor_ID = Value(hide_VendorID.Text) && FA_Map_Agency_ID = Value(hide_AgencyID.Text)
                        )
                    );
                     // Above funcion will get all the related records from mapping table
                If(
                        CountRows(Col_TempFA_Mapping_Ref_Data) = 0 && !IsBlank(hide_FA_ID.Text) && !IsBlank(VAR_VendorID_DEF) && !IsBlank(hide_AgencyID.Text),
                        Patch(
                            OOH_FA_Mapping_Ref,
                            {
                                FA_Map_Agency_ID: Value(hide_AgencyID.Text),
                                FA_Map_FA_ID: Value(hide_FA_ID.Text),
                                FA_Map_Vendor_ID: VAR_VendorID_DEF,
                                FA_Map_Insertion_Date: Now()
                            }
                        ),
                        ""
                    );
                    If(
                        // check if there were any errors
                        IsEmpty(Errors(OOH_FA_Mapping_Ref)),
                         // if true, go to success notification
                        "",
                     // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_FA_Mapping_Ref),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );*/
                     // The above function will update Mapping refrences in OOH_FA_Mapping_Ref table.
                );
                If(
                    !IsBlank(Vendor_TextInput.Text) And !IsBlank(InvoiceNum_TextInput.Text) And !IsBlank(Amount_TextInput.Text) And !IsBlank(C_TextInput.Text) And !IsBlank(P_TextInput.Text) And !IsBlank(E_TextInput.Text) And !IsBlank(MOS_TextInput.Text) And !IsBlank(InvDate_TextInput.Text),
                    Patch(
                        OOH_Log_Txn,
                        LookUp(
                            OOH_Log_Txn,
                            Log_ID = Value(ID_TextInput.Text)
                        ),
                        {
                            // Log_Vendor_ID: Value(hide_VendorID.Text),
                            Log_Publication_Code: VAR_PublicationCode_DEF,
                            Log_Publication_Name: VAR_PublicationName_DEF,
                            Log_Invoice_ContractNumber: ContractNumber_TextInput.Text,
                            Log_Invoice_ExtractedTax: Value(Tax_TextInput.Text),
                            Log_Invoice_Amount: Value(Amount_TextInput.Text),
                            Log_Invoice_Number: InvoiceNum_TextInput.Text,
                            //Log_Manual_Override:varLoggedInUser.Email,
                            Log_Validated_C: C_TextInput.Text,
                            Log_Validated_P: P_TextInput.Text,
                            Log_Validated_E: E_TextInput.Text,
                            Log_Invoice_Date: InvDate_TextInput.Text,
                            Log_Invoice_MOS: MOS_TextInput.Text,
                            Log_FA_Update_Date: Now(),
                            Log_FA_Action_Status: "MANUAL - S9",
                            Log_FA_Interface_Log_Status: "FA Processed"
                        }
                    );
                    OOHChangeVendorMapping.Run(
                        ID_TextInput.Text,
                        VAR_VendorID_DEF,
                        0
                    );
                    Refresh(OOH_Log_Txn);
                Refresh(OOH_Log_TXN_VIEW);
                    If(
                        // check if there were any errors
                        IsEmpty(Errors(OOH_Log_Txn)),
                         // if true, go to success notification
                        Notify(
                            "The record has been successfully patched with FA Status = MANUAL-S9, Note:- Changing the Vendor will change it's corresponding FA respectively",
                            NotificationType.Success,
                            2000
                        ),
                     // else, show any error message
                        Notify(
                            Concat(
                                Errors(OOH_Log_Txn),
                                Column & ": " & Message
                            ),
                            NotificationType.Error
                        )
                    );
                    If(
                        ROWNUM >= Last(SelectedItems).rowNumber,
                        "",
                        UpdateContext({ROWNUM: ROWNUM + 1});
                        UpdateContext(
                            {
                                PDFLink: LookUp(
                                    SelectedItems,
                                    rowNumber = ROWNUM,
                                    Log_SP_FilePath
                                )
                            }
                        );
                        If(
                            !IsBlank(
                                Find(
                                    "/GMUSA-KineticFinanceAutomation",
                                    PDFLink
                                )
                            ),
                            UpdateContext(
                                {
                                    varPDF: OOHShowPDFDetails.Run(
                                        Substitute(
                                            Concat(
                                                FirstN(
                                                    Split(
                                                        Mid(
                                                            PDFLink,
                                                            Find(
                                                                "/GMUSA-KineticFinanceAutomation",
                                                                PDFLink
                                                            )
                                                        ),
                                                        "/"
                                                    ).Result,
                                                    CountRows(
                                                        Split(
                                                            Mid(
                                                                PDFLink,
                                                                Find(
                                                                    "/GMUSA-KineticFinanceAutomation",
                                                                    PDFLink
                                                                )
                                                            ),
                                                            "/"
                                                        ).Result
                                                    ) - 1
                                                ),
                                                Result & "/"
                                            ),
                                            "/GMUSA-KineticFinanceAutomation",
                                            ""
                                        ) & LookUp(
                                            SelectedItems,
                                            rowNumber = ROWNUM,
                                            Log_Invoice_FileName
                                        )
                                    )
                                }
                            ),
                            Notify(
                                "The PDF is not present in the GMUSA-KineticFinanceAutomation SharePoint site",
                                NotificationType.Information,
                                2000
                            )
                        );
                        Refresh(OOH_Log_Txn);
                        /*UpdateContext(
                            {
                                VAR_Remittance_Address: If(
                                    !IsBlank(
                                        LookUp(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                            Unpaid_Ref_Pay_Address
                                        )
                                    ),
                                    LookUp(
                                        OOH_Unpaid_Ref,
                                        Unpaid_Ref_Contract_ID = ContractNumber_TextInput.Text,
                                        Unpaid_Ref_Pay_Address
                                    ),
                                    Last(
                                        Filter(
                                            OOH_Unpaid_Ref,
                                            Unpaid_Ref_Publication_Code = Log_Pub_Name.Text
                                        )
                                    ).Unpaid_Ref_Pay_Address
                                )
                            }
                        );*/
                UpdateContext(
                            {
                                VAR_VendorID_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Vendor_ID
                                )
                            }
                        );
                        UpdateContext(
                            {
                                VAR_Vendor_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Name
                                ),
                                VAR_PublicationName_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Name
                                ),
                                VAR_PublicationCode_DEF: LookUp(
                                    OOH_Vendor_Master,
                                    Vendor_ID = Value(hide_VendorID.Text),
                                    Vendor_Pub_Code
                                )
                            }
                        );
                        Reset(Vendor_TextInput);
                        UpdateContext(
                            {
                                VAR_ContractNum_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_ContractNumber
                                )
                            }
                        );
                        Reset(ContractNumber_TextInput);
                        UpdateContext(
                            {
                                VAR_C_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_C
                                )
                            }
                        );
                        Reset(C_TextInput);
                        UpdateContext(
                            {
                                VAR_P_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_P
                                )
                            }
                        );
                        Reset(P_TextInput);
                        UpdateContext(
                            {
                                VAR_E_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Validated_E
                                )
                            }
                        );
                        Reset(E_TextInput);
                        UpdateContext(
                            {
                                VAR_MOS_DEF: LookUp(
                                    OOH_Log_Txn,
                                    Log_ID = Value(ID_TextInput.Text),
                                    Log_Invoice_MOS
                                )
                            }
                        );
                        Reset(MOS_TextInput_initial);
                        Reset(Client_Name_TextInput);
                        Reset(IO_TextInput);
                        Reset(PCID_TextInput);
                        Reset(InvoiceNum_TextInput);
                        Reset(Amount_TextInput);
                        Reset(Tax_TextInput);
                        Reset(InvDate_TextInput_initial);
                        Reset(ID_TextInput);
                    ),
                    If(
                        IsBlank(InvDate_TextInput_initial.Text),
                        Notify(
                            "Invoice Date Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(MOS_TextInput_initial.Text),
                        Notify(
                            "Insertion Month Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(E_TextInput.Text),
                        Notify(
                            "Estimate Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(P_TextInput.Text),
                        Notify(
                            "Product Code Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(C_TextInput.Text),
                        Notify(
                            "Client Code Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(Amount_TextInput.Text),
                        Notify(
                            "Amount Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(InvoiceNum_TextInput.Text),
                        Notify(
                            "Invoice Number Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    If(
                        IsBlank(Vendor_TextInput.Text),
                        Notify(
                            "Vendor Field is Empty",
                            NotificationType.Warning
                        ),
                        ""
                    );
                    Notify(
                        "Comment has been successfully added for this record",
                        NotificationType.Success,
                        2000
                    );
                    
                );
                Reset(Checkbox_Invoice);
                Reset(Checkbox_MOS);
                Reset(Checkbox_Amount);
                Reset(ViewCommentS9Input);
                UpdateContext({showManualS9Popup:false});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =12
            Text: ="OK"
            Visible: =showManualS9Popup
            Width: =96
            X: =420
            Y: =370
            ZIndex: =111

        Icon_ManualS9_Close As icon.CancelBadge:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =30
            Icon: =Icon.CancelBadge
            OnSelect: |
                =UpdateContext({showManualS9Popup:false});
            Visible: =showManualS9Popup
            Width: =29
            X: =507
            Y: =170
            ZIndex: =112

        lbl_ManualS9_Message As label:
            BorderColor: =RGBA(131, 24, 75, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =50
            Size: =13
            Text: ="Please ensure you are tagging this in PBT manually."
            Visible: =showManualS9Popup
            Width: =365
            X: =145
            Y: =270
            ZIndex: =113

